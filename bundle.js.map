{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/config-create.js","src/providers.js","src/file.js","src/trace.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/index.js","src/baseCode.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        let write = global.write;\n        if(options.noecho){\n            write = () => {};\n        }\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.error(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if([200, 201, 202, 203, 204].includes(response.statusCode) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) await opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    static async keepalive(func, inputData, {chunksize = 20, observe = async _=>_, progress = configObject.globalProgress} = {}){\n        let total = inputData ? inputData.length : func.length;\n        let i = 0;\n        let createPromise = () => {\n            let ret;\n            if(i >= total) return [];\n            if(inputData){\n                ret = [i, func(inputData[i])];\n            }else{\n                ret = [i, func[i]()];\n            }\n\n            i++;\n            return ret;\n        }\n\n        let values = [];\n        let finished = 0;\n        if(progress) process.stderr.write(\"\\n\");\n        let threads = [...this.range(chunksize)].map(async whichThread => {\n            while(true){\n                let [i, currentPromise] = createPromise();\n                if(i == undefined) break;\n                values[i] = await observe(await currentPromise);\n                if(progress) this.drawProgress(++finished, total);\n            }\n        });\n        await Promise.all(threads);\n        if(progress) process.stderr.write(\"\\n\");\n\n\n        return values;\n    }\n\n    static *range(start, end){\n        if(end === undefined){\n            end = start;\n            start = 0;\n        }\n        while(start < end) yield start++;\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        return this.indexPath(env, path);\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        //Create a copy of the options in case we need to have a special first request\n        let start = opts.start || 1;\n        let initOpts = {...opts};\n        if(opts.pageSize){\n            initOpts.qs = {...opts.qs};\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\n        }\n\n        let json = await this.makeAPIRequest(initOpts);\n\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = await this.keepalive(\n            this.makeAPIRequest,\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\n                .map(i => ({...opts, path_full: linkToPage(i)})),\n            {chunksize: opts.chunksize, observe: opts.observe},\n        );\n        if(start == 1){\n            allResults.unshift(json);\n        }\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function* zip(...items){\n    let iters = items.map(x => x[Symbol.iterator]());\n\n    for(;;){\n        let r = [];\n        for(let i of iters){\n            let next = i.next()\n            if(next.done) return;\n            r.push(next.value);\n        }\n        yield r;\n    }\n}\n\nexport async function* unordered(proms){\n    let encapsulatedPromises = proms.map(async (x, i) => [i, await x]);\n    while(encapsulatedPromises.length > 0){\n        let [ind, result] = await Promise.race(encapsulatedPromises.filter(x => x));\n        yield result;\n\n        encapsulatedPromises[ind] = undefined;\n    }\n}\n","import {configObject} from \"./config.js\";\nimport {join, basename} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository (empty for N/A)?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function loadLocals(path, Class){\n    let basePath = configObject.repodir;\n    let objs = (await readdir(basePath))\n        .filter(name => name.includes(path))\n        .filter(name => !basename(name).startsWith(\".\"))\n        .map(name => new Class({path: name}));\n    return objs;\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let objs = await loadLocals(path, Class);\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n\n    if(canSelectNone) objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite file)\"}} {red ${this.sizeHR}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n\n    get sizeHR(){\n        let units = [\"B\", \"K\", \"M\", \"G\", \"T\"];\n\n        let unitIdx = 0;\n\n        let size = this.size;\n        while(size > 1000){\n            size /= 1024;\n            unitIdx++;\n        }\n\n        if(size > 100){\n            size = Math.round(size);\n        }else{\n            size = Math.round(size * 10) / 10;\n        }\n\n        return size + units[unitIdx];\n    }\n\n    get instancesList() {\n        let instances = [];\n        for(let [key, val] of Object.entries(this.instances)){\n            let n = {id: key};\n            Object.assign(n, val);\n            instances.push(n);\n        }\n        return instances;\n    }\n\n    static rslURL(instance){\n        return `rsl://${instance.storageLocationName}/${instance.name}`;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getArtifact(env, artifact, jobid){\n    let path = `/jobs/${jobid}/artifacts/${artifact}`;\n    let art = lib.makeAPIRequest({\n        env, path,\n    }).catch(_ => null);\n\n    return await art;\n}\n\nexport async function getInfo(env, jobid){\n    let trace          = getArtifact(env, \"trace\", jobid);\n    let renderedPreset = getArtifact(env, \"preset\", jobid);\n    let result         = getArtifact(env, \"result\", jobid);\n    let error          = getArtifact(env, \"error\", jobid);\n    let output         = getArtifact(env, \"output\", jobid);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport const tracelineRegex = /^(?:[\\d.]+) ([\\w ]+):(\\d+): (.+)/;\nexport function parseTraceLine(line){\n    let info = tracelineRegex.exec(line);\n\n    if(!info) {\n        return {\n            full: line,\n            parsed: false,\n            content: line,\n        };\n    }\n\n    return {\n        absoluteTime: info[0],\n        presetName: info[1],\n        lineNumber: info[2],\n        text: info[3],\n        content: info[3],\n        full: line,\n        parsed: true,\n    }\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        let info = parseTraceLine(errLine);\n        if(!info.parsed){\n            errorList.push(await findLineInFile(renderedPreset, info.lineNumber));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile};\nexport default Trace;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\nimport Preset from \"./preset.js\";\nimport {getArtifact, parseTraceLine} from \"./trace.js\";\n\nimport path from \"path\";\nimport fs from \"fs\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata?page=1p100`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow){\n            //FIXME\n            //Currently, WORKFLOW_METADATA cannot be patched via api: we need to\n            //start a ephemeral eval to upload it\n            let md = JSON.stringify(JSON.stringify(metadata.Workflow));\n            let fakePreset = {\n                code: `WORKFLOW_METADATA.update(json.loads(${md}))`\n            }\n            await this.startEphemeralEvaluateIdeal(fakePreset);\n            log(\"WFMD Patched using ephemeralEval\")\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n            log(\"MD Patched\")\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(refresh = false){\n        if(this._files && !refresh) return this._files;\n\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return this._files = new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData, isBinary=false){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        //we need to strip invalid utf8 characters from the\n                        //buffer before we encode it or the sdvi backend dies\n                        providerData: Buffer.from(preset.code, isBinary && \"binary\" || \"utf8\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\\n\");\n        let dots = 0;\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(`\\r${res.data.attributes.state}${\".\".repeat(dots++)}         `);\n            if(dots === 5){ dots = 1; }\n\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(500);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n\n    async migrate(targetEnv){\n        configObject.globalProgress = false;\n        log(`Creating paired file in ${targetEnv}`);\n\n        //Fetch metadata in parallel, we await it later\n        let _mdPromise = this.getMetadata();\n\n        let name = \"DNAP_John_Test\";\n\n        let targetAsset = await Asset.getByName(targetEnv, name);\n        if(targetAsset){\n            log(`Asset already exists ${targetAsset.chalkPrint()}`);\n            //if(configObject.script) process.exit(10);\n        }else{\n            targetAsset = await Asset.createNew(name, targetEnv);\n            log(`Asset created ${targetAsset.chalkPrint()}`);\n        }\n\n        //wait for metadata to be ready before patching\n        await _mdPromise;\n        log(\"Adding asset metadata\");\n        await targetAsset.patchMetadata(this.md);\n\n        let fileCreations = [];\n        for(let file of await this.getFiles()){\n            //Check for any valid copy-able instances\n            for(let inst of file.instancesList){\n                //We need to skip internal files\n                if(inst.storageLocationName === \"Rally Platform Bucket\") continue;\n\n                log(`Adding file: ${file.chalkPrint()}`);\n                fileCreations.push(targetAsset.addFileInstance(file, inst));\n            }\n        }\n        await Promise.all(fileCreations);\n    }\n\n    async addFileInstance(file, inst, tagList = []){\n        let newInst = {\n            uri: File.rslURL(inst),\n            name: inst.name,\n            size: inst.size,\n            lastModified: inst.lastModified,\n            storageLocationName: inst.storageLocationName,\n        };\n\n        let request = lib.makeAPIRequest({\n            env: this.remote, path: `/files`, method: \"POST\",\n\n            payload: {\n                data: {\n                    type: \"files\",\n                    attributes: {\n                        label: file.label,\n                        tagList,\n                        instances: {\n                            \"1\": newInst,\n                        }\n                    },\n                    relationships: {\n                        asset: {\n                            data: {\n                                id: this.id,\n                                type: \"assets\"\n                            },\n                        },\n                    },\n                }\n            }\n        });\n\n\n        try{\n            let fileData = await request;\n            let newFile = new File({data: fileData.data, remote: this.remote, parent: this})\n            if(configObject.script) console.log(inst.uri, newFile.instancesList[0].uri);\n        }catch(e){\n            log(chalk`{red Failed file: ${file.chalkPrint()}}`)\n        }\n    }\n\n    async downloadFile(label, destFolder){\n        let files = await this.getFiles();\n\n        let file = files.findByName(label)\n\n        let c = await file.getContent();\n\n        if(destFolder){\n            let filePath = path.join(destFolder, file.instancesList[0].name);\n            fs.writeFileSync(filePath, c);\n        }else{\n            console.log(c);\n        }\n    }\n    async deleteFile(label){\n        let files = await this.getFiles();\n        let file = files.findByName(label);\n        if(!file) return false;\n        await file.delete(false);//mode=forget\n        return true;\n    }\n\n    async grep(text, {artifact = \"trace\", nameOnly = false, ordering = null}){\n        async function* reorderPromises(p){\n            ////yield in order we got it\n            //yield* p[Symbol.iterator]();\n            ////yield in order of first to finish\n            //yield* unordered(p);\n\n            //yield in chronological order\n            let k = await Promise.all(p);\n            yield* k.sort((\n                [e1, _a],\n                [e2, _b]\n            ) => {\n                return e1.attributes.completedAt - e2.attributes.completedAt;\n            });\n        }\n\n\n        elog(\"Reading jobs...\");\n        let r = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n        elog(\"Getting job artifacts...\");\n\n        function highlight(line, text){\n            let parts = line.split(text);\n            return parts.join(chalk`{blue ${text}}`);\n        }\n\n        function parseLine(x){\n            if(artifact === \"trace\"){\n                return parseTraceLine(x);\n            }else{\n                //fake the output from parseTraceLine to make it look right\n                return {content: x};\n            }\n        }\n\n        //let evals = r.filter(x => x.attributes.providerTypeName === \"SdviEvaluate\");\n        let evals = r;\n        let zipped = evals.map(async x => [x, await getArtifact(this.remote, artifact, x.id)]);\n        for await(let [e, trace] of reorderPromises(zipped)){\n            if(!trace) continue;\n\n            let lines = trace.split(\"\\n\").map(parseLine);\n            let matching = lines.filter(x => x.content.includes(text));\n            if(matching.length > 0){\n                let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n                if(nameOnly){\n                    log(chalk`{red ${preset.name}} ${e.id} {blue ${matching.length}} matche(s)`);\n                }else if(configObject.rawOutput){\n                    console.log(matching.map(x => chalk`{red ${preset.name}}:${highlight(x.content, text)}`).join(\"\\n\"));\n                }else{\n                    log(chalk`{red ${preset.name}} ${e.id}`);\n                    log(matching.map(x => `  ${highlight(x.content, text)}`).join(\"\\n\"));\n                }\n            }\n        }\n    }\n\n    async analyze(){\n        await lib.makeAPIRequest({\n            env: this.remote, path: \"/v1.0/analysis\",\n            method: \"POST\",\n            payload: {\n                \"movieId\": this.id,\n                \"latestVersion\": true,\n            },\n        });\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {loadLocals} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env, shouldTest = true){\n        await this.uploadCodeToEnv(env, true, shouldTest);\n    }\n    async save(env, shouldTest = true){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env, shouldTest);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        let code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n\n        //match header like \n        // # c: d\n        // # b\n        // # a\n        // ##################\n        let headerRegex = /(^# .+[\\r\\n]+)+#+[\\r\\n]+/gim;\n        let hasHeader = headerRegex.exec(code);\n\n        if(hasHeader){\n            this.header = code.substring(0, hasHeader[0].length - 1);\n            code = code.substring(hasHeader[0].length);\n        }\n\n        return this.code = code;\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s*?([\\w\\d. \\/]+).*$/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() === \"NOUPLOAD\"){\n            write(chalk`code skipped {yellow :)}, `);\n            return;\n        }\n\n        let code = this.code;\n        let headers = {};\n\n        let providerName = this.relationships?.providerType?.data?.name;\n        if(!configObject.skipHeader && (providerName === \"SdviEvaluate\" || providerName === \"SdviEvalPro\")){\n            write(chalk`generate header, `);\n            let repodir = configObject.repodir;\n            let localpath = this.path.replace(repodir, \"\");\n            if(localpath.startsWith(\"/\")) localpath = localpath.substring(1);\n\n            try{\n                let {stdout: headerText} = await spawn(\n                    {noecho: true},\n                    \"sh\",\n                    [\n                        path.join(configObject.repodir, `bin/header.sh`),\n                        moment(Date.now()).format(\"ddd YYYY/MM/DD hh:mm:ssa\"),\n                        localpath,\n                    ]\n                );\n                code = headerText + code;\n                write(chalk`header ok, `);\n            }catch(e){\n                write(chalk`missing unix, `);\n            }\n        }\n\n        //binary presets\n        if(providerName == \"Vantage\"){\n            code = Buffer.from(code).toString(\"base64\");\n            headers[\"Content-Transfer-Encoding\"] = \"base64\";\n        }\n\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: code, method: \"PUT\", fullResponse: true, timeout: 10000,\n            headers,\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async deleteRemoteVersion(env, id=null){\n        if(lib.isLocalEnv(env)) return false;\n        if(!id){\n            let remote = await Preset.getByName(env, this.name);\n            id = remote.id;\n        }\n\n        return await lib.makeAPIRequest({\n            env, path: `/presets/${id}`,\n            method: \"DELETE\",\n        });\n    }\n\n    async delete(){\n        if(lib.isLocalEnv(this.remote)) return false;\n\n        return await this.deleteRemoteVersion(this.remote, this.id);\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                if(this.relationships.tagNames){\n                    payload.relationships = {tagNames: this.relationships.tagNames};\n                }\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode == 500){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return;\n                }\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n\n    parseHeaderInfo(){\n        if(!this.header) return null;\n        let abs = {\n            built:   /Built On:(.+)/.exec(this.header)[1]?.trim(),\n            author:  /Author:(.+)/.exec(this.header)[1]?.trim(),\n            build:   /Build:(.+)/.exec(this.header)[1]?.trim(),\n            version: /Version:(.+)/.exec(this.header)[1]?.trim(),\n            branch:  /Branch:(.+)/.exec(this.header)[1]?.trim(),\n            commit:  /Commit:(.+)/.exec(this.header)[1]?.trim(),\n            local:   /Local File:(.+)/.exec(this.header)[1]?.trim(),\n        }\n\n        let tryFormats = [\n            [true,  \"ddd MMM DD HH:mm:ss YYYY\"],\n            [false, \"ddd YYYY/MM/DD LTS\"],\n        ];\n\n        for(let [isUTC, format] of tryFormats){\n            let date;\n            if(isUTC){\n                date = moment.utc(abs.built, format)\n            }else{\n                date = moment(abs.built, format)\n            }\n\n            if(!date.isValid()) continue;\n\n            abs.offset = date.fromNow();\n\n            break;\n        }\n\n        return abs;\n    }\n\n    async printRemoteInfo(env){\n        let remote = await Preset.getByName(env, this.name);\n        await remote.downloadCode();\n        let i = remote.parseHeaderInfo();\n\n        if(i){\n            log(chalk`\n                ENV: {red ${env}}, updated {yellow ~${i.offset}}\n                Built on {blue ${i.built}} by {green ${i.author}}\n                From ${i.build || \"(unknown)\"} on ${i.branch} ({yellow ${i.commit}})\n            `.replace(/^[ \\t]+/gim, \"\").trim());\n        }else{\n            log(chalk`No header on {red ${env}}`);\n        }\n    }\n\n    async getInfo(envs){\n        await this.printDepends();\n        for(let env of envs.split(\",\")){\n            await this.printRemoteInfo(env);\n        }\n    }\n\n    async printDepends(indent=0, locals=null, seen={}){\n        let includeRegex = /@include \"(.+)\"/gim;\n        //let includeRegex = /@include/g;\n\n        let includes = [];\n\n        let inc;\n        while(inc = includeRegex.exec(this.code)){\n            includes.push(inc[1]);\n        }\n\n        //let includes = this.code\n            //.split(\"\\n\")\n            //.map(x => includeRegex.exec(x))\n            //.filter(x => x)\n            //.map(x => x[1]);\n        //log(includes);\n\n        if(!locals){\n            locals = new Collection(await loadLocals(\"silo-presets\", Preset));\n        }\n\n        log(Array(indent + 1).join(\" \") + \"- \" + this.name);\n\n        for(let include of includes){\n            if(seen[include]){\n                log(Array(indent + 1).join(\" \") + \"  - (seen) \" + include);\n            }else{\n                seen[include] = true\n                let file = await locals.findByName(include);\n                if(file){\n                    await file.printDepends(indent + 2, locals, seen);\n                }else{\n                    log(Array(indent + 1).join(\" \") + \"  - (miss) \" + include);\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async deleteTo(env){\n         for(let preset of this.presets){\n            try{\n                await preset.deleteRemoteVersion(env);\n            }catch(e){log(e);}\n         }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","require(\"source-map-support\").install();\n\nimport {lib, UnconfiguredEnvError} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nimport fs from \"fs\";\nimport {configObject} from \"./config.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            let repodir = configObject.repodir;\n            if(repodir){\n                try{\n                    fs.lstatSync(repodir).isDirectory();\n                    return true;\n                }catch(e){\n                    return false;\n                }\n            }else{\n                throw new UnconfiguredEnvError();\n            }\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"copy\" | \"move\" | \"delete\",\n\n            \"source\": {\n                \"optional\": true | false,\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"labels\": [\"<label>\" | \"*\", ],\n                    \"tags\": [\"<tag>\", ],\n                    \"storageSet\": [\"<storage location name>\" | \"*\", ],    # only valid for move & delete tasks\n                    \"expandCollections\": true | false\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>/<path>/<file>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            },\n\n            \"destination\": {\n                \"name\": \"<path within the storage location>/<filename>\",\n                \"overwrite\": \"never\" | \"notInAnyAsset\" | \"notInOtherAsset\" | \"always\",\n                \"storageMetadata\": {\"<key>\": \"<value>\",...} | \"<sourceStorageMetadata>\",\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"storage\": \"<storage location name>\",\n                    \"newLabel\": \"<fileLabel>\",\n                    \"newTags\": [\"<tag>\", \"<tag>\"],\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            }\n        },\n\n        {\n            <another task>\n        },\n\n        {\n            <another task>\n        },\n\n        ...\n\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`, SdviEvalPro: `'''\nname: {name}\n'''\n\nimport rally\n\ndef evalMain(context):\n    # code here`,\n};\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig, loadConfigFromArgs} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace, findLineInFile, getInfo as getTraceInfo} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        if(!args[\"only-metadata\"]) preset.saveLocalFile();\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $deleteRemote(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n\n        log(chalk`Deleting ${preset2.chalkPrint(true)}.`);\n\n        log(await preset2.delete());\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async $info(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let file = this.files[0];\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        await preset.getInfo(args.env);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset({canSelectNone: false});\n        let passNext = await configHelpers.selectRule({purpose: \"'On Exit OK'\"});\n        let errorNext = await configHelpers.selectRule({purpose: \"'On Exit Error'\"});\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule({purpose: \"dynamic next\"})){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, args._.shift());\n    }\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n\n        }else if(args[\"delete\"]){\n            if(Array.isArray(args[\"delete\"])){\n                for(let to of args[\"delete\"]){\n                    await this.chain.deleteTo(to);\n                }\n            }else{\n                await this.chain.deleteTo(args[\"delete\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                preset.code      = preset.code.replace(/[\\r\\n ]/, \"\");\n                otherPreset.code = (otherPreset.code || \"\").replace(/[\\r\\n ]/, \"\");\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n                }\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list, deleteRemote\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment] [post actions]`)\n    @param(\"action\", \"The action to perform. Can be calc or make.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain. If this is make, then supply '-' to read from stdin\")\n    @param(\"post actions\", \"The action to perform on the created supply chain. See commands below\")\n    @arg(\"-e\", \"--env\", \"(calc only) environment to do the calculation on\")\n    @arg(\"~\", \"--diff\", \"(post action) Use as `--diff [env]`. List all files with differences on the given env.\")\n    @arg(\"~\", \"--to\", \"(post action) Use as `--to [env]`. Upload all objects.\")\n    @arg(\"~\", \"--delete\", \"(post action) Use as `--delete [env]`. The reverse of uploading. Only presets are supported right now.\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list or create.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n        let ln = args._.shift();\n        if(!ln){\n            log(\"is trace\");\n            let traceInfo = await parseTrace(args.env, jobId);\n\n            for(let line of traceInfo){\n                if(typeof(line) == \"string\"){\n                    log(chalk.red(line));\n                }else{\n                    printOutLine(line);\n                }\n            }\n        }else{\n            log(\"is ln\");\n            let {renderedPreset} = await getTraceInfo(args.env, jobId);\n            return findLineInFile(renderedPreset, Number(ln));\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    async silo(){\n        let s = new Silo(\"UAT\");\n\n        await s.grep();\n    },\n\n    @helpText(`create/modify asset or files inside asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Actions are create, delete, launch, addfile, metadata, show, patchMetadata, and launchEvalute, deleteFile, downloadFile, grep, analyze. You can supply multiple actions to chain them.`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`~`,  `--anon`,       chalk`Supply this if no asset is needed (used to lauch anonymous workflows)`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch and launchEvalute)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    @arg(`~`,  `--metadata`,   chalk`Metadata to use with patchMetadata. Can be string, or {white @path/to/file} for a file. Data must contain a top level key Metadata, or Workflow. Metadata will be pached into METADATA. Workflow will be patched into WORKFLOW_METADATA(not currently available)`)\n    @arg(`~`,  `--priority`,   chalk`set the priority of all launched jobs`)\n    @arg(`~`,  `--new-name`,   chalk`set the new name`)\n    @arg(`~`,  `--target-env`, chalk`migrate to the env (when using migrate)`)\n    @arg(`~`,  `--to-folder`,  chalk`Folder to download to when using downloadFile. If no folder is given, writes to stdout.`)\n    @arg(`~`,  `--artifact`,   chalk`This is the artifact to grep on. Defaults to trace. Values are \"trace\", \"preset\", \"result\", \"error\", \"output\"`)\n    @arg(`~`,  `--on`,         chalk`alias for artifact`)\n    @arg(`~`,  `--name-only`,  chalk`Only show preset name and number of matches when greping`)\n    //@arg(`~`,  `--any`,        chalk`allows grep to grep for any preset/provider, not just sdviEval`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        function getInitData(args, launchArg){\n            let initData = arrayify(args[\"init-data\"], launchArg);\n            if(initData && initData.startsWith(\"@\")){\n                let initDataFile = initData.slice(1);\n                if(initDataFile === \"-\"){\n                    log(chalk`Reading init data from {grey stdin}`);\n                    initData = readFileSync(0, \"utf-8\");\n                }else{\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initDataFile, \"utf-8\");\n                }\n            }\n\n            return initData\n        }\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, {initData, priority: args.priority})\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, {initData, priority: args.priority})\n                }\n                launchArg++;\n            }else if(arg === \"launchEvaluate\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n\n                let jobData;\n                let ephemeralEval = false;\n                let p;\n                if(jobName.startsWith(\"@\")){\n                    ephemeralEval = true;\n                    jobData = readFileSync(jobName.slice(1));\n                }else{\n                    p = await Preset.getByName(env, jobName);\n                    if(!p){\n                        throw new AbortError(`Cannot launch preset ${jobName}, does not exist (?)`);\n                    }else{\n                        log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                    }\n                }\n\n\n                if(ephemeralEval){\n                    throw new AbortError(\"could not start\");\n                    await Asset.startEphemeralEvaluateIdeal(env, p.id, initData)\n                }else{\n                    await asset.startEvaluate(p.id, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\" || arg == \"load\"){\n                if(asset.lite) asset = await Asset.getById(env, asset.id);\n                if(arg == \"show\") log(asset);\n            }else if(arg === \"metadata\" || arg === \"md\"){\n                log(await asset.getMetadata(true));\n            }else if(arg === \"migrate\"){\n                await asset.migrate(args[\"target-env\"]);\n            }else if(arg === \"patchMetadata\"){\n                let initData = arrayify(args[\"metadata\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                initData = JSON.parse(initData);\n\n                await asset.patchMetadata(initData);\n            }else if(arg === \"rename\"){\n                let newName = args[\"new-name\"];\n                let oldName = asset.name;\n                await asset.rename(newName);\n                log(chalk`Rename: {green ${oldName}} -> {green ${newName}}`);\n            }else if(arg === \"downloadfile\" || arg === \"downloadFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                await asset.downloadFile(label, args[\"to-folder\"]);\n            }else if(arg === \"deletefile\" || arg === \"deleteFile\" || arg === \"removefile\" || arg === \"removeFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                let result = await asset.deleteFile(label);\n                if(!result) {\n                    log(`Failed to delete file ${label}`);\n                }\n            }else if(arg === \"grep\") {\n                await asset.grep(args._.pop(), {\n                    artifact: args.on || args.artifact || \"trace\",\n                    nameOnly: args[\"name-only\"],\n                    ordering: null,\n                });\n            }else if(arg === \"analyze\") {\n                await asset.analyze();\n            }else{\n                log(`No usage found for ${arg}`);\n            }\n        }\n        if(configObject.rawOutput && !configObject.script) return asset;\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async getJobs(args){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: \"presetName=DCTC Add Element US Checkin\",\n            },\n        });\n\n        log(req.map(x => x.relationships.asset.data.id).join(\"\\n\"))\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test4(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                filter: `createdBefore=${Date.now() - 1000 * 160 * 24 * 60 * 60},createdSince=${Date.now() - 1000 * 170 * 24 * 60 * 60}`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n\n    async test5(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: `state=Queued,presetName=E2 P4101 - DNE Compliance Edit - US Output Deal - Edit WorkOrder`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async deleteOmneons(args){\n        let id = args._.shift();\n\n        let asset;\n        if(Number(id)) {\n            asset = await Asset.getById(\"PROD\", Number(id));\n        }else{\n            asset = await Asset.getByName(\"PROD\", id);\n        }\n\n        log(asset);\n        let f = await asset.getFiles();\n\n        for(let file of f){\n            if(file.label.includes(\"Omneon\")){\n                log(`removing ${file.label}`);\n                await file.delete();\n            }\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset({canSelectNone: false});\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule({canSelectNone: false});\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Rule\";\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        elog(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        let asset = await Asset.getByName(\"UAT\", args.name);\n        log(asset);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`Rally Tools {yellow v${packageVersion}} CLI\\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    let envs = new Set([\"LOCAL\", \"UAT\", \"DEV\", \"PROD\", \"QA\", ...Object.keys(configObject.api)]);\n\n    let proms = [];\n    for(let env of envs){\n        proms.push({env, prom: funcs.testAccess(env)});\n    }\n\n    //API Access tests\n    for(let {env, prom} of proms){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await prom;\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error.errno}}`;\n            }else{\n                resultStr = chalk`{red Internal Error: (oh no!)}`;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(typeof(argv.config) === \"string\"){\n        loadConfig(argv.config);\n    }else if(typeof(argv.config) === \"object\") {\n        loadConfigFromArgs(argv);\n    }else{\n        loadConfig();\n    }\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"script\"]){\n        configObject.script = true;\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    if(argv[\"update-immutable\"]){\n        configObject.updateImmutable = true;\n    }\n\n    if(argv[\"skip-header\"]){\n        configObject.skipHeader = true;\n    }\n\n    configObject.globalProgress = argv[\"show-progress\"] || false;\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n                process.exit(1);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n\n    process.exit(0);\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n        process.exit(1);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    loadConfig();\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","write","global","noecho","on","chunk","end","time","timestr","exitCode","log","console","process","elog","error","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","trim","AbortError","indexPath","all","opts","data","links","next","observe","numPages","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","globalProgress","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","progress","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","pageSize","page","baselink","first","linkToPage","last","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","sleep","setTimeout","zip","items","iters","r","done","value","unordered","proms","encapsulatedPromises","ind","race","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","require","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","providers","autoDefault","defaultProvider","source","sofar","input","toLowerCase","provider","loadLocals","Class","basePath","repodir","objs","basename","selectLocal","typeName","canSelectNone","objsMap","none","selectPreset","purpose","Preset","selectRule","Rule","question","def","ok","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","sizeHR","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","instances","round","units","unitIdx","instancesList","n","assign","rslURL","instance","storageLocationName","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","join","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","index","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","match","includeFilename","printOutLine","eLine","getArtifact","artifact","jobid","art","catch","getInfo","trace","output","tracelineRegex","parseTraceLine","info","full","parsed","content","absoluteTime","presetName","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","Asset","lite","metadata","normalizeMetadata","newMetadata","md","getMetadata","forceRefresh","req","patchMetadata","Workflow","fakePreset","startEphemeralEvaluateIdeal","Metadata","createNew","getFiles","refresh","_files","addFile","label","fileuris","Array","startWorkflow","jobName","initData","priority","startAnonWorkflow","preset","dynamicPresetData","isBinary","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","dots","self","state","startEvaluate","presetid","rename","newName","migrate","targetEnv","_mdPromise","targetAsset","fileCreations","inst","addFileInstance","tagList","newInst","lastModified","asset","fileData","newFile","script","downloadFile","destFolder","files","c","filePath","fs","writeFileSync","deleteFile","grep","nameOnly","ordering","reorderPromises","p","k","e1","_a","e2","_b","completedAt","highlight","parts","parseLine","evals","zipped","lines","matching","rawOutput","analyze","home","colon","siloLike","pathTransform","invertedPath","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","matches","runTest","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","shouldTest","uploadCodeToEnv","save","saved","downloadCode","headerRegex","hasHeader","header","substring","_code","v","sub","endsWith","name_regex","findStringsInCode","strings","RegExp","_path","_nameOuter","_nameInner","immutable","updateImmutable","uploadPresetData","providerName","skipHeader","headerText","moment","Date","format","grabMetadata","deleteRemoteVersion","includeMetadata","tagNames","parseHeaderInfo","abs","built","author","build","version","branch","commit","local","tryFormats","isUTC","date","utc","isValid","offset","fromNow","printRemoteInfo","printDepends","indent","locals","seen","includeRegex","inc","include","Notification","notifications","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","add","neededPresets","neededRules","notif","verbose","deleteTo","syncTo","rule","User","Tag","prefix","curated","create","notCurated","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","lstatSync","isDirectory","SdviContentMover","SdviEvaluate","SdviEvalPro","argv","argparse","string","boolean","protect","alias","printHelp","help","getFilesFromArgs","lastArg","shift","getStdin","stdin","presetsub","before","$grab","remo","$create","configHelpers","baseCode","$list","attach","$upload","funcs","$deleteRemote","preset2","$diff","tempfile","temp","extension","ptr","command","stdio","$info","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","categorizeString","defaultSubproject","tagsub","tags","tag","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","ln","traceInfo","getTraceInfo","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","silo","s","Silo","uuid","digits","random","pow","anon","launchArg","fileArg","arrayify","getInitData","initDataFile","jobData","ephemeralEval","oldName","checkSegments","allIndexBundle","segments","userMetaData","reduce","lastSegment","curSegment","startTime","endTime","getJobs","listAssets","noRelationships","listSegments","segs","test4","things","test5","test2","wfr","wfrm","test3","deleteOmneons","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","timedist","audit2","findIDs","getAssets","callid","lastResult","lastCall","assets","noop","unknownCommand","noCommand","packageVersion","prom","resultStr","errno","$main","enabled","level","defaultEnv","_old","white","exit","main","stack","module","exports"],"mappings":"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"}