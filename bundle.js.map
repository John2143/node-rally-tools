{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/index.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\r\nimport {readFileSync} from \"fs\";\r\n\r\nexport let configFile = homedir() + \"/.rallyconfig\";\r\n\r\nlet configObject;\r\nexport function loadConfig(file){\r\n    if(file) configFile = file;\r\n\r\n    configObject = {hasConfig: true};\r\n    try{\r\n        let json = readFileSync(configFile);\r\n        configObject = JSON.parse(json);\r\n        configObject.hasConfig = true;\r\n    }catch(e){\r\n        if(e.code == \"ENOENT\"){\r\n            configObject.hasConfig = false;\r\n            //ok, they should probably make a config\r\n        }else{\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n\r\nexport function setConfig(obj){\r\n    configObject = obj;\r\n}\r\n\r\nexport function getPrefix(){\r\n    if(configObject.prefix){\r\n        return configObject.prefix + \" - \";\r\n    }\r\n    return \"\";\r\n}\r\n\r\nloadConfig();\r\n\r\nexport {configObject};\r\n","\r\n//these are the help entries for each command\r\nexport let helpEntries = {};\r\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\r\n\r\n//short description\r\nexport function helpText(text){\r\n    return function(func, name){\r\n        helpEntry(name).text = text;\r\n        return func;\r\n    }\r\n}\r\n\r\n//flag type argument like -f or --file\r\nexport function arg(long, short, desc){\r\n    return function(func, name){\r\n        let args = helpEntry(name).args = helpEntry(name).args || [];\r\n        args.unshift({long, short, desc});\r\n        return func;\r\n    }\r\n}\r\n\r\n//normal argument\r\nexport function param(param, desc){\r\n    return function(func, name){\r\n        let params = helpEntry(name).params = helpEntry(name).params || [];\r\n        params.unshift({param, desc});\r\n        return func;\r\n    }\r\n}\r\n\r\n//usage string\r\nexport function usage(usage){\r\n    return function(func, name){\r\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\r\n        helpEntry(name).usage = usage;\r\n        return func;\r\n    }\r\n}\r\n\r\nexport function cachedgetter(target, key, desc){\r\n    let cachedVal;\r\n\r\n    let oldget = desc.get;\r\n    desc.get = function(){\r\n        if(cachedVal) return cachedVal;\r\n        return cachedVal = oldget.call(this);\r\n    };\r\n    desc.set = function(val){\r\n        cachedVal = val;\r\n    };\r\n}\r\n\r\nfunction findValueInCache(args, cache){\r\n    for(let [argsKey, value] of cache){\r\n        if(args.length !== argsKey.length) continue;\r\n        for(let i in argsKey){\r\n            if(args[i] !== argsKey[i]){\r\n                continue\r\n            }\r\n        }\r\n        return {found: true, value};\r\n    }\r\n    return {found: false};\r\n}\r\n\r\n//This decorator takes a function and returns a function that remembers the\r\n//  value returned by given arguments\r\nexport function cached(target, key, desc){\r\n    let oldFunc = desc.value;\r\n    let cachedValues = [];\r\n    function newFunc(...args){\r\n        let {found, value} = findValueInCache(args, cachedValues);\r\n        if(!found){\r\n            //Call the old function to find the value, then store it in the cache\r\n            value = oldFun(...args);\r\n            cachedValues.push([args, value]);\r\n        }\r\n        return value;\r\n    }\r\n    newFunc.clearCache = function(){\r\n        cachedValues = [];\r\n    }\r\n    newFunc.cachePush = function(args, value){\r\n        cachedValues.push([args, value]);\r\n    }\r\n    newFunc.remove = function(...args){\r\n        let {found, value} = findValueInCache(args, cachedValues);\r\n        if(found){\r\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...desc,\r\n        value: newFunc,\r\n    };\r\n}\r\n\r\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\r\n//function returns obj.a.b.c\r\nfunction deepAccess(obj, path){\r\n    let o = obj;\r\n    for(let key of path){\r\n        if(!o) return [];\r\n        o = o[key];\r\n    }\r\n    return o;\r\n}\r\n\r\n//This takes a class as the first argument, then adds a getter/setter pair that\r\n//corresponds to an object in this.data\r\nexport function defineAssoc(classname, shortname, path){\r\n    path = path.split(\".\");\r\n    let lastKey = path.pop();\r\n\r\n    Object.defineProperty(classname.prototype, shortname, {\r\n        get(){\r\n            return deepAccess(this, path)[lastKey];\r\n        },\r\n        set(val){\r\n            deepAccess(this, path)[lastKey] = val;\r\n        },\r\n    });\r\n}\r\n\r\nimport {spawn as cp_spawn} from \"child_process\";\r\nimport {performance} from \"perf_hooks\";\r\n\r\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\r\nexport function spawn(options, ...args){\r\n    if(typeof options !== \"object\"){\r\n        args.unshift(options);\r\n        options = {};\r\n    }\r\n    //todo options\r\n    return new Promise((resolve, reject) => {\r\n        let start = performance.now();\r\n\r\n        let stdout = \"\";\r\n        let stderr = \"\";\r\n        let cp = cp_spawn(...args);\r\n\r\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\r\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\r\n\r\n        cp.on(\"error\", reject);\r\n        cp.on(\"close\", code => {\r\n            let end = performance.now();\r\n            let time = end - start;\r\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\r\n            resolve({stdout, stderr, exitCode: code, time, timestr});\r\n        });\r\n    });\r\n}\r\n","import chalk from \"chalk\";\r\nimport {configObject, getPrefix} from \"./config.js\";\r\nimport {cached} from \"./decorators.js\";\r\nconst rp = importLazy(\"request-promise\")\r\n\r\nglobal.chalk = chalk;\r\nglobal.log      = (...text) => console.log(...text);\r\nglobal.write    = (...text) => process.stdout.write(...text);\r\nglobal.elog     = (...text) => console.log(...text);\r\nglobal.ewrite   = (...text) => process.stderr.write(...text);\r\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\r\n\r\nexport class lib{\r\n    //This function takes 2 required arguments:\r\n    // env: the environment you wish to use\r\n    // and either:\r\n    //  'path', the short path to the resource. ex '/presets/'\r\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\r\n    //\r\n    // If the method is anything but GET, either payload or body should be set.\r\n    // payload should be a javascript object to be turned into json as the request body\r\n    // body should be a string that is passed as the body. for example: the python code of a preset.\r\n    //\r\n    // qs are the querystring parameters, in a key: value object.\r\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\r\n    //\r\n    // headers are the headers of the request. \"Content-Type\" is already set if\r\n    //   payload is given as a parameter\r\n    //\r\n    // fullResponse should be true if you want to receive the request object,\r\n    //  not just the returned data.\r\n    static async makeAPIRequest({\r\n        env, path, path_full, fullPath,\r\n        payload, body, method = \"GET\",\r\n        qs, headers = {},\r\n        fullResponse = false, timeout = configObject.timeout || 20000\r\n    }){\r\n        //backwards compatability from ruby script\r\n        if(fullPath) path_full = fullPath;\r\n        //Keys are defined in environment variables\r\n        let config = configObject?.api?.[env];\r\n        if(!config) {\r\n            throw new UnconfiguredEnvError(env);\r\n        };\r\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\r\n        if(method !== \"GET\" && !configObject.dangerModify){\r\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\r\n                throw new ProtectedEnvError(env);\r\n            }\r\n        }\r\n\r\n        let rally_api_key = config.key;\r\n        let rally_api = config.url;\r\n        if(path && path.startsWith(\"/v1.0/\")){\r\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\r\n        }\r\n\r\n        path = path_full || rally_api + path;\r\n        if(payload){\r\n            body = JSON.stringify(payload, null, 4);\r\n        }\r\n        if(configObject.vvverbose){\r\n            if(payload || body){\r\n                log(payload || body);\r\n            }\r\n        }\r\n\r\n        if(payload){\r\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\r\n        }\r\n\r\n        let requestOptions = {\r\n            method, body, qs, uri: path,\r\n            timeout,\r\n            auth: {bearer: rally_api_key},\r\n            headers: {\r\n                //SDVI ignores this header sometimes.\r\n                Accept: \"application/vnd.api+json\",\r\n                ...headers,\r\n            },\r\n            simple: false, resolveWithFullResponse: true,\r\n        };\r\n\r\n        let response;\r\n        try{\r\n            response = await rp(requestOptions);\r\n            if(configObject.vverbose || configObject.vvverbose){\r\n                log(chalk`${method} @ ${response.request.uri.href}`);\r\n            }\r\n        }catch(e){\r\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\r\n                throw new APIError(response || {}, requestOptions, body);\r\n            }else{\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        //Throw an error for any 5xx or 4xx\r\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\r\n            throw new APIError(response, requestOptions, body);\r\n        }\r\n        let contentType = response.headers[\"content-type\"];\r\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\r\n\r\n        if(configObject.vvverbose){\r\n            log(response.body);\r\n        }\r\n\r\n        if(fullResponse){\r\n            return response;\r\n        }else if(isJSONResponse){\r\n            try{\r\n                return JSON.parse(response.body);\r\n            }catch(e){\r\n                log(response.body);\r\n                throw new AbortError(\"Body is not valid json: \");\r\n            }\r\n        }else{\r\n            return response.body;\r\n        }\r\n    }\r\n\r\n    //Index a json endpoint that returns a {links} field.\r\n    //This function returns the merged data objects as an array\r\n    //\r\n    //Additional options (besides makeAPIRequest options):\r\n    // - Observe: function to be called for each set of data from the api\r\n    static async indexPath(env, path){\r\n        let all = [];\r\n\r\n        let opts = typeof env === \"string\" ? {env, path} : env;\r\n        let json = await this.makeAPIRequest(opts);\r\n\r\n        let [numPages, pageSize] = this.numPages(json.links.last);\r\n        //log(`num pages: ${numPages} * ${pageSize}`);\r\n\r\n        all = [...json.data];\r\n        while(json.links.next){\r\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\r\n            if(opts.observe) await opts.observe(json.data);\r\n            all = [...all, ...json.data];\r\n        }\r\n\r\n        return all;\r\n    }\r\n\r\n    //Returns number of pages and pagination size\r\n    static numPages(str){\r\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\r\n    }\r\n\r\n    static arrayChunk(array, chunkSize){\r\n        let newArr = [];\r\n        for (let i = 0; i < array.length; i += chunkSize){\r\n            newArr.push(array.slice(i, i + chunkSize));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    static async doPromises(promises, result = [], cb){\r\n        for(let promise of promises){\r\n            let res = await promise;\r\n            result.push(res);\r\n            if(cb){\r\n                cb(res.data);\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    static clearProgress(size = 30){\r\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\r\n    }\r\n\r\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\r\n        if(size > 45) size = 45;\r\n        let pct = Number(i) / Number(max);\r\n        //clamp between 0 and 1\r\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\r\n        let numFilled = Math.floor(pct * size);\r\n        let numEmpty = size - numFilled;\r\n\r\n        this.clearProgress(size);\r\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\r\n    }\r\n\r\n    static async keepalive(func, inputData, {chunksize, observe = async _=>_} = {}){\r\n        let total = inputData ? inputData.length : func.length;\r\n        let i = 0;\r\n        let createPromise = () => {\r\n            let ret;\r\n            if(i >= total) return [];\r\n            if(inputData){\r\n                ret = [i, func(inputData[i])];\r\n            }else{\r\n                ret = [i, func[i]()];\r\n            }\r\n\r\n            i++;\r\n            return ret;\r\n        }\r\n\r\n        let values = [];\r\n        let finished = 0;\r\n        process.stderr.write(\"\\n\")\r\n        let threads = [...this.range(20)].map(async (whichThread) => {\r\n            while(true){\r\n                let [i, currentPromise] = createPromise();\r\n                if(i == undefined) break;\r\n                values[i] = await observe(await currentPromise);\r\n                this.drawProgress(++finished, total);\r\n            }\r\n        });\r\n        await Promise.all(threads);\r\n        process.stderr.write(\"\\n\")\r\n\r\n\r\n        return values;\r\n    }\r\n\r\n    static *range(start, end){\r\n        if(end === undefined){\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        while(start < end) yield start++;\r\n    }\r\n\r\n\r\n    //Index a json endpoint that returns a {links} field.\r\n    //\r\n    //This function is faster than indexPath because it can guess the pages it\r\n    //needs to retrieve so that it can request all assets at once.\r\n    //\r\n    //This function assumes that the content from the initial request is the\r\n    //first page, so starting on another page may cause issues. Consider\r\n    //indexPath for that.\r\n    //\r\n    //Additional opts, besides default indexPath opts:\r\n    // - chunksize[10]: How often to break apart concurrent requests\r\n    static async indexPathFast(env, path){\r\n        let opts = typeof env === \"string\" ? {env, path} : env;\r\n        //Create a copy of the options in case we need to have a special first request\r\n        let start = opts.start || 1;\r\n        let initOpts = {...opts};\r\n        if(opts.pageSize){\r\n            initOpts.qs = {...opts.qs};\r\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\r\n        }\r\n\r\n        let json = await this.makeAPIRequest(initOpts);\r\n\r\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\r\n\r\n        let baselink = json.links.first;\r\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\r\n\r\n        let [numPages, pageSize] = this.numPages(json.links.last);\r\n\r\n        //Construct an array of all the requests that are done simultanously.\r\n        //Assume that the content from the inital request is the first page.\r\n        let allResults = await this.keepalive(\r\n            this.makeAPIRequest,\r\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\r\n                .map(i => ({...opts, path_full: linkToPage(i)})),\r\n            {chunksize: opts.chunksize, observe: opts.observe},\r\n        );\r\n        if(start == 1){\r\n            allResults.unshift(json);\r\n        }\r\n        this.clearProgress();\r\n\r\n        let all = [];\r\n        for(let result of allResults){\r\n            for(let item of result.data){\r\n                all.push(item);\r\n            }\r\n        }\r\n\r\n        return all;\r\n    }\r\n    static isLocalEnv(env){\r\n        return !env || env === \"LOCAL\" || env === \"LOC\";\r\n    }\r\n    static envName(env){\r\n        if(this.isLocalEnv(env)) return \"LOCAL\";\r\n        return env;\r\n    }\r\n};\r\n\r\nexport class AbortError extends Error{\r\n    constructor(message){\r\n        super(message);\r\n        Error.captureStackTrace(this, this.constructor);\r\n        this.name = \"AbortError\";\r\n    }\r\n}\r\n\r\nexport class APIError extends Error{\r\n    constructor(response, opts, body){\r\n        super(chalk`\r\n{reset Request returned} {yellow ${response?.statusCode}}{\r\n{green ${JSON.stringify(opts, null, 4)}}\r\n{green ${body}}\r\n{reset ${response.body}}\r\n===============================\r\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\r\n===============================\r\n        `);\r\n        this.response = response;\r\n        this.opts = opts;\r\n        this.body = body;\r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n        this.name = \"ApiError\";\r\n    }\r\n}\r\n\r\nexport class UnconfiguredEnvError extends AbortError{\r\n    constructor(env){\r\n        super(\"Unconfigured environment: \" + env);\r\n        this.name = \"Unconfigured Env Error\";\r\n    }\r\n}\r\n\r\nexport class ProtectedEnvError extends AbortError{\r\n    constructor(env){\r\n        super(\"Protected environment: \" + env);\r\n        this.name = \"Protected Env Error\";\r\n    }\r\n}\r\n\r\nexport class Collection{\r\n    constructor(arr){\r\n        this.arr = arr;\r\n    }\r\n    [Symbol.iterator](){\r\n        return this.arr[Symbol.iterator]();\r\n    }\r\n    findById(id){\r\n        return this.arr.find(x => x.id == id);\r\n    }\r\n    findByName(name){\r\n        return this.arr.find(x => x.name == name);\r\n    }\r\n    findByNameContains(name){\r\n        return this.arr.find(x => x.name.includes(name));\r\n    }\r\n    log(){\r\n        for(let d of this){\r\n            if(d){\r\n                log(d.chalkPrint(true));\r\n            }else{\r\n                log(chalk`{red (None)}`);\r\n            }\r\n        }\r\n    }\r\n    get length(){return this.arr.length;}\r\n}\r\n\r\nexport class RallyBase{\r\n    static handleCaching(){\r\n        if(!this.cache) this.cache = [];\r\n    }\r\n    static isLoaded(env){\r\n        if(!this.hasLoadedAll) return;\r\n        return this.hasLoadedAll[env];\r\n    }\r\n    static async getById(env, id, qs){\r\n        this.handleCaching();\r\n        for(let item of this.cache){\r\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\r\n        }\r\n\r\n        let data = await lib.makeAPIRequest({\r\n            env, path: `/${this.endpoint}/${id}`,\r\n            qs\r\n        });\r\n        if(data.data){\r\n            let o = new this({data: data.data, remote: env, included: data.included});\r\n            this.cache.push(o);\r\n            return o;\r\n        }\r\n    }\r\n\r\n    static async getByName(env, name, qs){\r\n        this.handleCaching();\r\n        for(let item of this.cache){\r\n            if(item.name === name && item.remote === env) return item;\r\n        }\r\n\r\n        let data = await lib.makeAPIRequest({\r\n            env, path: `/${this.endpoint}`,\r\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\r\n        });\r\n        //TODO included might not work correctly here\r\n        if(data.data[0]){\r\n            let o = new this({data: data.data[0], remote: env, included: data.included});\r\n            this.cache.push(o);\r\n            return o;\r\n        }\r\n    }\r\n\r\n    static async getAllPreCollect(d){return d;}\r\n    static async getAll(env){\r\n        this.handleCaching();\r\n        let datas = await lib.indexPathFast({\r\n            env, path: `/${this.endpoint}`,\r\n            pageSize: \"50\",\r\n            qs: {sort: \"id\"},\r\n        });\r\n        datas = await this.getAllPreCollect(datas);\r\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\r\n        this.cache = [...this.cache, ...all.arr];\r\n        return all;\r\n    }\r\n    static async removeCache(env){\r\n        this.handleCaching();\r\n        this.cache = this.cache.filter(x => x.remote !== env);\r\n    }\r\n\r\n    //Specific turns name into id based on env\r\n    //Generic turns ids into names\r\n    async resolveApply(type, dataObj, direction){\r\n        let obj;\r\n        if(direction == \"generic\"){\r\n            obj = await type.getById(this.remote, dataObj.id);\r\n            if(obj){\r\n                dataObj.name = obj.name\r\n            }\r\n        }else if(direction == \"specific\"){\r\n            obj = await type.getByName(this.remote, getPrefix() + dataObj.name);\r\n            if(obj){\r\n                dataObj.id = obj.id\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    //Type is the baseclass you are looking for (should extend RallyBase)\r\n    //name is the name of the field\r\n    //isArray is true if it has multiple cardinailty, false if it is single\r\n    //direction gets passed directly to resolveApply\r\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\r\n        // ignore empty fields\r\n        let field = this.relationships[name];\r\n        if(!field?.data) return;\r\n\r\n        if(isArray){\r\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\r\n        }else{\r\n            return await this.resolveApply(type, field.data, direction);\r\n        }\r\n    }\r\n\r\n    cleanup(){\r\n        for(let [key, val] of Object.entries(this.relationships)){\r\n            //Remove ids from data\r\n            if(val.data){\r\n                if(val.data.id){\r\n                    delete val.data.id;\r\n                }else if(val.data[0]){\r\n                    for(let x of val.data) delete x.id;\r\n                }\r\n            }\r\n            delete val.links;\r\n        }\r\n        // organization is unused (?)\r\n        delete this.relationships.organization;\r\n        // id is specific to envs\r\n        // but save source inside meta string in case we need it\r\n        this.metastring = this.remote + \"-\" + this.data.id;\r\n        delete this.data.id;\r\n        // links too\r\n        delete this.data.links;\r\n    }\r\n}\r\n","import {cached, defineAssoc} from \"./decorators.js\";\r\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\r\n\r\nclass Provider extends RallyBase{\r\n    constructor({data, remote}){\r\n        super();\r\n        this.data = data;\r\n        this.meta = {};\r\n        this.remote = remote;\r\n    }\r\n    //cached\r\n    async getEditorConfig(){\r\n        if(this.editorConfig) return this.editorConfig;\r\n\r\n        this.editorConfig = await lib.makeAPIRequest({\r\n            env: this.remote,\r\n            path_full: this.data.links.editorConfig\r\n        });\r\n        this.editorConfig.fileExt = await this.getFileExtension();\r\n        return this.editorConfig;\r\n    }\r\n    static async getAllPreCollect(providers){\r\n        return providers.sort((a, b) => {\r\n            return a.attributes.category.localeCompare(b.attributes.category) ||\r\n                   a.attributes.name    .localeCompare(b.attributes.name);\r\n        });\r\n    }\r\n\r\n    async getFileExtension(){\r\n        let config = await this.getEditorConfig();\r\n        let map = {\r\n            python: \"py\",\r\n            text: \"txt\",\r\n            getmap(key){\r\n                if(this.name === \"Aurora\") return \"zip\";\r\n                if(this[key]) return this[key];\r\n                return key;\r\n            }\r\n        }\r\n        return map.getmap(config.lang);\r\n    }\r\n\r\n    chalkPrint(pad=true){\r\n        let id = String(this.id)\r\n        if(pad) id = id.padStart(4);\r\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\r\n    }\r\n}\r\n\r\ndefineAssoc(Provider, \"id\", \"data.id\");\r\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\r\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\r\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\r\nProvider.endpoint = \"providerTypes\";\r\n\r\nexport default Provider;\r\n","import {cached, defineAssoc} from \"./decorators.js\";\r\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\r\n\r\nclass Asset extends RallyBase{\r\n    constructor({data, remote, included}){\r\n        super();\r\n        this.data = data;\r\n        this.meta = {};\r\n        this.remote = remote;\r\n        if(included){\r\n            this.meta.metadata = Asset.normalizeMetadata(included);\r\n        }\r\n    }\r\n    static normalizeMetadata(payload){\r\n        let newMetadata = {}\r\n        for(let md of payload){\r\n            if(md.type !== \"metadata\") continue;\r\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\r\n        }\r\n        return newMetadata;\r\n    }\r\n\r\n    static lite(id, remote){\r\n        return new this({data: {id}, remote})\r\n    }\r\n\r\n    chalkPrint(pad=false){\r\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\r\n        if(pad) id = id.padStart(15);\r\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\r\n    }\r\n\r\n    static async createNew(name, env){\r\n        let req = await lib.makeAPIRequest({\r\n            env, path: \"/assets\",\r\n            method: \"POST\",\r\n            payload: {\r\n                data: {\r\n                    attributes: {name},\r\n                    type: \"assets\"\r\n                }\r\n            }\r\n        });\r\n        return new this({data: req.data, remote: env});\r\n    }\r\n\r\n    async delete(){\r\n        let req = await lib.makeAPIRequest({\r\n            env: this.remote, path: \"/assets/\" + this.id,\r\n            method: \"DELETE\",\r\n        });\r\n    }\r\n\r\n    async addFile(label, fileuris){\r\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\r\n\r\n        let instances = {}\r\n        for(let i = 0; i < fileuris.length; i++){\r\n            instances[String(i + 1)] = {uri: fileuris[i]};\r\n        }\r\n\r\n        let req = await lib.makeAPIRequest({\r\n            env: this.remote, path: \"/files\",\r\n            method: \"POST\",\r\n            payload: {\r\n                \"data\": {\r\n                    \"attributes\": {\r\n                        label, instances,\r\n                    },\r\n                    \"relationships\": {\r\n                        \"asset\": {\r\n                            \"data\": {\r\n                                id: this.id,\r\n                                \"type\": \"assets\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"type\": \"files\"\r\n                }\r\n\r\n            }\r\n        });\r\n        return req;\r\n    }\r\n    async startWorkflow(jobName, initData){\r\n        let attributes;\r\n        if(initData){\r\n            //Convert init data to string\r\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\r\n            attributes = {initData};\r\n        }\r\n\r\n        let req = await lib.makeAPIRequest({\r\n            env: this.remote, path: \"/workflows\",\r\n            method: \"POST\",\r\n            payload: {\r\n                \"data\": {\r\n                    \"type\": \"workflows\",\r\n                    attributes,\r\n                    \"relationships\": {\r\n                        \"movie\": {\r\n                            \"data\": {\r\n                                id: this.id,\r\n                                \"type\": \"movies\"\r\n                            }\r\n                        }, \"rule\": {\r\n                            \"data\": {\r\n                                \"attributes\": {\r\n                                    \"name\": jobName,\r\n                                },\r\n                                \"type\": \"rules\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return req;\r\n    }\r\n    async startEvaluate(presetid){\r\n        // Fire and forget.\r\n        let data = await lib.makeAPIRequest({\r\n            env: this.remote, path: \"/jobs\", method: \"POST\",\r\n            payload: {\r\n                data: {\r\n                    type: \"jobs\",\r\n                    relationships: {\r\n                        movie: {\r\n                            data: {\r\n                                id: this.id,\r\n                                type: \"movies\",\r\n                            }\r\n                        }, preset: {\r\n                            data: {\r\n                                id: presetid,\r\n                                type: \"presets\",\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n}\r\n\r\ndefineAssoc(Asset, \"id\", \"data.id\");\r\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\r\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\r\nAsset.endpoint = \"movies\"\r\n\r\nexport default Asset;\r\n","import fs from \"fs\";\r\nimport {dirname} from \"path\";\r\n\r\nimport {configObject} from \"./config.js\";\r\nimport {homedir} from \"os\";\r\n\r\n\r\nconst home = homedir();\r\nconst colon = /:/g;\r\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\r\nexport function pathTransform(path){\r\n    if(path.includes(\":\")){\r\n        //Ignore the first colon in window-like filesystems\r\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\r\n    }\r\n    if(configObject.invertedPath){\r\n        path = path.replace(siloLike, \"$2-$1.$3\")\r\n    }\r\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\r\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\r\n    }\r\n    return path;\r\n}\r\n\r\nexport function readFileSync(path, options){\r\n    return fs.readFileSync(pathTransform(path), options);\r\n}\r\n//Create writefilesync, with ability to create directory if it doesnt exist\r\nexport function writeFileSync(path, data, options, dircreated = false){\r\n    path = pathTransform(path);\r\n    try{\r\n        return fs.writeFileSync(path, data, options);\r\n    }catch(e){\r\n        if(dircreated) throw e;\r\n        let directory = dirname(path);\r\n        try{\r\n            fs.statSync(directory);\r\n            throw e;\r\n        }catch(nodir){\r\n            fs.mkdirSync(directory);\r\n            return writeFileSync(path, data, options, true);\r\n        }\r\n    }\r\n}\r\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\r\nimport {basename, resolve as pathResolve, dirname} from \"path\";\r\nimport {cached, defineAssoc} from \"./decorators.js\";\r\nimport {configObject, getPrefix} from \"./config.js\";\r\nimport Provider from \"./providers.js\";\r\nimport Asset from \"./asset.js\";\r\n\r\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\r\nimport path from \"path\";\r\n\r\nlet exists = {};\r\n\r\nclass Preset extends RallyBase{\r\n    constructor({path, remote, data, subProject} = {}){\r\n        // Get full path if possible\r\n        if(path){\r\n            path = pathResolve(path);\r\n            if(dirname(path).includes(\"silo-metadata\")){\r\n                throw new AbortError(\"Constructing preset from metadata file\")\r\n            }\r\n        }\r\n\r\n        super();\r\n\r\n\r\n        // Cache by path\r\n        if(path){\r\n            if(exists[path]) return exists[path];\r\n            exists[path] = this;\r\n        }\r\n\r\n        this.meta = {};\r\n        this.subproject = subProject;\r\n        this.remote = remote\r\n        if(lib.isLocalEnv(this.remote)){\r\n            if(path){\r\n                this.path = path;\r\n                let pathspl = this.path.split(\".\");\r\n                this.ext = pathspl[pathspl.length-1];\r\n                try{\r\n                    this.code = this.getLocalCode();\r\n                }catch(e){\r\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\r\n                        this.missing = true;\r\n                        return undefined;\r\n                    }else{\r\n                        log(chalk`{red Node Error} ${e.message}`);\r\n                        throw new AbortError(\"Could not load code of local file\");\r\n                    }\r\n                }\r\n                let name = this.parseFilenameForName() || this.parseCodeForName();\r\n                try{\r\n                    this.data = this.getLocalMetadata();\r\n                    this.isGeneric = true;\r\n                    name = this.name;\r\n                }catch(e){\r\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\r\n                    this.data = Preset.newShell();\r\n                    this.isGeneric = false;\r\n                }\r\n                this.name = name;\r\n            }else{\r\n                this.data = Preset.newShell();\r\n            }\r\n        }else{\r\n            this.data = data;\r\n            //this.name = data.attributes.name;\r\n            //this.id = data.id;\r\n            this.isGeneric = false;\r\n        }\r\n        this.data.attributes.rallyConfiguration = undefined;\r\n        this.data.attributes.systemManaged = undefined;\r\n    }\r\n    //Given a metadata file, get its actual file\r\n    static async fromMetadata(path, subproject){\r\n        let data;\r\n        try{\r\n            data = JSON.parse(readFileSync(path));\r\n        }catch(e){\r\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\r\n                return null;\r\n            }else{\r\n                throw e;\r\n            }\r\n        }\r\n        let providerType = data.relationships.providerType.data.name;\r\n        let provider = await Provider.getByName(\"DEV\", providerType);\r\n\r\n        if(!provider){\r\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\r\n            log(chalk`{red Skipping {green ${path}}.}`);\r\n            return null;\r\n        }\r\n\r\n        let ext = await provider.getFileExtension();\r\n        let name = data.attributes.name;\r\n\r\n        let realpath = Preset.getLocalPath(name, ext, subproject);\r\n        return new Preset({path: realpath, subProject: subproject});\r\n    }\r\n\r\n    static newShell(){\r\n        return {\r\n            \"attributes\": {\r\n                \"providerSettings\": {\r\n                }\r\n            },\r\n            \"relationships\": {},\r\n            \"type\": \"presets\",\r\n        };\r\n    }\r\n    cleanup(){\r\n        super.cleanup();\r\n        delete this.attributes[\"createdAt\"];\r\n        delete this.attributes[\"updatedAt\"];\r\n    }\r\n    async acclimatize(env){\r\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\r\n        let providers = await Provider.getAll(env);\r\n        let ptype = this.relationships[\"providerType\"];\r\n            ptype = ptype.data;\r\n\r\n        let provider = providers.findByName(ptype.name);\r\n        ptype.id = provider.id;\r\n    }\r\n    get test(){\r\n        if(!this.code) return;\r\n\r\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\r\n        let match\r\n        let matches = []\r\n        while(match = regex.exec(this.code)){\r\n            matches.push(match[1]);\r\n        }\r\n        return matches\r\n    }\r\n    async runTest(env){\r\n        let remote = await Preset.getByName(env, this.name);\r\n        for(let test of this.test){\r\n            log(\"Tests...\");\r\n            let asset;\r\n\r\n            if(test.startsWith(\"id\")){\r\n                let match = /id:\\s*(\\d+)/g.exec(test);\r\n                if(!match){\r\n                    log(chalk`{red Could not parse autotest} ${test}.`);\r\n                    throw new AbortError(\"Could not properly parse the preset header\");\r\n                }\r\n                asset = await Asset.getById(env, match[1]);\r\n            }else{\r\n                asset = await Asset.getByName(env, test);\r\n            }\r\n\r\n            if(!asset){\r\n                log(chalk`{yellow No movie found}, skipping test.`);\r\n                continue;\r\n            }\r\n\r\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\r\n            await asset.startEvaluate(remote.id);\r\n        }\r\n    }\r\n    async resolve(){\r\n        if(this.isGeneric) return;\r\n\r\n        let proType = await this.resolveField(Provider, \"providerType\");\r\n\r\n        this.ext = await proType.getFileExtension();\r\n\r\n        this.isGeneric = true;\r\n\r\n        return {proType};\r\n    }\r\n    async saveLocal(){\r\n        await this.saveLocalMetadata();\r\n        await this.saveLocalFile();\r\n    }\r\n    async saveLocalMetadata(){\r\n        if(!this.isGeneric){\r\n            await this.resolve();\r\n            this.cleanup();\r\n        }\r\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\r\n    }\r\n    async saveLocalFile(){\r\n        writeFileSync(this.localpath, this.code);\r\n    }\r\n    async uploadRemote(env){\r\n        await this.uploadCodeToEnv(env, true);\r\n    }\r\n    async save(env){\r\n        this.saved = true;\r\n        if(!this.isGeneric){\r\n            await this.resolve();\r\n        }\r\n\r\n        this.cleanup();\r\n        if(lib.isLocalEnv(env)){\r\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\r\n            await this.saveLocal();\r\n        }else{\r\n            await this.uploadRemote(env);\r\n        }\r\n    }\r\n\r\n    async downloadCode(){\r\n        if(!this.remote || this.code) return this.code;\r\n        return this.code = await lib.makeAPIRequest({\r\n            env: this.remote,\r\n            path_full: this.data.links.providerData,\r\n            json: false,\r\n        });\r\n    }\r\n\r\n    get code(){\r\n        if(this._code) return this._code;\r\n    }\r\n    set code(v){this._code = v;}\r\n\r\n    chalkPrint(pad=true){\r\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\r\n        let sub = \"\";\r\n        if(this.subproject){\r\n            sub = chalk`{yellow ${this.subproject}}`;\r\n        }\r\n        if(pad) id = id.padStart(10);\r\n        if(this.name == undefined){\r\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\r\n        }else if(this.meta.proType){\r\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\r\n        }else{\r\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\r\n        }\r\n    }\r\n    parseFilenameForName(){\r\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\r\n            return basename(this.path)\r\n                .replace(\"_\", \" \")\r\n                .replace(\"-\", \" \")\r\n                .replace(\".json\", \"\")\r\n                .replace(\".jinja\", \"\");\r\n        }\r\n    }\r\n\r\n    parseCodeForName(){\r\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\r\n        const match = name_regex.exec(this.code);\r\n        if(match) return match[1];\r\n    }\r\n\r\n    findStringsInCode(strings){\r\n        if(!this.code) return [];\r\n\r\n        return strings.filter(str => {\r\n            let regex = new RegExp(str);\r\n            return !!this.code.match(regex);\r\n        });\r\n    }\r\n    static getLocalPath(name, ext, subproject){\r\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\r\n    }\r\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\r\n\r\n    get path(){\r\n        if(this._path) return this._path;\r\n    }\r\n    set path(val){\r\n        this._path = val;\r\n    }\r\n    get name(){\r\n        return this._nameOuter;\r\n    }\r\n    set name(val){\r\n        this._nameInner = val;\r\n        this._nameOuter = val;\r\n    }\r\n    set providerType(value){\r\n        this.relationships[\"providerType\"] = {\r\n            data: {\r\n                ...value,\r\n                type: \"providerTypes\",\r\n            }\r\n        };\r\n    }\r\n    get localmetadatapath(){\r\n        if(this.path){\r\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\r\n        }\r\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\r\n    }\r\n    get immutable(){\r\n        return this.name.includes(\"Constant\");\r\n    }\r\n    async uploadPresetData(env, id){\r\n        let res = await lib.makeAPIRequest({\r\n            env, path: `/presets/${id}/providerData`,\r\n            body: this.code, method: \"PUT\", fullResponse: true, timeout: 5000\r\n        });\r\n        write(chalk`code up {yellow ${res.statusCode}}, `);\r\n    }\r\n    async grabMetadata(env){\r\n        let remote = await Preset.getByName(env, this.name);\r\n        this.isGeneric = false;\r\n        if(!remote){\r\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\r\n        }\r\n        this.data = remote.data;\r\n        this.remote = env;\r\n    }\r\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\r\n        if(!this.name){\r\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\r\n            return;\r\n        }\r\n\r\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\r\n\r\n        if(this.immutable){\r\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\r\n            return;\r\n        }\r\n\r\n        //First query the api to see if this already exists.\r\n        let remote = await Preset.getByName(env, getPrefix() + this.name);\r\n\r\n        if(remote){\r\n            //If it exists we can replace it\r\n            write(\"replace, \");\r\n            //check for env\r\n            if(includeMetadata){\r\n                let metadata = {data: {attributes: this.data.attributes, type: \"presets\"}};\r\n                //changing metadata for replacement to include prefix\r\n                metadata.data.attributes.name = getPrefix() + this.name;\r\n                metadata.data.attributes.providerSettings.PresetName = this.name;\r\n                metadata.data.attributes.rallyConfiguration = this.name;\r\n                console.log('metadata')\r\n                console.log(metadata)\r\n\r\n                let res = await lib.makeAPIRequest({\r\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\r\n                    payload: metadata,\r\n                    fullResponse: true,\r\n                });\r\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\r\n            }\r\n\r\n            await this.uploadPresetData(env, remote.id);\r\n        }else {\r\n            write(\"create, \");\r\n\r\n            let metadata = {data: this.data};\r\n                        if(configObject.prefix){\r\n                metadata.data.attributes.name = getPrefix() + this.name;\r\n                metadata.data.attributes.providerSettings.PresetName = this.name;\r\n                metadata.data.attributes.rallyConfiguration = {\r\n                  \"OutputStorageName\": null,\r\n                  \"PresetName\": this.name,\r\n                  \"ProxyTypeName\": null\r\n                }\r\n\r\n\r\n            await this.acclimatize(env);\r\n            write(\"Posting to create preset... \");\r\n            let res = await lib.makeAPIRequest({\r\n                env, path: `/presets`, method: \"POST\",\r\n                payload: metadata, timeout: 5000,\r\n            });\r\n            let id = res.data.id;\r\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\r\n            await this.uploadPresetData(env, id);\r\n        }\r\n\r\n            if (!this.relationships[\"providerType\"]) {\r\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\r\n            }\r\n        }\r\n        if(this.test[0] && shouldTest){\r\n            await this.runTest(env);\r\n        }else{\r\n            log(\"No tests. Done.\");\r\n        }\r\n    }\r\n\r\n    getLocalMetadata(){\r\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\r\n    }\r\n    getLocalCode(){\r\n        return readFileSync(this.path, \"utf-8\");\r\n    }\r\n}\r\n\r\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\r\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\r\ndefineAssoc(Preset, \"id\", \"data.id\");\r\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\r\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\r\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\r\ndefineAssoc(Preset, \"_code\", \"meta.code\");\r\ndefineAssoc(Preset, \"_path\", \"meta.path\");\r\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\r\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\r\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\r\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\r\nPreset.endpoint = \"presets\";\r\n\r\nexport default Preset;\r\n","import {cached, defineAssoc} from \"./decorators.js\";\r\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\r\n\r\nclass Notification extends RallyBase{\r\n    constructor({data, remote}){\r\n        super();\r\n        this.data = data;\r\n        this.meta = {};\r\n        this.remote = remote;\r\n    }\r\n\r\n    static async getAllPreCollect(notifications){\r\n        return notifications.sort((a, b) => {\r\n            return a.attributes.type.localeCompare(b.attributes.type) ||\r\n                   a.attributes.name.localeCompare(b.attributes.name);\r\n        });\r\n    }\r\n\r\n    chalkPrint(pad=false){\r\n        let id = String(\"N-\" + this.id)\r\n        if(pad) id = id.padStart(4);\r\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\r\n    }\r\n}\r\n\r\ndefineAssoc(Notification, \"id\", \"data.id\");\r\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\r\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\r\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\r\nNotification.endpoint = \"notificationPresets\"\r\n\r\nexport default Notification;\r\n","import {cached, defineAssoc} from \"./decorators.js\";\r\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\r\nimport {configObject, getPrefix} from \"./config.js\";\r\nimport Preset from \"./preset.js\";\r\nimport Provider from \"./providers.js\";\r\nimport Notification from \"./notification.js\";\r\n\r\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\r\nimport {join, resolve as pathResolve} from \"path\";\r\n\r\nclass Rule extends RallyBase{\r\n    constructor({path, data, remote, subProject} = {}){\r\n        super();\r\n        if(path){\r\n            path = pathResolve(path);\r\n            try{\r\n                let f = readFileSync(path, \"utf-8\")\r\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\r\n            }catch(e){\r\n                if(e.code === \"ENOENT\"){\r\n                    if(configObject.ignoreMissing){\r\n                        this.missing = true;\r\n                        return undefined;\r\n                    }else{\r\n                        throw new AbortError(\"Could not load code of local file\");\r\n                    }\r\n                }else{\r\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\r\n                }\r\n            }\r\n        }\r\n        this.meta = {};\r\n        this.subproject = subProject;\r\n        if(!data){\r\n            data = Rule.newShell();\r\n        }\r\n        this.data = data;\r\n        this.remote = remote;\r\n        this.isGeneric = !this.remote;\r\n    }\r\n\r\n    static newShell(){\r\n        return {\r\n            \"attributes\": {\r\n                \"description\": \"-\",\r\n                \"priority\": \"PriorityNorm\",\r\n                \"starred\": false,\r\n            },\r\n            \"relationships\": {},\r\n            \"type\": \"workflowRules\",\r\n        };\r\n    }\r\n\r\n    async acclimatize(env){\r\n        this.remote = env;\r\n\r\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\r\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\r\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\r\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\r\n\r\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\r\n\r\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\r\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\r\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\r\n    }\r\n    async saveA(env){\r\n        if(lib.isLocalEnv(env)) return;\r\n        return await this.createIfNotExist(env);\r\n    }\r\n    async saveB(env){\r\n        if(!this.isGeneric){\r\n            await this.resolve();\r\n        }\r\n        this.cleanup();\r\n        if(lib.isLocalEnv(env)){\r\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\r\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\r\n        }else{\r\n            await this.acclimatize(env);\r\n            await this.uploadRemote(env);\r\n        }\r\n    }\r\n    get immutable(){\r\n        return false;\r\n    }\r\n    async createIfNotExist(env){\r\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\r\n\r\n        if(this.immutable){\r\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\r\n            return;\r\n        }\r\n\r\n        //First query the api to see if this already exists.\r\n        if (configObject.prefixmode==true){\r\n            var remote = await Rule.getByName(env, getPrefix() + this.name);\r\n        }\r\n        else{\r\n            var remote = await Rule.getByName(env,  this.name);\r\n        }\r\n\r\n\r\n        this.idMap = this.idMap || {};\r\n\r\n        if(remote){\r\n            this.idMap[env] = remote.id;\r\n            log(chalk`exists ${remote.chalkPrint(false)}`);\r\n            return;\r\n        }\r\n\r\n        //If it exists we can replace it.\r\n        write(\"create, \");\r\n\r\n        if (configObject.prefixmode==true){\r\n            var res = await lib.makeAPIRequest({\r\n            env, path: `/workflowRules`, method: \"POST\",\r\n            payload: {data: {attributes: {name: getPrefix() + this.name}, type: \"workflowRules\"}},\r\n        });\r\n        }\r\n        else{\r\n            var res = await lib.makeAPIRequest({\r\n            env, path: `/workflowRules`, method: \"POST\",\r\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\r\n        });\r\n\r\n        }\r\n\r\n        this.idMap = this.idMap || {};\r\n        this.idMap[env] = res.data.id;\r\n        write(\"id \");\r\n        log(this.idMap[env]);\r\n    }\r\n\r\n    async patchStrip(){\r\n        delete this.data.attributes.createdAt;\r\n        delete this.data.attributes.starred;\r\n        delete this.data.attributes.updatedAt;\r\n\r\n        // TEMP FIX FOR BUG IN SDVI\r\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\r\n            log(\"HAS PASS\");\r\n            log(this.name);\r\n            log(\"HAS PASS\");\r\n        }\r\n        delete this.relationships.passMetadata;\r\n\r\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\r\n            log(\"HAS PASS\");\r\n            log(this.name);\r\n            log(\"HAS PASS\");\r\n        }\r\n        delete this.relationships.errorMetadata;\r\n\r\n        // This is commented out because it was fixed.\r\n        //for(let key in this.relationships){\r\n            //let relationship = this.relationships[key];\r\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\r\n                //delete this.relationships[key];\r\n            //}\r\n        //}\r\n    }\r\n\r\n    async uploadRemote(env){\r\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\r\n\r\n        if(this.immutable){\r\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\r\n            return;\r\n        }\r\n\r\n        if(this.idMap[env]){\r\n            this.remote = env;\r\n\r\n            await this.patchStrip();\r\n            this.data.id = this.idMap[env];\r\n            //If it exists we can replace it\r\n            write(\"replace, \");\r\n            let metadata = {data: this.data};\r\n\r\n            metadata.data.attributes.name = this.name\r\n            //checking for prefix mode for attribute name and then relationships name\r\n            if (configObject.prefixmode==true){\r\n               metadata.data.relationships.name = getPrefix() + this.name;\r\n            }\r\n            else{metadata.data.relationships.name =  this.name;\r\n            }\r\n\r\n            let res = await lib.makeAPIRequest({\r\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\r\n                payload: {data: this.data}, fullResponse: true,\r\n            });\r\n\r\n            log(chalk`response {yellow ${res.statusCode}}`);\r\n            if(res.statusCode !== 200){\r\n                log(res.body)\r\n                log(JSON.stringify(this.data, null, 4));\r\n            }\r\n        }else{\r\n            throw Error(\"Bad idmap!\");\r\n        }\r\n    }\r\n\r\n    get localpath(){\r\n        return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\r\n    }\r\n\r\n    async resolve(){\r\n        let preset  = await this.resolveField(Preset, \"preset\", false);\r\n        //log(preset);\r\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\r\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\r\n        let proType = await this.resolveField(Provider, \"providerType\", false);\r\n\r\n        //log(\"Dynamic nexts\")\r\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\r\n        //log(dynamicNexts);\r\n\r\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\r\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\r\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\r\n\r\n        //TODO Unsupported\r\n        delete this.relationships[\"enterMetadata\"]\r\n        delete this.relationships[\"errorMetadata\"]\r\n\r\n        this.isGeneric = true;\r\n\r\n        return {\r\n            preset, proType,\r\n            pNext, eNext,\r\n            dynamicNexts,\r\n            errorNotif, enterNotif, passNotif,\r\n        };\r\n    }\r\n\r\n    chalkPrint(pad=true){\r\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\r\n        let sub = \"\";\r\n        if(this.subproject){\r\n            sub = chalk`{yellow ${this.subproject}}`;\r\n        }\r\n        if(pad) id = id.padStart(10);\r\n        try{\r\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\r\n        }catch(e){\r\n            return this.data;\r\n        }\r\n    }\r\n}\r\n\r\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\r\ndefineAssoc(Rule, \"id\", \"data.id\");\r\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\r\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\r\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\r\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\r\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\r\nRule.endpoint = \"workflowRules\";\r\n\r\nexport default Rule;\r\n","import Rule from \"./rule.js\";\r\nimport Preset from \"./preset.js\";\r\nimport Provider from \"./providers.js\";\r\nimport Notification from \"./notification.js\";\r\nimport {Collection, lib} from \"./rally-tools.js\";\r\nimport {configObject} from \"./config.js\";\r\n\r\n\r\n//TODO\r\n//Move project into silo metadata\r\n//move autotest into silo metadata\r\n//\r\n\r\nexport default class SupplyChain{\r\n    constructor(startingRule, stopRule){\r\n        if(startingRule){\r\n            this.startingRule = startingRule;\r\n            this.stopRule = stopRule\r\n            this.remote = startingRule.remote;\r\n        }\r\n    }\r\n    async downloadPresetCode(objs = this.allPresets){\r\n        log(\"Downloading code... \");\r\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\r\n    }\r\n    async calculate(){\r\n        log(\"Getting rules... \");\r\n        this.allRules = await Rule.getAll(this.remote);\r\n        log(this.allRules.length);\r\n\r\n        log(\"Getting presets... \");\r\n        this.allPresets = await Preset.getAll(this.remote);\r\n        log(this.allPresets.length);\r\n\r\n        log(\"Getting providers... \");\r\n        this.allProviders = await Provider.getAll(this.remote);\r\n        log(this.allProviders.length);\r\n\r\n        log(\"Getting notifications... \");\r\n        this.allNotifications = await Notification.getAll(this.remote);\r\n        log(this.allNotifications.length);\r\n\r\n        if(!this.startingRule){\r\n            this.rules = this.allRules;\r\n            this.presets = this.allPresets;\r\n            this.notifications = new Collection([]);\r\n\r\n            await this.downloadPresetCode();\r\n            return\r\n        }else{\r\n            await this.downloadPresetCode();\r\n        }\r\n\r\n        log(\"Done!\");\r\n\r\n        //Now we have everything we need to find a whole supply chain\r\n\r\n        write(\"Calculating Supply chain... \");\r\n        log(this.startingRule.chalkPrint());\r\n\r\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\r\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\r\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\r\n        let requiredNotifications = new Set();\r\n\r\n        let ruleQueue = [this.startingRule];\r\n        let presetQueue = [];\r\n        for(let currentRule of ruleQueue){\r\n            if(currentRule === this.stopRule) continue;\r\n            let {\r\n                eNext, pNext, preset,\r\n                passNotif, errorNotif, enterNotif\r\n            } = await currentRule.resolve();\r\n\r\n\r\n            passNotif .forEach(n => requiredNotifications.add(n));\r\n            enterNotif.forEach(n => requiredNotifications.add(n));\r\n            errorNotif.forEach(n => requiredNotifications.add(n));\r\n\r\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\r\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\r\n\r\n            let neededPresets = preset.findStringsInCode(allPresetNames);\r\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\r\n\r\n            let neededRules = preset.findStringsInCode(allRuleNames);\r\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\r\n\r\n            preset\r\n                .findStringsInCode(allNotifNames)\r\n                .map(str => this.allNotifications.findByName(str))\r\n                .forEach(notif => requiredNotifications.add(notif));\r\n\r\n            neededPresets.push(preset);\r\n\r\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\r\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\r\n\r\n            if(configObject.verbose){\r\n                write(currentRule.chalkPrint(false));\r\n                log(\":\");\r\n                write(\"  \");\r\n                write(preset.chalkPrint(false));\r\n                log(\":\");\r\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\r\n                log(\"\");\r\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\r\n                log(\"\");\r\n                log(\"  Rules:\");\r\n\r\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\r\n\r\n                log(\"  Presets:\");\r\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\r\n\r\n                log(\"\\n\");\r\n            }\r\n        }\r\n\r\n        log(\"Done!\")\r\n\r\n        this.rules = new Collection(ruleQueue);\r\n        this.presets = new Collection(presetQueue);\r\n        requiredNotifications.delete(undefined);\r\n        this.notifications = new Collection([...requiredNotifications]);\r\n    }\r\n    async log(){\r\n        if(this.notifications.arr.length > 0){\r\n            log(\"Required notifications: \");\r\n            this.notifications.log();\r\n        }\r\n\r\n        if(this.rules.arr.length > 0){\r\n            write(\"Required rules: \");\r\n            log(this.rules.arr.length);\r\n            this.rules.log();\r\n        }\r\n\r\n        if(this.presets.arr.length > 0){\r\n            write(\"Required presets: \");\r\n            log(this.presets.arr.length);\r\n            this.presets.log();\r\n        }\r\n    }\r\n    async syncTo(env){\r\n        for(let preset of this.presets){\r\n            try{\r\n                await preset.save(env);\r\n            }catch(e){log(e);}\r\n        }\r\n        if(this.rules.arr[0]){\r\n            log(\"Starting create phase for rules\")\r\n            for(let rule of this.rules){\r\n                try{\r\n                    await rule.saveA(env);\r\n                }catch(e){log(e);}\r\n            }\r\n\r\n            log(\"OK\")\r\n            log(\"Starting link phase for rules\");\r\n            Rule.removeCache(env);\r\n\r\n            for(let rule of this.rules){\r\n                try{\r\n                    await rule.saveB(env);\r\n                }catch(e){log(e);}\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {cached, defineAssoc} from \"./decorators.js\";\r\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\r\n\r\nclass User extends RallyBase{\r\n    constructor({data, remote}){\r\n        super();\r\n        this.data = data;\r\n        this.meta = {};\r\n        this.remote = remote;\r\n    }\r\n    chalkPrint(pad=false){\r\n        let id = String(\"U-\" + this.id)\r\n        if(pad) id = id.padStart(7);\r\n        return chalk`{green ${id}}: {blue ${this.name}}`;\r\n    }\r\n}\r\n\r\ndefineAssoc(User, \"id\", \"data.id\");\r\ndefineAssoc(User, \"name\", \"data.attributes.name\");\r\ndefineAssoc(User, \"email\", \"data.attributes.email\");\r\ndefineAssoc(User, \"remote\", \"meta.remote\");\r\nUser.endpoint = \"users\"\r\n\r\nexport default User;\r\n","require(\"source-map-support\").install();\r\n\r\nimport {lib} from \"./rally-tools.js\";\r\nimport {cached} from \"./decorators.js\";\r\n\r\nexport {default as SupplyChain} from \"./supply-chain.js\";\r\nexport {default as Preset} from \"./preset.js\";\r\nexport {default as Rule} from \"./rule.js\";\r\nexport {default as Provider} from \"./providers.js\";\r\nexport {default as Notification} from \"./notification.js\";\r\nexport {default as Asset} from \"./asset.js\";\r\nexport {default as User} from \"./user.js\";\r\n\r\nexport * from \"./config.js\";\r\n\r\nexport * from \"./rally-tools.js\";\r\n\r\nexport const rallyFunctions = {\r\n    async bestPagintation(){\r\n        global.silentAPI = true;\r\n        for(let i = 10; i <= 30; i+=5){\r\n            console.time(\"test with \" + i);\r\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\r\n            console.timeEnd(\"test with \" + i);\r\n        }\r\n    },\r\n    async uploadPresets(env, presets, createFunc = ()=>false){\r\n        for(let preset of presets){\r\n            await preset.uploadCodeToEnv(env, createFunc);\r\n        }\r\n    },\r\n    //Dummy test access\r\n    async testAccess(env){\r\n        if(lib.isLocalEnv(env)){\r\n            //TODO\r\n            return true;\r\n        }\r\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\r\n        return result.statusCode;\r\n    },\r\n}\r\n","export default {\r\n    SdviContentMover:`{\r\n    \"tasks\": [\r\n        {\r\n            \"operation\": \"move\",\r\n            \"source\": {\r\n                \"labels\": [ \"MyLabel\" ],\r\n                \"tags\": [ \"segmented\" ]\r\n                \"storageSet\": [ \"*\", \"-OtherStorageBucket\" ],\r\n\r\n            },\r\n            \"destination\": {\r\n                \"storage\": \"Archive\",\r\n                \"newLabel\": \"myNewLabel\",\r\n                \"overwrite\": \"always\"\r\n            }\r\n        }\r\n    ]\r\n}`, SdviEvaluate: `'''\r\nname: {name}\r\n'''\r\n\r\n# code here`,\r\n};\r\n","import {configObject} from \"./config.js\";\r\nimport {join} from \"path\";\r\nimport Preset from \"./preset.js\";\r\nimport Rule from \"./rule.js\";\r\nexport const inquirer = importLazy(\"inquirer\");\r\nconst readdir = importLazy(\"recursive-readdir\");\r\n\r\nlet hasAutoCompletePrompt = false;\r\nexport function addAutoCompletePrompt(){\r\n    if(hasAutoCompletePrompt) return\r\n    hasAutoCompletePrompt = true;\r\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\r\n}\r\n\r\nexport async function $api(propArray){\r\n    let q;\r\n    q = await inquirer.prompt([{\r\n        type: \"input\",\r\n        name: \"company\",\r\n        message: `What is your company?`,\r\n        default: `discovery`,\r\n    }]);\r\n\r\n    let company = q.company;\r\n\r\n    const defaults = {\r\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\r\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\r\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\r\n        PROD: `https://${company}.sdvi.com/api/v2`,\r\n    };\r\n\r\n    if(propArray && propArray[1]){\r\n        q = {envs: [propArray[1]]};\r\n    }else{\r\n        //Create a checkbox prompt to choose environments\r\n        q = await inquirer.prompt([{\r\n            type: \"checkbox\",\r\n            name: \"envs\",\r\n            message: `What environments would you like to configure?`,\r\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\r\n        }]);\r\n    }\r\n\r\n    //Each env should ask 2 for two things: The url and the key.\r\n    let questions = q.envs.map(env => {\r\n        let defaultKey = process.env[`rally_api_key_${env}`];\r\n        if(configObject && configObject.api && configObject.api[env]){\r\n            defaultKey = configObject.api[env].key;\r\n        }\r\n\r\n        return [{\r\n            type: \"input\",\r\n            name: `api.${env}.url`,\r\n            message: `What is the api endpoint for ${env}?`,\r\n            default: defaults[env],\r\n        }, {\r\n            type: \"input\",\r\n            name: `api.${env}.key`,\r\n            message: `What is your api key for ${env}?`,\r\n            default: defaultKey,\r\n        }];\r\n    });\r\n\r\n    //flatten and ask\r\n    questions = [].concat(...questions);\r\n    q = await inquirer.prompt(questions);\r\n    if(propArray){\r\n        q.api = {...configObject.api, ...q.api};\r\n    }\r\n    return q;\r\n}\r\nexport async function $chalk(propArray){\r\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\r\n}\r\nexport async function $restrictUAT(propArray){\r\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\r\n}\r\nexport async function $repodir(propArray){\r\n    return await inquirer.prompt([{\r\n        type: \"input\",\r\n        name: `repodir`,\r\n        message: `Where is your rally repository?`,\r\n        default: process.env[\"rally_repo_path\"],\r\n    }]);\r\n}\r\n\r\n\r\nexport async function $prefixmode(propArray){\r\n    return {prefixmode: await askQuestion(\"Would you like to use a prefix?\")};\r\n}\r\n\r\nexport async function $project(propArray){\r\n    let project = await askInput(\"Subproject directory?\");\r\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\r\n        project = null\r\n    }\r\n    return {project};\r\n}\r\n\r\nexport async function $defaultEnv(propArray){\r\n    return await inquirer.prompt([{\r\n        type: \"input\",\r\n        name: `defaultEnv`,\r\n        message: `Default environment?`,\r\n        default: \"DEV\",\r\n    }]);\r\n}\r\n\r\n//Internal usage/testing\r\nexport async function selectProvider(providers, autoDefault = false){\r\n    addAutoCompletePrompt();\r\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\r\n    if(autoDefault){\r\n        return defaultProvider;\r\n    }else{\r\n        let choices = providers.arr.map(x => ({\r\n            name: x.chalkPrint(true),\r\n            value: x,\r\n        }))\r\n        let q = await inquirer.prompt([{\r\n            type: \"autocomplete\",\r\n            name: \"provider\",\r\n            default: defaultProvider,\r\n            source: async (sofar, input) => {\r\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\r\n            },\r\n        }]);\r\n        return q.provider;\r\n    }\r\n}\r\n\r\nexport async function selectLocal(path, typeName, Class){\r\n    addAutoCompletePrompt();\r\n    let basePath = join(configObject.repodir, path)\r\n    let f = await readdir(basePath);\r\n    let objs = f.map(name => new Class({path: name}));\r\n    let objsMap = objs.map(x => ({\r\n        name: x.chalkPrint(true),\r\n        value: x,\r\n    }));\r\n    let none = {\r\n        name: (chalk`      {red None}: {red None}`),\r\n        value: null,\r\n    };\r\n    objsMap.unshift(none);\r\n\r\n    let q = await inquirer.prompt([{\r\n        type: \"autocomplete\",\r\n        name: \"obj\",\r\n        message: `What ${typeName} do you want?`,\r\n        source: async (sofar, input) => {\r\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\r\n        },\r\n    }]);\r\n    return q.obj;\r\n}\r\n\r\nexport async function selectPreset(purpose = \"preset\"){\r\n    return selectLocal(\"silo-presets\", purpose, Preset);\r\n}\r\nexport async function selectRule(purpose = \"rule\"){\r\n    return selectLocal(\"silo-rules\", purpose, Rule);\r\n}\r\n\r\nexport async function askInput(name, question, def){\r\n    return (await inquirer.prompt([{\r\n        type: \"input\",\r\n        name: \"ok\",\r\n        message: question,\r\n        default: def,\r\n    }])).ok;\r\n}\r\n\r\nexport async function askQuestion(question){\r\n    return (await inquirer.prompt([{\r\n        type: \"confirm\",\r\n        name: \"ok\",\r\n        message: question,\r\n    }])).ok;\r\n}\r\n","import {getPrefix} from \"./index\";\r\nimport {join, resolve as pathResolve} from \"path\";\r\n\r\nrequire(\"source-map-support\").install();\r\n\r\nimport argparse from \"minimist\";\r\nimport * as allIndexBundle from \"./index.js\"\r\nimport {\r\n    rallyFunctions as funcs,\r\n    Preset, Rule, SupplyChain, Provider, Asset, User,\r\n    AbortError, UnconfiguredEnvError, Collection, APIError,\r\n} from \"./index.js\";\r\n\r\nimport {version as packageVersion} from \"../package.json\";\r\nimport {configFile, configObject, loadConfig} from \"./config.js\";\r\nimport {readFile, readFileSync, writeFileSync} from \"fs\";\r\n\r\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\r\n\r\nimport baseCode from \"./baseCode.js\";\r\nimport {sep as pathSeperator} from \"path\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport * as configHelpers from \"./config-create.js\";\r\nimport {inquirer} from \"./config-create\";\r\nconst False = false; const True = true; const None = null;\r\n\r\nlet argv = argparse(process.argv.slice(2), {\r\n    string: [\"file\", \"env\",\"prefixmode\"],\r\n    //boolean: [\"no-protect\"],\r\n    default: {protect: true, prefixmode: true},\r\n    alias: {\r\n        f: \"file\", e: \"env\",p:\"prefixmode\"\r\n    }\r\n});\r\n\r\n//help menu helper\r\nfunction printHelp(help, short){\r\n    let helpText = chalk`\r\n{white ${help.name}}: ${help.text}\r\n    Usage: ${help.usage || \"<unknown>\"}\r\n`\r\n    //Trim newlines\r\n    helpText = helpText.substring(1, helpText.length-1);\r\n\r\n    if(!short){\r\n        for(let param of help.params || []){\r\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\r\n        }\r\n        for(let arg of help.args || []){\r\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\r\n        }\r\n    }\r\n\r\n    return helpText;\r\n}\r\n\r\nasync function getFilesFromArgs(args){\r\n    let lastArg = args._.shift()\r\n    if(args.file){\r\n        let files = args.file;\r\n        if(typeof files === \"string\") files = [files];\r\n        return files;\r\n    }\r\n\r\n    if(lastArg == \"-\"){\r\n        log(\"Reading from stdin\");\r\n        let getStdin = require(\"get-stdin\");\r\n        let stdin = await getStdin();\r\n        let files  = stdin.split(\"\\n\");\r\n        if(files[files.length - 1] === \"\") files.pop();\r\n        return files;\r\n    }else{\r\n        args._.push(lastArg);\r\n    }\r\n}\r\n\r\n\r\nasync function regwritetoEnv(args){\r\n        log(chalk.green`Searching in specified file for hardcoded Preset and Rule names...`);\r\n\r\n        if(configObject.prefixmode == false){\r\n        var elements = process.argv.slice(9);}\r\n        else{\r\n            var elements = process.argv.slice(7);\r\n        }\r\n\r\n        //inquire is this is the right file name.\r\n        let filename = elements.join(' ')\r\n        async function filenameQ(filename){\r\n    return (await inquirer.prompt([{\r\n        type: \"confirm\",\r\n        name: \"filename\",\r\n        message: \"Is \" + filename + \" the correct filename?\",\r\n    }]).then(answers => {\r\n        //writing time\r\n         if(answers.filename!=true){\r\n          log(chalk.red`You indicated this was not the correct filename so the program exited`);\r\n             process.exit(22)\r\n        }\r\n\r\n\r\n        })\r\n    );\r\n}\r\n        await filenameQ(filename)\r\n\r\n        //reading time\r\n        let filetext = readFileSync(filename, 'utf-8');\r\n\r\n        // Regex and Replace time\r\n        var regex = /(@include |: |=)[\"'][N][L]/g;\r\n        var strmatch = filetext.match(regex);\r\n        // Replaces the strings found with regex with a prefixed version conditionally.\r\n        var replacementtext= filetext.replace(regex, function (strmatch) {\r\n            var prefixedmatch ='';\r\n            var equalpattern = '='\r\n            var includepattern = '@include '\r\n            if(strmatch.match(equalpattern)) {\r\n                prefixedmatch = (\"=\\'\"+ getPrefix()+ 'NL').toString()\r\n            } else if(strmatch.match(includepattern)){\r\n                prefixedmatch = (\"@include \"+'\"'+ getPrefix()+ 'NL').toString()\r\n            }\r\n            else{\r\n                prefixedmatch = (\": '\" + getPrefix()+ 'NL').toString()\r\n            }\r\n            return prefixedmatch\r\n        })\r\n        //inquire before writing to disk??\r\n        async function writetofileQ(filename){\r\n    return (await inquirer.prompt([{\r\n        type: \"confirm\",\r\n        name: \"writetofile\",\r\n        message: \"Do you want to add your prefix to preset/rule names in \" + filename + \" to disk?\",\r\n    }]).then(answers => {\r\n        //writing time\r\n         if(answers.writetofile==true){\r\n             writeFileSync(filename, replacementtext, { encoding: 'utf8' });\r\n             log(chalk.yellow`Writing is done!`);\r\n        }\r\n         else{\r\n             log(chalk.red(`You have indicated that you do not want to write `) + chalk.blue(filename) + chalk.red(` to disk.`));\r\n             process.exit(22)\r\n         }\r\n\r\n        })\r\n            );\r\n\r\n                }\r\n        await writetofileQ(filename)\r\n\r\n        return subCommand(regsub) (args);\r\n    };\r\n\r\nlet presetsub = {\r\n    async before(args){\r\n        this.env = args.env;\r\n        if(!this.env) throw new AbortError(\"No env supplied\");\r\n\r\n        this.files = await getFilesFromArgs(args);\r\n    },\r\n    async $grab(args){\r\n        if(!this.files){\r\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\r\n        }\r\n\r\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\r\n\r\n        let presets = this.files.map(path => new Preset({path, remote: false}));\r\n        for(let preset of presets){\r\n            //TODO small refactor\r\n            await preset.grabMetadata(this.env);\r\n            await preset.saveLocalMetadata();\r\n\r\n            if(args.full){\r\n                let remo = await Preset.getByName(this.env, preset.name);\r\n                await remo.resolve();\r\n                await remo.downloadCode();\r\n                await remo.saveLocalFile();\r\n            }\r\n        }\r\n    },\r\n    async $create(args){\r\n        let provider, name, ext;\r\n        if(args.provider){\r\n            provider = {name: args.provider};\r\n            ext = args.ext\r\n        }else{\r\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\r\n            ext = (await provider.getEditorConfig()).fileExt;\r\n        }\r\n        if(args.name){\r\n            name = args.name;\r\n        }else{\r\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\r\n        }\r\n\r\n        let preset = new Preset({subProject: configObject.project});\r\n\r\n        preset.providerType = {name: provider.name};\r\n        preset.isGeneric = true;\r\n        preset.name = name;\r\n        preset.ext = ext;\r\n        if(baseCode[provider.name]){\r\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\r\n        }else{\r\n            preset._code = \" \";\r\n        }\r\n\r\n        preset.saveLocalMetadata();\r\n        preset.saveLocalFile();\r\n    },\r\n    async $list(args){\r\n        log(\"Loading...\");\r\n        let presets = await Preset.getAll(this.env);\r\n        if(args.resolve){\r\n            Provider.getAll(this.env);\r\n            for(let preset of presets){\r\n                let resolve = await preset.resolve(this.env);\r\n                if(args.attach){\r\n                    let {proType} = resolve;\r\n                    proType.editorConfig.helpText = \"\";\r\n                    preset.meta = {\r\n                        ...preset.meta, proType\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        if(configObject.rawOutput) return presets;\r\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\r\n        presets.arr.sort((a, b) => {\r\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\r\n        });\r\n        for(let preset of presets){\r\n            log(preset.chalkPrint());\r\n        }\r\n    },\r\n    async $upload(args){\r\n        if(!this.files){\r\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\r\n        }\r\n       //rewriting files\r\n        if(configObject.prefixmode == false){\r\n            log(chalk.yellow`PREFIX MODE IS OFF`)\r\n        }\r\n        else{\r\n             log(chalk.yellow`PREFIX MODE IS ON`)\r\n        }\r\n\r\n        log(chalk.green`Rewriting file inplace with regex...`)\r\n        log(chalk.green`The preset will be uploaded to the ` + chalk.blue(this.env) + chalk.green(` environment...`))\r\n\r\n        async function noprefixQ(env){\r\n    return (await inquirer.prompt([{\r\n        type: \"confirm\",\r\n        name: \"noprefixenv\",\r\n        message: \"Do you want to push this prefixless code to \" + env + \"?\",\r\n    }]).then(answers => {\r\n        //writing time\r\n         if(answers.noprefixenv!=true){\r\n          log(chalk.red(`You have indicated that you need prefixes before pushing to `) + chalk.blue(env) + chalk.red(` so the program exited`));\r\n             process.exit(22)\r\n        }\r\n         else{\r\n             regwritetoEnv(args)\r\n         }\r\n\r\n\r\n        })\r\n    );\r\n}\r\n\r\n        if (this.env==\"DEV\"){await regwritetoEnv(args)}\r\n        //If prefixmode is false there will be no prefix added to the code body or upload.\r\n        else if(configObject.prefixmode == false && this.env==\"UAT\"|\"QA\"|\"PROD\"){await noprefixQ(this.env)}\r\n        else{log(chalk`there is no environment specified`)}\r\n\r\n\r\n        //changing the this.files object to be an array of the full file name.\r\n\r\n        if(configObject.prefixmode==false){\r\n        this.files = [((process.argv.slice(9)).join(' ')).toString()]}\r\n        else{\r\n            this.files = [((process.argv.slice(7)).join(' ')).toString()]\r\n        }\r\n\r\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\r\n\r\n        let presets = this.files.map(path => new Preset({path, remote: false}));\r\n        await funcs.uploadPresets(this.env, presets);\r\n    },\r\n    async $diff(args){\r\n        let file = this.files[0];\r\n        if(!this.files){\r\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\r\n        }\r\n\r\n        let preset = new Preset({path: file, remote: false});\r\n        if(!preset.name){\r\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\r\n        }\r\n        let preset2 = await Preset.getByName(this.env, preset.name);\r\n        if(!preset2){\r\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\r\n        }\r\n        await preset2.downloadCode();\r\n\r\n        let tempfile = require(\"tempy\").file;\r\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\r\n        writeFileSync(temp, preset2.code);\r\n\r\n        let ptr = `${file},${temp}`;\r\n\r\n\r\n        //raw output returns \"file1\" \"file2\"\r\n        if(configObject.rawOutput){\r\n            if(args[\"only-new\"]) return temp;\r\n            else return ptr;\r\n        }\r\n\r\n        //standard diff\r\n        argv.command = argv.command || \"diff\";\r\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\r\n    },\r\n    async unknown(arg, args){\r\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\r\n    },\r\n}\r\n\r\nlet rulesub = {\r\n    async before(args){\r\n        this.env = args.env;\r\n        if(!this.env) throw new AbortError(\"No env supplied\");\r\n    },\r\n    async $list(args){\r\n        log(\"Loading...\");\r\n        let rules = await Rule.getAll(this.env);\r\n        if(configObject.rawOutput) return rules;\r\n\r\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\r\n        rules.arr.sort((a, b) => {\r\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\r\n        });\r\n        for(let rule of rules) log(rule.chalkPrint());\r\n    },\r\n    async $create(args){\r\n        let preset = await configHelpers.selectPreset();\r\n        let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\r\n        let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\r\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\r\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\r\n\r\n        let dynamicNexts = [];\r\n        let next;\r\n        while(next = await configHelpers.selectRule(\"dynamic next\")){\r\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\r\n            dynamicNexts.push({\r\n                meta: {\r\n                    transition: name,\r\n                },\r\n                type: \"workflowRules\",\r\n                name: next.name,\r\n            });\r\n        }\r\n\r\n        let rule = new Rule();\r\n        rule.name = name;\r\n        rule.description = desc;\r\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\r\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\r\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\r\n        if(dynamicNexts[0]){\r\n            rule.relationships.dynamicNexts = {\r\n                data: dynamicNexts\r\n            };\r\n        }\r\n\r\n        rule.saveB()\r\n    },\r\n    async unknown(arg, args){\r\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\r\n    },\r\n}\r\n\r\nlet jupytersub = {\r\n    async before(args){\r\n        this.input = args._.shift() || \"main.ipynb\";\r\n        this.output = args._.shift() || \"main.py\";\r\n    },\r\n    async $build(args){\r\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\r\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\r\n\r\n        try{\r\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\r\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\r\n        }catch(e){\r\n            if(e.code !== \"ENOENT\") throw e;\r\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\r\n            return;\r\n        }\r\n    },\r\n}\r\n\r\nlet regsub = {\r\n    async before(args){\r\n        this.files = await getFilesFromArgs(args);\r\n        if(!this.files){\r\n        throw new AbortError(\"No files provided to upload (use --file argument)\");\r\n    }}\r\n\r\n}\r\n\r\nasync function categorizeString(str, defaultSubproject=undefined){\r\n    str = str.trim();\r\n    if(str.startsWith('\"')){\r\n        str = str.slice(1, -1);\r\n    }\r\n    let match\r\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\r\n        if(match[1] === \"P\"){\r\n            let ret = await Preset.getById(match[2], match[3]);\r\n            //TODO modify for subproject a bit\r\n            return ret;\r\n        }else if(match[1] === \"R\"){\r\n            return await Rule.getById(match[2], match[3]);\r\n        }else{\r\n            return null;\r\n        }\r\n    }else if(match = /^([\\w\\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\r\n        try{\r\n            switch(match[2]){\r\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\r\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\r\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\r\n            }\r\n        }catch(e){\r\n            log(e);\r\n        }\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nlet supplysub = {\r\n    async before(args){\r\n        this.env = args.env;\r\n        if(!this.env) throw new AbortError(\"No env supplied\");\r\n        this.files = await getFilesFromArgs(args);\r\n    },\r\n\r\n    //Calculate a supply chain based on a starting rule at the top of the stack\r\n    async $calc(args){\r\n        let name = args._.shift();\r\n        let stopName = args._.shift();\r\n        if(!name){\r\n            throw new AbortError(\"No starting rule or @ supplied\");\r\n        }\r\n\r\n\r\n        if(name === \"@\"){\r\n            log(chalk`Silo clone started`);\r\n            this.chain = new SupplyChain();\r\n            this.chain.remote = args.env;\r\n        }else{\r\n            let rules = await Rule.getAll(this.env);\r\n            let stop, start;\r\n            start = rules.findByNameContains(name);\r\n            if(stopName) stop = rules.findByNameContains(stopName);\r\n\r\n            if(!start){\r\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\r\n            }\r\n            log(chalk`Analyzing supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\r\n            this.chain = new SupplyChain(start, stop);\r\n        }\r\n\r\n        await this.chain.calculate();\r\n        await this.postAction(args);\r\n    },\r\n    async postAction(args){\r\n        //Now that we have a supply chain object, do something with it\r\n        if(args[\"to\"]){\r\n            this.chain.log();\r\n            if(this.chain.presets.arr[0]){\r\n                await this.chain.downloadPresetCode(this.chain.presets);\r\n                log(\"Done\");\r\n            }\r\n\r\n            if(Array.isArray(args[\"to\"])){\r\n                for(let to of args[\"to\"]){\r\n                    await this.chain.syncTo(to);\r\n                }\r\n            }else{\r\n                await this.chain.syncTo(args[\"to\"]);\r\n            }\r\n        }else if(args[\"diff\"]){\r\n            //Very basic diff\r\n            let env = args[\"diff\"];\r\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\r\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\r\n\r\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\r\n            otherPresets = new Collection(otherPresets.filter(x => x));\r\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\r\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\r\n\r\n            const printPresets = (preset, otherPreset) => {\r\n                log(preset.chalkPrint(true));\r\n                if(otherPreset.name){\r\n                    log(otherPreset.chalkPrint(true));\r\n                }else{\r\n                    log(chalk`{red (None)}`);\r\n                }\r\n            }\r\n\r\n            for(let preset of this.chain.presets){\r\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\r\n\r\n                if(preset.code === otherPreset.code){\r\n                    if(!args[\"ignore-same\"]){\r\n                        printPresets(preset, otherPreset);\r\n                        log(\"Code Same\");\r\n                    }\r\n                }else{\r\n                    printPresets(preset, otherPreset);\r\n                    if(args[\"ignore-same\"]){\r\n                        log(\"-------\");\r\n                    }else{\r\n                        log(\"Code Different\");\r\n                    }\r\n                }\r\n            }\r\n\r\n        }else{\r\n            await this.chain.log();\r\n        }\r\n\r\n    },\r\n    async $make(args){\r\n        let set = new Set();\r\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\r\n        //TODO modify for better hinting, and add this elsewhere\r\n        for(let hint of hints){\r\n            if(hint === \"presets-uat\"){\r\n                log(\"got hint\");\r\n                await Preset.getAll(\"UAT\");\r\n            }\r\n        }\r\n\r\n        for(let file of this.files){\r\n            set.add(await categorizeString(file));\r\n        }\r\n        let files = [...set];\r\n        files = files.filter(f => f && !f.missing);\r\n        this.chain = new SupplyChain();\r\n\r\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\r\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\r\n        this.chain.notifications = new Collection([]);\r\n\r\n        await this.postAction(args);\r\n    },\r\n    async unknown(arg, args){\r\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\r\n    },\r\n}\r\n\r\nfunction subCommand(object){\r\n    object = {\r\n        before(){}, after(){}, unknown(){},\r\n        ...object\r\n    };\r\n    return async function(args){\r\n        //Grab the next arg on the stack, find a function tied to it, and run\r\n        let arg = args._.shift();\r\n        let key = \"$\" + arg;\r\n        let ret;\r\n        if(object[key]){\r\n            await object.before(args);\r\n            ret = await object[key](args);\r\n            await object.after(args);\r\n        }else{\r\n            if(arg === undefined) arg = \"(None)\";\r\n            object.unknown(arg, args);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nlet cli = {\r\n    @helpText(`Display the help menu`)\r\n    @usage(`rally help [subhelp]`)\r\n    @param(\"subhelp\", \"The name of the command to see help for\")\r\n    async help(args){\r\n        let arg = args._.shift();\r\n        if(arg){\r\n            let help = helpEntries[arg];\r\n            if(!help){\r\n                log(chalk`No help found for '{red ${arg}}'`);\r\n            }else{\r\n                log(printHelp(helpEntries[arg]));\r\n            }\r\n        }else{\r\n            for(let helpArg in helpEntries){\r\n                log(printHelp(helpEntries[helpArg], true));\r\n            }\r\n        }\r\n    },\r\n\r\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\r\n    @usage(\"rally jupyter build [in] [out]\")\r\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipynb and main.py\")\r\n    async jupyter(args){\r\n        return subCommand(jupytersub)(args);\r\n    },\r\n\r\n    @helpText(`Regex and writing related actions locally`)\r\n    @usage(`rally regwrite [action] --file [file]`)\r\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\r\n    @arg(\"-f\", \"--file\", \"A file to act on\")\r\n    async regwrite(args){\r\n        log(chalk.green`Searching in specified file for hardcoded Preset and Rule names...`);\r\n\r\n        if(configObject.prefixmode==false){\r\n        var elements = process.argv.slice(9);}\r\n        else{\r\n            var elements = process.argv.slice(7);\r\n        }\r\n\r\n        //inquire is this is the right file name.\r\n        let filename = elements.join(' ')\r\n        async function filenameQ(filename){\r\n    return (await inquirer.prompt([{\r\n        type: \"confirm\",\r\n        name: \"filename\",\r\n        message: \"Is \" + filename + \" the correct filename?\",\r\n    }]).then(answers => {\r\n        //writing time\r\n         if(answers.filename!=true){\r\n          log(chalk.red`You indicated this was not the correct filename so the program exited`);\r\n             process.exit(22)\r\n        }\r\n\r\n\r\n        })\r\n    );\r\n}\r\n        await filenameQ(filename)\r\n\r\n        //reading time\r\n        let filetext = readFileSync(filename, 'utf-8');\r\n\r\n        // Regex and Replace time\r\n        var regex = /(@include |: |=)[\"'][N][L]/g;\r\n        var strmatch = filetext.match(regex);\r\n        // Replaces the strings found with regex with a prefixed version conditionally.\r\n        var replacementtext= filetext.replace(regex, function (strmatch) {\r\n            var prefixedmatch ='';\r\n            var equalpattern = '='\r\n            var includepattern = '@include '\r\n            if(strmatch.match(equalpattern)) {\r\n                prefixedmatch = (\"=\\'\"+ getPrefix()+ 'NL').toString()\r\n            } else if(strmatch.match(includepattern)){\r\n                prefixedmatch = (\"@include \"+'\"'+ getPrefix()+ 'NL').toString()\r\n            }\r\n            else{\r\n                prefixedmatch = (\": '\" + getPrefix()+ 'NL').toString()\r\n            }\r\n            return prefixedmatch\r\n        })\r\n        //inquire before writing to disk??\r\n        async function writetofileQ(filename){\r\n    return (await inquirer.prompt([{\r\n        type: \"confirm\",\r\n        name: \"writetofile\",\r\n        message: \"Do you want to add your prefix to preset/rule names in \" + filename + \" to disk?\",\r\n    }]).then(answers => {\r\n        //writing time\r\n         if(answers.writetofile==true){\r\n             writeFileSync(filename, replacementtext, { encoding: 'utf8' });\r\n             log(chalk.yellow`Writing is done!`);\r\n        }\r\n\r\n        })\r\n            );\r\n\r\n                }\r\n        await writetofileQ(filename)\r\n\r\n        return subCommand(regsub) (args);\r\n    },\r\n\r\n    //@helpText(`Print input args, for debugging`)\r\n    async printArgs(args){\r\n        log(args);\r\n    },\r\n\r\n    @helpText(`Preset related actions`)\r\n    @usage(`rally preset [action] --env <environment> --file [file1] --file [file2] ...`)\r\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\r\n    @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n    @arg(\"-f\", \"--file\", \"A file to act on\")\r\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\r\n    @arg(\"-p\", \"--prefixmode\", \"A boolean for using prefixes or not\")\r\n    async preset(args){\r\n        return subCommand(presetsub)(args);\r\n    },\r\n\r\n    @helpText(`Rule related actions`)\r\n    @usage(`rally rule [action] --env [environment]`)\r\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\r\n    @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n    @arg(\"-p\", \"--prefixmode\", \"A boolean for using prefixes or not\")\r\n    async rule(args){\r\n        return subCommand(rulesub)(args);\r\n    },\r\n\r\n    @helpText(`supply chain related actions`)\r\n    @usage(`rally supply [action] [identifier] --env [environment]`)\r\n    @param(\"action\", \"The action to perform. Can be calc.\")\r\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\r\n    @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n    async supply(args){\r\n        return subCommand(supplysub)(args);\r\n    },\r\n\r\n    @helpText(`List all available providers, or find one by name/id`)\r\n    @usage(`rally providers [identifier] --env [env] --raw`)\r\n    @param(\"identifier\", \"Either the name or id of the provider\")\r\n    @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\r\n    async providers(args){\r\n        let env = args.env;\r\n        if(!env) return errorLog(\"No env supplied.\");\r\n        let ident = args._.shift();\r\n\r\n        let providers = await Provider.getAll(env);\r\n\r\n        if(ident){\r\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\r\n            if(!pro){\r\n                log(chalk`Couldn't find provider by {green ${ident}}`);\r\n            }else{\r\n                log(pro.chalkPrint(false));\r\n                let econfig = await pro.getEditorConfig();\r\n                if(args.raw){\r\n                    return pro;\r\n                }else{\r\n                    if(econfig.helpText.length > 100){\r\n                        econfig.helpText = \"<too long to display>\";\r\n                    }\r\n                    if(econfig.completions.length > 5){\r\n                        econfig.completions = \"<too long to display>\";\r\n                    }\r\n                    log(econfig);\r\n                }\r\n            }\r\n        }else{\r\n            if(args.raw) return providers;\r\n            for(let pro of providers) log(pro.chalkPrint());\r\n        }\r\n    },\r\n\r\n    @helpText(`Change config for rally tools`)\r\n    @usage(\"rally config [key] --set [value] --raw\")\r\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\r\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\r\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\r\n    async config(args){\r\n        let prop = args._.shift();\r\n        let propArray = prop && prop.split(\".\");\r\n\r\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\r\n        let newConfigObject;\r\n\r\n        if(!prop){\r\n            if(configObject.rawOutput) return configObject;\r\n            log(\"Creating new config\");\r\n            newConfigObject = {\r\n                ...configObject,\r\n            };\r\n            for(let helperName in configHelpers){\r\n                if(helperName.startsWith(\"$\")){\r\n                    newConfigObject = {\r\n                        ...newConfigObject,\r\n                        ...(await configHelpers[helperName](false))\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            log(chalk`Editing option {green ${prop}}`);\r\n            if(args.set){\r\n                newConfigObject = {\r\n                    ...configObject,\r\n                    [prop]: args.set,\r\n                };\r\n            }else{\r\n                let ident = \"$\" + propArray[0];\r\n\r\n                if(configHelpers[ident]){\r\n                    newConfigObject = {\r\n                        ...configObject,\r\n                        ...(await configHelpers[ident](propArray))\r\n                    };\r\n                }else{\r\n                    log(chalk`No helper for {red ${ident}}`);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        newConfigObject.hasConfig = true;\r\n\r\n        //Create readable json and make sure the user is ok with it\r\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\r\n        log(newConfig);\r\n\r\n        //-y or --set will make this not prompt\r\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\r\n        writeFileSync(configFile, newConfig, {mode: 0o600});\r\n        log(chalk`Created file {green ${configFile}}.`);\r\n    },\r\n\r\n    @helpText(`create/modify asset`)\r\n    @usage(\"rally asset [action] [action...]\")\r\n    @param(\"action\", chalk`Options are create, delete, launch, addfile. You can supply multiple actions to chain them`)\r\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\r\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\r\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch)`)\r\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\r\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\r\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\r\n    async asset(args){\r\n        function uuid(args){\r\n            const digits = 16;\r\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\r\n        }\r\n\r\n        let name = args.name || `TEST_#`;\r\n        let env = args.env;\r\n\r\n        let asset;\r\n        let arg = args._.shift()\r\n        if(!arg){\r\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\r\n        }\r\n\r\n        if(arg == \"create\"){\r\n            name = name.replace(\"#\", uuid());\r\n            asset = await Asset.createNew(name, env);\r\n        }else{\r\n            args._.unshift(arg);\r\n            if(args.id){\r\n                asset = Asset.lite(args.id, env);\r\n            }else{\r\n                asset = await Asset.getByName(env, args.name);\r\n            }\r\n        }\r\n\r\n        if(!asset){\r\n            throw new AbortError(\"No asset found/created\");\r\n        }\r\n        let launchArg = 0;\r\n        let fileArg = 0;\r\n\r\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\r\n\r\n        while(arg = args._.shift()){\r\n            if(arg === \"launch\"){\r\n                let initData = arrayify(args[\"init-data\"], launchArg);\r\n                if(initData && initData.startsWith(\"@\")){\r\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\r\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\r\n                }\r\n\r\n                let jobName = arrayify(args[\"job-name\"], launchArg);\r\n                let p = await Rule.getByName(env, jobName);\r\n                if(!p){\r\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\r\n                }else{\r\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset.chalkPrint(false)}`);\r\n                }\r\n\r\n                asset.startWorkflow(jobName, initData)\r\n                launchArg++;\r\n            }else if(arg === \"addfile\"){\r\n                let label = arrayify(args[\"file-label\"], fileArg)\r\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\r\n                if(label === undefined || !uri){\r\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\r\n                }\r\n                await asset.addFile(label, uri);\r\n                log(chalk`Added file ${label}`);\r\n                fileArg++;\r\n            }else if(arg === \"delete\"){\r\n                await asset.delete();\r\n            }else if(arg === \"create\"){\r\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\r\n            }else if(arg === \"show\"){\r\n                log(asset);\r\n            }\r\n        }\r\n    },\r\n\r\n    async checkSegments(args){\r\n        let asset = args._.shift()\r\n        let res = await allIndexBundle.lib.makeAPIRequest({\r\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\r\n        });\r\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\r\n\r\n        let r = segments.reduce((lastSegment, val, ind) => {\r\n            let curSegment = val.startTime;\r\n            if(curSegment < lastSegment){\r\n                log(\"bad segment \" + (ind + 1))\r\n            }\r\n            return val.endTime\r\n         }, \"00:00:00:00\");\r\n    },\r\n\r\n    async listAssets(args, tag){\r\n        let req = await allIndexBundle.lib.indexPathFast({\r\n            env: args.env, path: \"/assets\",\r\n            qs: {\r\n                noRelationships: true,\r\n                sort: \"id\",\r\n            },\r\n            chunksize: 30,\r\n        });\r\n        for(let asset of req){\r\n            log(asset.id);\r\n        }\r\n\r\n        return req;\r\n    },\r\n\r\n    async listSegments(args){\r\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\r\n\r\n        for(let asset of f){\r\n            let r = await allIndexBundle.lib.makeAPIRequest({\r\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\r\n            });\r\n\r\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\r\n            if(segs && segs.length > 1){\r\n                log(asset.id);\r\n                log(asset.name);\r\n            }\r\n        }\r\n    },\r\n    async test2(args){\r\n        let wfr = await allIndexBundle.lib.indexPath({\r\n            env: args.env, path: \"/workflowRuleMetadata\",\r\n        });\r\n        log(wfr);\r\n\r\n        for(let wfrm of wfr){\r\n            try{\r\n                wfrm.id = undefined;\r\n                wfrm.links = undefined;\r\n                log(wfrm);\r\n                let req = await allIndexBundle.lib.makeAPIRequest({\r\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\r\n                    method: \"POST\",\r\n                    payload: {data: wfrm},\r\n                })\r\n            }catch(e){\r\n                log(\"caught\");\r\n            }\r\n            //break;\r\n        }\r\n    },\r\n\r\n    async test3(args){\r\n        let wfr = await allIndexBundle.lib.indexPath({\r\n            env: args.env, path: \"/workflowRuleMetadata\",\r\n        });\r\n        log(wfr);\r\n\r\n        for(let wfrm of wfr){\r\n            try{\r\n                wfrm.id = undefined;\r\n                wfrm.links = undefined;\r\n                log(wfrm);\r\n                let req = await allIndexBundle.lib.makeAPIRequest({\r\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\r\n                    method: \"POST\",\r\n                    payload: {data: wfrm},\r\n                })\r\n            }catch(e){\r\n                log(\"caught\");\r\n            }\r\n            //break;\r\n        }\r\n    },\r\n\r\n    sleep(time = 1000){\r\n        return new Promise(resolve => setTimeout(resolve, time));\r\n    },\r\n\r\n    async audit(args){\r\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\r\n        await configHelpers.addAutoCompletePrompt();\r\n        let q = await configHelpers.inquirer.prompt([{\r\n            type: \"autocomplete\", name: \"obj\",\r\n            message: `What audit do you want?`,\r\n            source: async (sofar, input) => {\r\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\r\n            },\r\n        }]);\r\n        let choice = q.obj;\r\n        let resourceId = undefined\r\n        let filterFunc = _=>_;\r\n        if(choice === \"presets\"){\r\n            let preset = await configHelpers.selectPreset();\r\n            let remote = await Preset.getByName(args.env, preset.name);\r\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\r\n            filterFunc = ev => ev.resource == \"Preset\";\r\n            resourceId = remote.id;\r\n        }else if(choice === \"rule\"){\r\n            let preset = await configHelpers.selectRule();\r\n            let remote = await Rule.getByName(args.env, preset.name);\r\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\r\n            filterFunc = ev => ev.resource == \"Rule\";\r\n            resourceId = remote.id;\r\n        }else{\r\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\r\n        }\r\n\r\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\r\n        log(`Loading audits (this might take a while)`);\r\n        const numRows = 100;\r\n        let r = await allIndexBundle.lib.makeAPIRequest({\r\n            env: args.env,\r\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\r\n            timeout: 180000,\r\n        });\r\n        r.data = r.data.filter(filterFunc);\r\n\r\n        log(\"Data received, parsing users\");\r\n\r\n        for(let event of r.data){\r\n            let uid = event?.correlation?.userId;\r\n            if(!uid) continue;\r\n            try{\r\n                event.user = await User.getById(args.env, uid);\r\n            }catch(e){\r\n                event.user = {name: \"????\"};\r\n            }\r\n        }\r\n\r\n        if(args.raw) return r.data;\r\n        let evCounter = 0;\r\n        for(let event of r.data){\r\n            let evtime = moment(event.createdAt);\r\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\r\n            let timedist = evtime.fromNow();\r\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\r\n\r\n            if(++evCounter >= 30) break;\r\n        }\r\n    },\r\n\r\n    async audit2(args){\r\n        const numRows = 1000\r\n        let r = await allIndexBundle.lib.makeAPIRequest({\r\n            env: args.env,\r\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\r\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\r\n            timeout: 60000,\r\n        });\r\n        for(let event of r.data){\r\n            log(event.event);\r\n        }\r\n    },\r\n\r\n    async findIDs(args){\r\n        let files = await getFilesFromArgs(args);\r\n        for(let file of files){\r\n            let preset = await Preset.getByName(args.env, file);\r\n            await preset.resolve();\r\n            log(`silo-presets/${file}.${preset.ext}`);\r\n        }\r\n    },\r\n\r\n    async getAssets(env, name){\r\n        if(!this.callid) this.callid = 0;\r\n        this.callid++;\r\n        let callid = this.callid;\r\n\r\n        await this.sleep(500);\r\n\r\n        if(callid != this.callid) return this.lastResult || [];\r\n\r\n        let req = await allIndexBundle.lib.makeAPIRequest({\r\n            env, path: `/assets`,\r\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\r\n        })\r\n        this.lastCall = Date.now();\r\n\r\n        return this.lastResult = req.data;\r\n    },\r\n\r\n    async content(args){\r\n        configHelpers.addAutoCompletePrompt();\r\n        let q = await configHelpers.inquirer.prompt([{\r\n            type: \"autocomplete\",\r\n            name: \"what\",\r\n            message: `What asset do you want?`,\r\n            source: async (sofar, input) => {\r\n                let assets = await this.getAssets(args.env, input);\r\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\r\n                return assets.map(x => ({\r\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\r\n                    value: x,\r\n                }));\r\n            },\r\n        }]);\r\n    },\r\n\r\n    async [\"@\"](args){\r\n        args._.unshift(\"-\");\r\n        args._.unshift(\"make\");\r\n        return this.supply(args);\r\n    },\r\n\r\n    async test(args){\r\n        let asset = await Asset.getByName(\"UAT\", args.name);\r\n        log(asset);\r\n    },\r\n\r\n    //Used to test startup and teardown speed.\r\n    noop(){\r\n        return true;\r\n    },\r\n};\r\nasync function unknownCommand(cmd){\r\n    log(chalk`Unknown command {red ${cmd}}.`);\r\n}\r\n\r\nasync function noCommand(){\r\n    write(chalk` \r\nRally Tools {yellow v${packageVersion} (alpha)} CLI\r\ncreated by John Schmidt <John_Schmidt@discovery.com>\r\nenhanced by David Ampofo <David_Ampofo@discovery.com>\r\n`);\r\n\r\n    //Prompt users to setup one time config.\r\n    if(!configObject.hasConfig){\r\n        write(chalk`\r\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\r\n`);\r\n        return;\r\n    }\r\n\r\n    //API Access tests\r\n    for(let env of [\"LOCAL\", \"DEV\", \"UAT\", \"QA\", \"PROD\"]){\r\n        //Test access. Returns HTTP response code\r\n        let resultStr;\r\n        try{\r\n            let result = await funcs.testAccess(env);\r\n\r\n            //Create a colored display and response\r\n            resultStr = chalk`{yellow ${result} <unknown>}`;\r\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\r\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\r\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\r\n            else if(result === true) resultStr = chalk`{green OK}`;\r\n            else if(result === false) resultStr = chalk`{red BAD}`;\r\n        }catch(e){\r\n            if(e instanceof UnconfiguredEnvError){\r\n                resultStr = chalk`{yellow Unconfigured}`;\r\n            }else if(e instanceof APIError){\r\n                if(!e.response.body){\r\n                    resultStr = chalk`{red Timeout (?)}`;\r\n                }\r\n            }else if(e.name == \"RequestError\"){\r\n                resultStr = chalk`{red Low level error (check internet): ${e.error.errno}}`;\r\n            }else{\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        log(chalk`   ${env}: ${resultStr}`);\r\n    }\r\n}\r\n\r\nasync function $main(){\r\n    //Supply --config to load a different config file\r\n    if(argv.config) loadConfig(argv.config);\r\n\r\n    // First we need to decide if the user wants color or not. If they do want\r\n    // color, we need to ensure we use the right mode\r\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\r\n    if(chalk.level === 0 || !chalk.enabled){\r\n        let force = argv[\"force-color\"];\r\n        if(force){\r\n            chalk.enabled = true;\r\n            if(force === true && chalk.level === 0){\r\n                chalk.level = 1;\r\n            }else if(Number(force)){\r\n                chalk.level = Number(force);\r\n            }\r\n        }\r\n    }\r\n\r\n    //This flag being true allows you to modify UAT and PROD\r\n    if(!argv[\"protect\"]){\r\n        configObject.dangerModify = true;\r\n    }\r\n\r\n    //This enables raw output for some functions\r\n    if(argv[\"raw\"]){\r\n        configObject.rawOutput = true;\r\n        global.log = ()=>{};\r\n        global.errorLog = ()=>{};\r\n        global.write = ()=>{};\r\n    }\r\n    //This prevents the prefix from being used\r\n    if(argv[\"prefixmode\"]){\r\n        configObject.prefixmode = JSON.parse(argv[\"prefixmode\"]);\r\n        //console.log( configObject)\r\n    }\r\n\r\n\r\n    if(argv[\"ignore-missing\"]){\r\n        configObject.ignoreMissing = true;\r\n    }\r\n\r\n    //Default environment should normally be from config, but it can be\r\n    //overridden by the -e/--env flag\r\n    if(configObject.defaultEnv){\r\n        argv.env = argv.env || configObject.defaultEnv;\r\n    }\r\n\r\n    //Enable verbose logging in some places.\r\n    if(argv[\"vverbose\"]){\r\n        configObject.verbose = argv[\"vverbose\"];\r\n        configObject.vverbose = true;\r\n    }else if(argv[\"verbose\"]){\r\n        configObject.verbose = argv[\"verbose\"]\r\n    }else if(argv[\"vvverbose\"]){\r\n        configObject.verbose = true;\r\n        configObject.vverbose = true;\r\n        configObject.vvverbose = true;\r\n    }\r\n\r\n    //copy argument array to new object to allow modification\r\n    argv._old = argv._.slice();\r\n\r\n    //Take first argument after `node bundle.js`\r\n    //If there is no argument, display the default version info and API access.\r\n    let func = argv._.shift();\r\n    if(func){\r\n        if(!cli[func]) return await unknownCommand(func);\r\n        try{\r\n            //Call the cli function\r\n            let ret = await cli[func](argv);\r\n            if(ret){\r\n                write(chalk.white(\"CLI returned: \"));\r\n                if(ret instanceof Collection) ret = ret.arr;\r\n\r\n                //Directly use console.log so that --raw works as intended.\r\n                if(typeof ret === \"object\"){\r\n                    console.log(JSON.stringify(ret, null, 4));\r\n                }else{\r\n                    console.log(ret);\r\n                }\r\n            }\r\n        }catch(e){\r\n            if(e instanceof AbortError){\r\n                log(chalk`{red CLI Aborted}: ${e.message}`);\r\n            }else{\r\n                throw e;\r\n            }\r\n        }\r\n    }else{\r\n        await noCommand();\r\n    }\r\n}\r\n\r\nasync function main(...args){\r\n    //Catch all for errors to avoid ugly default node promise catcher\r\n    try{\r\n        await $main(...args);\r\n    }catch(e){\r\n        errorLog(e.stack);\r\n    }\r\n}\r\n\r\n// If this is an imported module, then we should exec the cli interface.\r\n// Otherwise just export everything.\r\nif(require.main === module){\r\n    main();\r\n}else{\r\n    module.exports = allIndexBundle;\r\n}\r\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","getPrefix","prefix","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","rp","importLazy","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","vvverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Asset","metadata","normalizeMetadata","newMetadata","md","lite","createNew","req","delete","addFile","label","fileuris","Array","instances","startWorkflow","jobName","initData","startEvaluate","presetid","movie","preset","home","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","rallyConfiguration","systemManaged","fromMetadata","providerType","provider","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","asset","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","uploadPresetData","grabMetadata","includeMetadata","shouldTest","providerSettings","PresetName","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","prefixmode","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","syncTo","rule","User","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","SdviContentMover","SdviEvaluate","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$prefixmode","$project","project","askInput","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","basePath","objsMap","none","selectPreset","purpose","selectRule","question","def","ok","argv","argparse","string","protect","alias","printHelp","help","substring","getFilesFromArgs","lastArg","shift","files","getStdin","stdin","regwritetoEnv","green","elements","filename","filenameQ","then","answers","exit","filetext","strmatch","replacementtext","prefixedmatch","equalpattern","includepattern","toString","writetofileQ","writetofile","encoding","yellow","blue","subCommand","regsub","presetsub","before","$grab","full","remo","$create","configHelpers","baseCode","$list","attach","rawOutput","$upload","noprefixQ","noprefixenv","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","output","$build","cmd","categorizeString","defaultSubproject","trim","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","object","after","cli","helpArg","jupyter","regwrite","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","launchArg","fileArg","arrayify","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","listAssets","tag","noRelationships","listSegments","segs","test2","wfr","wfrm","test3","sleep","setTimeout","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","moment","date","format","timedist","fromNow","audit2","findIDs","getAssets","callid","lastResult","lastCall","Date","content","assets","self","noop","unknownCommand","noCommand","packageVersion","resultStr","error","errno","$main","enabled","level","force","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}