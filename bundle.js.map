{"version":3,"file":"bundle.js","sources":["src/rally-tools.js","src/preset.js","src/rule.js","src/index.js","src/cli.js"],"sourcesContent":["import rp from \"request-promise\";\nimport chalk from \"chalk\";\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    static async makeAPIRequest({env, path, path_full, payload, body, json = true, method = \"GET\", qs, headers = {}, fullResponse = false}){\n        //Keys are defined in enviornment variables\n        let rally_api_key = process.env[`rally_api_key_${env}`];\n        let rally_api = process.env[`rally_api_url_${env}`];\n\n        if(!rally_api && !path_full) return errorLog(`Unsupported env ${env}`);\n\n        path = path_full || rally_api + path;\n        body = body || payload && JSON.stringify(payload);\n\n        if(global.logAPI){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            auth: {bearer: rally_api_key},\n            headers: {\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n        let response = await rp(requestOptions);\n\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions);\n        }\n        if(fullResponse){\n            return response;\n        }else if(json){\n            return JSON.parse(response.body);\n        }else{\n            return response.body;\n        }\n    }\n    //Index a json endpoint that returns a {links} field.\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}\n{green ${JSON.stringify(opts)}}\n{reset ${response.body}}\n        `);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n","import fs from \"fs\";\nimport {lib, AbortError} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\n\nlet envs = {};\nexport default class Preset{\n    constructor({path, remote, data}){\n        this.remote = remote\n        if(!this.remote){\n            this.path = path;\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} e.message`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            this.name = this.parseFilenameForName() || this.parseCodeForName();\n        }else{\n            this.name = data.attributes.name;\n            this.id = data.id;\n            this.rawData = data;\n        }\n    }\n    chalkPrint(){\n        let id = String(this.remote && this.remote + \"-\" + this.id || \"Local\").padStart(8);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \");\n        }\n    }\n    parseCodeForName(){\n        const name_regex = /name:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new Regexp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    getPath(){\n        return `${process.env.rally_repo_path}/silo-presets/${this.name}.${this.ext}`;\n    }\n    getMetadataPath(){\n        return `${process.env.rally_repo_path}/silo-metadata/${this.name}.json`;\n    }\n    codeBinary(){\n        if(this.code.startsWith(\"=BASE64=\")){\n            return bota(this.code.substring(8));\n        }else{\n            return this.code;\n        }\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}}`);\n    }\n    async uploadCodeToEnv(env, createFunction){\n        write(chalk`Uploading {green ${this.name}} to {green ${env}}: `);\n\n        //First query the api to see if this already exists.\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets`,\n            qs: {filter: `name=${this.name}`},\n        });\n        let remote = res.data[0];\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            //If it needs to be created then we need to ask the user for metadata\n            write(\"create, \");\n            let metadata = await createFunction(this);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: {data: metadata},\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log();\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getMetadata(){}\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n\n    static envs(env){\n        return envs[env] = envs[env] || Preset.cache_envs(env);\n    }\n    static cache_env(env){\n\n    }\n}\n","export default class Rule{\n    constructor(data, remote){\n        this.rawData = data;\n        this.remote = remote;\n    }\n    chalkPrint(){\n        let D = this.rawData;\n        let id = String(this.remote + \"-\" + D.id).padStart(8);\n        return chalk`{green ${id}}: {blue ${D.attributes.name}}`;\n    }\n}\n","import {lib} from \"./rally-tools.js\";\n\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return providers;\n    },\n    async getEditorConfig(env, provider){\n        let config = await lib.makeAPIRequest({env, path_full: provider.links.editorConfig});\n        let helpText = config.helpText;\n        config.helpText = () => helpText;\n        return config\n    },\n    async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return rules;\n    },\n    async getPresets(env){\n        let rules = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return rules;\n    },\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport {rallyFunctions as funcs, Preset, Rule, AbortError} from \"./index.js\";\nimport inquirer from \"inquirer\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\nfunction prettyPrintProvider(pro){\n    let id = String(pro.id).padStart(4);\n    return chalk`{green ${id}}: {blue ${pro.attributes.category}} - {green ${pro.attributes.name}}`;\n}\n\nlet cli = {\n    async help(){\n        log(this);\n    },\n    async [\"print-args\"](args){\n        log(args);\n    },\n    async preset(args){\n        let env = args.env;\n        let arg = argv._[1];\n        if(arg === \"upload\"){\n            let files = args.file;\n            if(!files){\n                throw new AbortError(\"No files provided to upload (use --file argument)\");\n            }\n            if(typeof files === \"string\") files = [files];\n            log(chalk`Uploading {green ${files.length}} preset(s) to {green ${env}}.`);\n\n            let presets = files.map(path => new Preset({path, remote: false}));\n            await funcs.uploadPresets(args.env, presets, async preset => {\n                log(\"asking... \");\n                let provider = await this[\"select-provider\"](args);\n                return preset.constructMetadata(provider.id);\n            });\n        }else if(arg === \"list\"){\n            log(\"Loading...\");\n            let presets = await funcs.getPresets(env);\n            log(chalk`{yellow ${presets.length}} presets on {green ${env}}.`);\n            for(let data of presets) log(new Preset({data, remote: env}).chalkPrint());\n        }else{\n            log(\"Unknown Action \" + arg);\n        }\n        //log(presets);\n    },\n    async rule(args){\n        let env = args.env;\n        let arg = argv._[1];\n\n        if(arg === \"list\"){\n            log(\"Loading...\");\n            let rules = await funcs.getRules(env);\n            log(chalk`{yellow ${rules.length}} rules on {green ${env}}.`);\n            for(let data of rules) log(new Rule(data, env).chalkPrint());\n        }else{\n            log(\"Unknown Action \" + arg);\n        }\n    },\n    async providers(args){\n        let env = args.env;\n        let ident = argv._[1];\n\n        let providers = await funcs.getProviders(env);\n\n        if(ident){\n            let pro = providers.find(x => x.id == ident || x.attributes.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(prettyPrintProvider(pro));\n                log(await funcs.getEditorConfig(env, pro));\n            }\n        }else{\n            for(let pro of providers) log(prettyPrintProvider(pro));\n        }\n    },\n    async [\"select-provider\"](args){\n        let env = args.env;\n\n        let providers = await funcs.getProviders(env);\n        let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n        if(args.defaultSelect){\n            return defaultProvider;\n        }else{\n            let q = await inquirer.prompt([{\n                type: \"list\",\n                name: \"provider\",\n                default: defaultProvider,\n                choices: providers.map(x => ({\n                    name: prettyPrintProvider(x),\n                    value: x,\n                })),\n            },]);\n            return q.provider;\n        }\n    },\n};\n\nasync function $main(){\n    let func = argv._[0];\n    if(cli[func]){\n        try{\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                log(ret);\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        log(`Unknown command '${func}'. Try 'help'`);\n    }\n}\n\nasync function main(...args){\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\nmain();\n"],"names":["chalk","path","basename","funcs"],"mappings":"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"}