{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/providers.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject = {hasConfig: true};\ntry{\n    let json = readFileSync(configFile);\n    configObject = JSON.parse(json);\n}catch(e){\n    if(e.code == \"ENOENT\"){\n        configObject.hasConfig = false;\n        //ok, they should probably make a config\n    }else{\n        throw e;\n    }\n}\n\nexport {configObject};\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false\n    }){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload);\n        }\n\n        if(global.logAPI){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            auth: {bearer: rally_api_key},\n            headers: {\n                //SDVI ignores this header sometimes.\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n        let response = await rp(requestOptions);\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest(typeof env === \"string\" ? {env, path} : env);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest(typeof env === \"string\" ? {env, path} : env);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n        `);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this) log(d.chalkPrint(true));\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    constructor(){}\n    resolveApply(datum, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = datum.findById(dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = datum.findByName(dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n    resolveField(datum, name, isArray=false, direction=\"generic\"){\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return field.data.map(o => this.resolveApply(datum, o, direction));\n        }else{\n            return this.resolveApply(datum, field.data, direction);\n        }\n    }\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        delete this.relationships.organization;\n        delete this.data.id;\n        delete this.data.links;\n    }\n}\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this.data, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this.data, path)[lastKey] = val;\n        },\n    });\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Provider{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    //TODO env is unused...\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    @cached static async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return new Collection(providers.map(x => new Provider(x, env)));\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"id\");\ndefineAssoc(Provider, \"name\", \"attributes.name\");\ndefineAssoc(Provider, \"category\", \"attributes.category\");\n\nexport default Provider;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet presetShell = {\n    \"attributes\": {},\n    \"relationships\": {},\n};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data}){\n        super();\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            this.path = path;\n            let pathspl = this.path.split(\".\");\n            this.ext = pathspl[pathspl.length-1];\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} ${e.message}`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            let name = this.parseFilenameForName() || this.parseCodeForName();\n            try{\n                this.data = this.getLocalMetadata();\n            }catch(e){\n                this.data = Preset.newShell();\n            }\n            this.name = name;\n            this.isGeneric = true;\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n    }\n    static newShell(){\n        return {\n            \"attributes\": {},\n            \"relationships\": {},\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getProviders(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let providers = await Provider.getProviders(this.remote);\n        let proType = this.resolveField(providers, \"providerType\");\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        fs.writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n        fs.writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id) || \"Local\")\n        if(pad) id = id.padStart(10);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    get localpath(){\n        return path.join(configObject.repodir, \"silo-presets\", this.name + \".\" + this.ext);\n    }\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get localmetadatapath(){\n        return path.join(configObject.repodir, \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}} `);\n    }\n    async uploadCodeToEnv(env, includeMetadata){\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                });\n                write(\"metadata OK, \");\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log(\"Done\");\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getLocalMetadata(){\n        return fs.readFileSync(this.localmetadatapath, \"utf-8\");\n    }\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n    static async getByName(env, name){\n        if(Preset.hasLoadedAll){\n            return (await Preset.getPresets(env)).findByName(name);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: \"/presets\", qs: {\n                    filter: `name=${name}`,\n                },\n            });\n            if(data.data[0]) return new Preset({data: data.data[0], remote: env});\n        }\n    }\n\n    @cached static async getPresets(env){\n        Preset.hasLoadedAll = true;\n        let data = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return new Collection(data.map(dat => new Preset({remote: env, data: dat})));\n    }\n}\n\ndefineAssoc(Preset, \"name\", \"attributes.name\");\ndefineAssoc(Preset, \"id\", \"id\");\ndefineAssoc(Preset, \"attributes\", \"attributes\");\ndefineAssoc(Preset, \"relationships\", \"relationships\");\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Notification{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    @cached static async getNotifications(env){\n        let notifications = await lib.indexPath(env, \"/notificationPresets?page=1p25\");\n        notifications = notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n        return new Collection(notifications.map(x => new Notification(x, env)));\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"id\");\ndefineAssoc(Notification, \"name\", \"attributes.name\");\ndefineAssoc(Notification, \"address\", \"attributes.address\");\ndefineAssoc(Notification, \"type\", \"attributes.type\");\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nclass Rule extends RallyBase{\n    constructor(data, remote){\n        super();\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    async acclimatize(env){\n        let presets = await Preset.getPresets(env);\n        let rules = await Rule.getRules(env);\n        let providers = await Provider.getProviders(env);\n        let notifications = await Notification.getNotifications(env);\n\n        let preset  = this.resolveField(presets, \"preset\", false, \"specific\");\n        let pNext   = this.resolveField(rules, \"passNext\", false, \"specific\");\n        let eNext   = this.resolveField(rules, \"errorNext\", false, \"specific\");\n        let proType = this.resolveField(providers, \"providerType\", false, \"specific\");\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\", true, \"specific\");\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\", true, \"specific\");\n        let passNotif  = this.resolveField(notifications, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            fs.writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n        for(let key in this.relationships){\n            let relationship = this.relationships[key];\n            if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                delete this.relationships[key];\n            }\n        }\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rules {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            await this.patchStrip();\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return path.join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let presets = await Preset.getPresets(this.remote);\n        let rules = await Rule.getRules(this.remote);\n        let providers = await Provider.getProviders(this.remote);\n        let notifications = await Notification.getNotifications(this.remote);\n\n        let preset  = this.resolveField(presets, \"preset\", false);\n        let pNext   = this.resolveField(rules, \"passNext\", false);\n        let eNext   = this.resolveField(rules, \"errorNext\", false);\n        let proType = this.resolveField(providers, \"providerType\", false);\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\", true);\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\", true);\n        let passNotif  = this.resolveField(notifications, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n        delete this.relationships[\"dynamicNexts\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    static async getByName(env, name){\n        return (await Rule.getRules(env)).findByName(name);\n    }\n\n    @cached static async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return new Collection(rules.map(data => new Rule(data, env)));\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"attributes.name\");\ndefineAssoc(Rule, \"id\", \"id\");\ndefineAssoc(Rule, \"relationships\", \"relationships\");\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        this.startingRule = startingRule;\n        this.stopRule = stopRule\n        this.remote = startingRule.remote;\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getRules(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getPresets(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Getting providers... \");\n        this.allProviders = await Provider.getProviders(this.remote);\n        log(this.allProviders.length);\n\n        write(\"Getting notifications... \");\n        this.allNotifications = await Notification.getNotifications(this.remote);\n        log(this.allNotifications.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        log(\"Required notifications: \");\n        this.notifications.log();\n\n        write(\"Required rules: \");\n        log(this.rules.arr.length);\n        this.rules.log();\n\n        write(\"Required presets: \");\n        log(this.presets.arr.length);\n        this.presets.log();\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            await preset.save(env);\n        }\n        for(let rule of this.rules){\n            await rule.saveA(env);\n        }\n\n        log(\"\")\n        log(\"OK\")\n        log(\"Uncaching UAT\");\n        Rule.getRules.remove([env]);\n\n        for(let rule of this.rules){\n            await rule.saveB(env);\n        }\n    }\n}\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true});\n        return result.statusCode;\n    },\n}\n","import {configObject} from \"./config.js\";\nconst inquirer = importLazy(\"inquirer\");\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(env, providers){\n    let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n    if(args.defaultSelect){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.map(x => ({\n                name: prettyPrintProvider(x),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        if(args.file){\n            let files = args.file;\n            if(typeof files === \"string\") files = [files];\n            this.files = files;\n        }else if(args._.shift() == \"-\"){\n            log(\"Reading from stdin\");\n            let getStdin = require(\"get-stdin\");\n            let stdin = await getStdin();\n            this.files = stdin.split(\"\\n\");\n            if(this.files[this.files.length - 1] === \"\") this.files.pop();\n        }\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getPresets(this.env);\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: preset.ext});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput) return ptr;\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        const spawn = require(\"child_process\").spawn;\n        await spawn(argv.command,  [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getRules(this.env);\n        let start = rules.findByNameContains(name);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)}`);\n\n        let chain = new SupplyChain(start);\n        await chain.calculate();\n        if(args[\"to\"]){\n            await chain.syncTo(args[\"to\"]);\n        }else{\n            await chain.log();\n        }\n    },\n\n    async $magic(args){\n        let big = require(\"fs\").readFileSync(\"test.json\");\n        big = JSON.parse(big);\n\n        let presets = big.allPresets.arr.map(obj => {\n            let preset = new Preset({\n                data: obj.data, remote: big.remote\n            });\n            preset.code = obj._code;\n            return preset;\n        });\n        Preset.getPresets.cachePush([big.remote], new Collection(presets));\n\n        let rules = big.allRules.arr.map(obj => {\n            let rule = new Rule(\n                obj.data, big.remote\n            );\n            return rule;\n        });\n        Rule.getRules.cachePush([big.remote], new Collection(rules));\n\n        return await this.$calc(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getProviders(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    }\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"UAT\", \"DEV\", \"PROD\", \"LOCAL\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(!e instanceof UnconfiguredEnvError) throw e;\n            resultStr = chalk`{yellow Unconfigured}`;\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","json","readFileSync","JSON","parse","e","code","hasConfig","rp","importLazy","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","config","api","env","UnconfiguredEnvError","method","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","key","rally_api","url","path_full","path","payload","stringify","logAPI","qs","requestOptions","headers","response","fullResponse","includes","statusCode","APIError","body","contentType","isJSONResponse","AbortError","indexPath","all","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","isLocalEnv","Error","message","captureStackTrace","constructor","name","opts","Collection","arr","Symbol","iterator","id","find","x","d","chalkPrint","length","RallyBase","datum","dataObj","direction","obj","findById","findByName","isArray","field","relationships","map","o","resolveApply","val","Object","entries","organization","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","cached","target","oldFunc","cachedValues","newFunc","found","clearCache","cachePush","remove","filter","item","deepAccess","defineAssoc","classname","shortname","split","lastKey","pop","defineProperty","prototype","Provider","remote","getEditorConfig","editorConfig","fileExt","getFileExtension","getProviders","providers","sort","a","b","attributes","category","localeCompare","getmap","lang","pad","String","padStart","Preset","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","newShell","isGeneric","cleanup","acclimatize","ptype","provider","proType","resolveField","saveLocal","writeFileSync","localmetadatapath","localpath","uploadRemote","uploadCodeToEnv","save","downloadCode","providerData","_code","v","endsWith","basename","name_regex","match","strings","regex","RegExp","join","repodir","_path","immutable","uploadPresetData","res","includeMetadata","getByName","metadata","providerID","fs","hasLoadedAll","getPresets","dat","Notification","getNotifications","notifications","type","Rule","presets","rules","getRules","preset","pNext","eNext","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","relationship","Array","SupplyChain","startingRule","stopRule","calculate","allRules","allPresets","allProviders","allNotifications","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","findStringsInCode","neededRules","notif","p","verbose","delete","undefined","syncTo","rule","require","install","rallyFunctions","bestPagintation","silentAPI","time","dl","timeEnd","uploadPresets","createFunc","testAccess","result","inquirer","$api","propArray","defaults","q","prompt","keys","questions","envs","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","defaultProvider","defaultSelect","prettyPrintProvider","question","ok","argv","argparse","printHelp","help","substring","presetsub","before","file","files","_","shift","getStdin","stdin","$list","rawOutput","$upload","funcs","$diff","preset2","tempfile","temp","ptr","command","spawn","unknown","rulesub","supplysub","$calc","start","findByNameContains","chain","$magic","big","subCommand","object","ret","after","cli","helpArg","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","configHelpers","startsWith","set","newConfig","y","unknownCommand","cmd","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","defaultEnv","_old","white","main","stack","module","exports","allIndexBundle"],"mappings":"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"}