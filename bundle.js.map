{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/file.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/trace.js","src/index.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.log(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if(response.stateCode === 202) return true;\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) await opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    static async keepalive(func, inputData, {chunksize = 20, observe = async _=>_, progress = configObject.globalProgress} = {}){\n        let total = inputData ? inputData.length : func.length;\n        let i = 0;\n        let createPromise = () => {\n            let ret;\n            if(i >= total) return [];\n            if(inputData){\n                ret = [i, func(inputData[i])];\n            }else{\n                ret = [i, func[i]()];\n            }\n\n            i++;\n            return ret;\n        }\n\n        let values = [];\n        let finished = 0;\n        if(progress) process.stderr.write(\"\\n\");\n        let threads = [...this.range(chunksize)].map(async whichThread => {\n            while(true){\n                let [i, currentPromise] = createPromise();\n                if(i == undefined) break;\n                values[i] = await observe(await currentPromise);\n                if(progress) this.drawProgress(++finished, total);\n            }\n        });\n        await Promise.all(threads);\n        if(progress) process.stderr.write(\"\\n\");\n\n\n        return values;\n    }\n\n    static *range(start, end){\n        if(end === undefined){\n            end = start;\n            start = 0;\n        }\n        while(start < end) yield start++;\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        //Create a copy of the options in case we need to have a special first request\n        let start = opts.start || 1;\n        let initOpts = {...opts};\n        if(opts.pageSize){\n            initOpts.qs = {...opts.qs};\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\n        }\n\n        let json = await this.makeAPIRequest(initOpts);\n\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = await this.keepalive(\n            this.makeAPIRequest,\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\n                .map(i => ({...opts, path_full: linkToPage(i)})),\n            {chunksize: opts.chunksize, observe: opts.observe},\n        );\n        if(start == 1){\n            allResults.unshift(json);\n        }\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow && false){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Workflow`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Workflow\n                        },\n                    }\n                }\n            });\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(){\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        providerData: Buffer.from(preset.code, \"binary\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\");\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(\".\");\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(300);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() !== \"NOUPLOAD\"){\n            let headers = {};\n            //binary presets\n            if(this.relationships?.providerType?.data?.name == \"Vantage\"){\n                this.code = Buffer.from(this.code, \"utf8\");\n                this.code = this.code.toString(\"base64\");\n                headers[\"Content-Transfer-Encoding\"] = \"base64\";\n            }\n\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets/${id}/providerData`,\n                body: this.code, method: \"PUT\", fullResponse: true, timeout: 10000,\n                headers,\n            });\n            write(chalk`code up {yellow ${res.statusCode}}, `);\n        }else{\n            write(chalk`code skipped {yellow :)}, `);\n        }\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                if(this.relationships.tagNames){\n                    payload.relationships = {tagNames: this.relationships.tagNames};\n                }\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode == 500){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return;\n                }\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getInfo(env, jobid){\n    log(env, jobid);\n    let trace = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/trace`,\n    }).catch(x => null);\n\n    let renderedPreset = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/preset`,\n    }).catch(x => null);\n\n    let result = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/result`,\n    }).catch(x => null);\n\n    let error = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/error`,\n    }).catch(x => null);\n\n    let output = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/output`,\n    }).catch(x => null);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        lineNumber = /^[\\w ]+:(\\d+):/g.exec(errLine);\n        if(lineNumber && lineNumber[1]){\n            errorList.push(await findLineInFile(renderedPreset, lineNumber[1]));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile};\nexport default Trace;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"move\",\n            \"source\": {\n                \"labels\": [ \"MyLabel\" ],\n                \"tags\": [ \"segmented\" ]\n                \"storageSet\": [ \"*\", \"-OtherStorageBucket\" ],\n\n            },\n            \"destination\": {\n                \"storage\": \"Archive\",\n                \"newLabel\": \"myNewLabel\",\n                \"overwrite\": \"always\"\n            }\n        }\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`,\n};\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let basePath = configObject.repodir;\n    let f = await readdir(basePath);\n    let objs = f.filter(name => name.includes(path)).map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n\n    if(canSelectNone) objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace, findLineInFile, getInfo as getTraceInfo} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset({canSelectNone: false});\n        let passNext = await configHelpers.selectRule({purpose: \"'On Exit OK'\"});\n        let errorNext = await configHelpers.selectRule({purpose: \"'On Exit Error'\"});\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule({purpose: \"dynamic next\"})){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, args._.shift());\n    }\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n                }\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list or create.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n        let ln = args._.shift();\n        if(!ln){\n            log(\"is trace\");\n            let traceInfo = await parseTrace(args.env, jobId);\n\n            for(let line of traceInfo){\n                if(typeof(line) == \"string\"){\n                    log(chalk.red(line));\n                }else{\n                    printOutLine(line);\n                }\n            }\n        }else{\n            log(\"is ln\");\n            let {renderedPreset} = await getTraceInfo(args.env, jobId);\n            return findLineInFile(renderedPreset, Number(ln));\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    @helpText(`create/modify asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Options are create, delete, launch, addfile, metadata, show, patchMetadata, and launchEvalute. You can supply multiple actions to chain them`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`~`,  `--anon`,       chalk`Supply this if no asset is needed (used to lauch anonymous workflows)`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch and launchEvalute)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    @arg(`~`,  `--metadata`,   chalk`Metadata to use with patchMetadata. Can be string, or {white @path/to/file} for a file. Data must contain a top level key Metadata, or Workflow. Metadata will be pached into METADATA. Workflow will be patched into WORKFLOW_METADATA(not currently available)`)\n    @arg(`~`,  `--priority`,   chalk`set the priority of all launched jobs`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        while(arg = args._.shift()){\n\n            if(arg === \"launch\"){\n                let initData = arrayify(args[\"init-data\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, {initData, priority: args.priority})\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, {initData, priority: args.priority})\n                }\n                launchArg++;\n            }else if(arg === \"launchEvaluate\"){\n                let initData = arrayify(args[\"init-data\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let jobData;\n                let ephemeralEval = false;\n                let p;\n                if(jobName.startsWith(\"@\")){\n                    ephemeralEval = true;\n                    jobData = readFileSync(jobName.slice(1));\n                }else{\n                    p = await Preset.getByName(env, jobName);\n                    if(!p){\n                        throw new AbortError(`Cannot launch preset ${jobName}, does not exist (?)`);\n                    }else{\n                        log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                    }\n                }\n\n\n                if(ephemeralEval){\n                    await Asset.startEphemeralEvaluateIdeal(env, p.id, initData)\n                }else{\n                    await asset.startEvaluate(p.id, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\" || arg == \"load\"){\n                if(asset.lite) asset = await Asset.getById(env, asset.id);\n                if(arg == \"show\") log(asset);\n            }else if(arg === \"metadata\" || arg === \"md\"){\n                log(await asset.getMetadata());\n            }else if(arg === \"patchMetadata\"){\n                let initData = arrayify(args[\"metadata\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                initData = JSON.parse(initData);\n\n                await asset.patchMetadata(initData);\n            }\n        }\n        if(configObject.rawOutput) return asset;\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async getJobs(args){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: \"presetName=DCTC Add Element US Checkin\",\n            },\n        });\n\n        log(req.map(x => x.relationships.asset.data.id).join(\"\\n\"))\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset({canSelectNone: false});\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule({canSelectNone: false});\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Rule\";\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        log(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        let asset = await Asset.getByName(\"UAT\", args.name);\n        log(asset);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    let envs = new Set([\"LOCAL\", \"UAT\", \"DEV\", \"PROD\", \"QA\", ...Object.keys(configObject.api)]);\n\n    //API Access tests\n    for(let env of envs){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error.errno}}`;\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    if(argv[\"update-immutable\"]){\n        configObject.updateImmutable = true;\n    }\n\n    configObject.globalProgress = !argv[\"hide-progress\"];\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","stateCode","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","globalProgress","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","progress","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","sleep","setTimeout","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","instances","round","Asset","lite","metadata","normalizeMetadata","newMetadata","md","getMetadata","forceRefresh","req","patchMetadata","Workflow","Metadata","createNew","getFiles","addFile","label","fileuris","Array","startWorkflow","jobName","initData","priority","startAnonWorkflow","startEphemeralEvaluateIdeal","preset","dynamicPresetData","provider","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","self","state","startEvaluate","presetid","home","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","asset","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","updateImmutable","uploadPresetData","trim","grabMetadata","includeMetadata","shouldTest","tagNames","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rawOutput","syncTo","rule","User","Tag","prefix","curated","create","notCurated","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","index","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","includeFilename","printOutLine","eLine","getInfo","jobid","trace","catch","error","output","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","SdviContentMover","SdviEvaluate","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","canSelectNone","basePath","objsMap","none","selectPreset","purpose","selectRule","question","def","ok","argv","argparse","string","boolean","protect","alias","printHelp","help","substring","getFilesFromArgs","lastArg","shift","files","getStdin","stdin","presetsub","before","$grab","full","remo","$create","configHelpers","baseCode","$list","attach","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","categorizeString","defaultSubproject","tagsub","tags","tag","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","ln","traceInfo","getTraceInfo","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","anon","launchArg","fileArg","arrayify","jobData","ephemeralEval","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","getJobs","listAssets","noRelationships","listSegments","segs","test2","wfr","wfrm","test3","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","moment","date","format","timedist","fromNow","audit2","findIDs","getAssets","callid","lastResult","lastCall","Date","content","assets","noop","unknownCommand","noCommand","packageVersion","resultStr","errno","$main","enabled","level","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}