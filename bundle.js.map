{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/preset.js","src/rule.js","src/supply-chain.js","src/providers.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject = {hasConfig: true};\ntry{\n    let json = readFileSync(configFile);\n    configObject = JSON.parse(json);\n}catch(e){\n    if(e.code == \"ENOENT\"){\n        configObject.hasConfig = false;\n        //ok, they should probably make a config\n    }else{\n        throw e;\n    }\n}\n\nexport {configObject};\n","import rp from \"request-promise\";\nimport chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    static async makeAPIRequest({env, path, path_full, payload, body, json = true, method = \"GET\", qs, headers = {}, fullResponse = false}){\n        //Keys are defined in enviornment variables\n        let config = configObject.api[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && config.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n\n        path = path_full || rally_api + path;\n        body = body || payload && JSON.stringify(payload);\n\n        if(global.logAPI){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            auth: {bearer: rally_api_key},\n            headers: {\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n        let response = await rp(requestOptions);\n\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions);\n        }\n        if(fullResponse){\n            return response;\n        }else if(json){\n            return JSON.parse(response.body);\n        }else{\n            return response.body;\n        }\n    }\n    //Index a json endpoint that returns a {links} field.\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}\n{green ${JSON.stringify(opts)}}\n{reset ${response.body}}\n        `);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(namec){\n        return this.arr.find(x => x.name.includes(name));\n    }\n}\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this.data, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this.data, path)[lastKey] = val;\n        },\n    });\n}\n","import fs from \"fs\";\nimport {lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\nimport {cached} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\n\nlet presetShell = {\n    \"attributes\": {},\n    \"relationships\": {},\n};\n\nclass Preset{\n    constructor({path, remote, data}){\n        this.remote = remote\n        if(!this.remote){\n            this.path = path;\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} e.message`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            this.name = this.parseFilenameForName() || this.parseCodeForName();\n        }else{\n            this.name = data.attributes.name;\n            this.id = data.id;\n            this.data = data;\n        }\n    }\n    shellData(){\n        let data = Object.assign({}, presetShell);\n        return data;\n    }\n    async downloadCode(){\n        if(this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(){\n        let id = String(this.remote && this.remote + \"-\" + this.id || \"Local\").padStart(8);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new Regexp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    getPath(){\n        return `${process.env.rally_repo_path}/silo-presets/${this.name}.${this.ext}`;\n    }\n    getMetadataPath(){\n        return `${process.env.rally_repo_path}/silo-metadata/${this.name}.json`;\n    }\n    codeBinary(){\n        if(this.code.startsWith(\"=BASE64=\")){\n            return bota(this.code.substring(8));\n        }else{\n            return this.code;\n        }\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}}`);\n    }\n    async uploadCodeToEnv(env, createFunction){\n        write(chalk`Uploading {green ${this.name}} to {green ${env}}: `);\n\n        //First query the api to see if this already exists.\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets`,\n            qs: {filter: `name=${this.name}`},\n        });\n        let remote = res.data[0];\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            //If it needs to be created then we need to ask the user for metadata\n            write(\"create, \");\n            let metadata = await createFunction(this);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: {data: metadata},\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log();\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getMetadata(){}\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n\n    @cached static async getPresets(env){\n        let data = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return new Collection(data.map(dat => new Preset({remote: env, data: dat})));\n    }\n}\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\n\nclass Rule{\n    constructor(data, remote){\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n        //this.cleanup();\n    }\n    async cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            delete val.links;\n        }\n    }\n    async resolveField(datum, name){\n        let field = this.relationships[name];\n        if(!field) return;\n        if(!field.data) return;\n        for(let obj of datum){\n            if(obj.id == field.data.id){\n                return obj;\n            }\n        }\n    }\n    async resolve(){\n        let presets = await Preset.getPresets(this.remote);\n        let rules = await Rule.getRules(this.remote);\n        resolveField(presets, \"preset\");\n        resolveField(rules, \"passNext\");\n        resolveField(rules, \"errorNext\");\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(8);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n\n    @cached static async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return new Collection(rules.map(data => new Rule(data, env)));\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"attributes.name\");\ndefineAssoc(Rule, \"id\", \"id\");\ndefineAssoc(Rule, \"relationships\", \"relationships\");\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule){\n        this.startingRule = startingRule;\n        this.remote = startingRule.remote;\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getRules(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getPresets(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            currentRule\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Provider{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    async getEditorConfig(env, provider){\n        if(this.editorConfig) return this.editorConfig;\n\n        return this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n    }\n    @cached static async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return new Collection(providers.map(x => new Provider(x, env)));\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"id\");\ndefineAssoc(Provider, \"name\", \"attributes.name\");\ndefineAssoc(Provider, \"category\", \"attributes.category\");\n\nexport default Provider;\n","import {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true});\n        return result.statusCode;\n    },\n}\n","import inquirer from \"inquirer\";\nimport {configObject} from \"./config.js\";\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(env, providers){\n    let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n    if(args.defaultSelect){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.map(x => ({\n                name: prettyPrintProvider(x),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection\n} from \"./index.js\";\n\nimport inquirer from \"inquirer\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    boolean: [\"no-protect\"],\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        this.files = files;\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getPresets(this.env);\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets, async preset => {\n            log(\"asking... \");\n            let providers = await Provider.getProviders(this.env);\n            let provider = await configHelpers.selectProvider(this.env, providers);\n            return preset.constructMetadata(provider.id);\n        });\n    },\n    async $diff(args){\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $upload(args){\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $calc(args){\n        let name = args._[2];\n        let rules = await Rule.getRules(this.env);\n        let start;\n        for(let rule of rules){\n            if(rule.name.toLowerCase().includes(name.toLowerCase())){\n                start = rule;\n                break;\n            }\n        }\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)}`);\n\n        let chain = new SupplyChain(start);\n        await chain.calculate();\n        //log(chain);\n    },\n    async $magic(args){\n        let big = require(\"fs\").readFileSync(\"test.json\");\n        big = JSON.parse(big);\n\n        log(big.remote);\n        let presets = big.allPresets.arr.map(obj => {\n            let preset = new Preset({\n                data: obj.data, remote: big.remote\n            });\n            preset.code = obj._code;\n            return preset;\n        });\n        Preset.getPresets.cachePush([big.remote], new Collection(presets));\n\n        let rules = big.allRules.arr.map(obj => {\n            let rule = new Rule(\n                obj.data, big.remote\n            );\n            rule.code = obj._code;\n            return rule;\n        });\n        Rule.getRules.cachePush([big.remote], new Collection(rules));\n\n        return await this.$calc(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        let arg = args._[1];\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._[1];\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload or list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._[1];\n\n        let providers = await Provider.getProviders(env);\n\n        if(ident){\n            let pro = providers.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                log(await pro.getEditorConfig());\n                if(args.raw) return pro;\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._[1];\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n};\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n    for(let env of [\"UAT\", \"DEV\", \"PROD\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = \"{yellow ${result} <unknown>\";\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n        }catch(e){\n            if(!e instanceof UnconfiguredEnvError) throw e;\n            resultStr = chalk`{yellow Unconfigured}`;\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    configObject.dangerModify = argv[\"no-protect\"];\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    let func = argv._[0];\n    if(cli[func]){\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                console.log(JSON.stringify(ret, null, 4));\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\nmain();\n"],"names":["configFile","homedir","configObject","hasConfig","json","readFileSync","JSON","parse","e","code","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","env","path","path_full","payload","body","method","qs","headers","fullResponse","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","key","rally_api","url","stringify","logAPI","requestOptions","uri","bearer","resolveWithFullResponse","response","rp","includes","statusCode","APIError","indexPath","all","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","AbortError","Error","message","captureStackTrace","constructor","name","opts","Collection","arr","Symbol","iterator","id","find","x","namec","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","length","found","cached","target","oldFunc","cachedValues","newFunc","clearCache","cachePush","deepAccess","obj","o","defineAssoc","classname","shortname","split","lastKey","pop","defineProperty","prototype","val","presetShell","Preset","remote","getLocalCode","parseFilenameForName","parseCodeForName","attributes","Object","assign","downloadCode","providerData","_code","v","String","padStart","endsWith","basename","name_regex","match","strings","filter","regex","Regexp","rally_repo_path","ext","startsWith","bota","substring","uploadPresetData","res","uploadCodeToEnv","createFunction","metadata","providerID","fs","getPresets","map","dat","Rule","isGeneric","cleanup","entries","relationships","resolveField","datum","field","presets","rules","getRules","pad","SupplyChain","startingRule","calculate","allRules","allPresets","writeFileSync","ruleQueue","Provider","getEditorConfig","provider","editorConfig","getProviders","providers","sort","a","b","category","localeCompare","rallyFunctions","bestPagintation","silentAPI","time","dl","timeEnd","uploadPresets","createFunc","preset","testAccess","result","$api","propArray","defaults","q","envs","inquirer","prompt","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","defaultProvider","defaultSelect","prettyPrintProvider","question","ok","require","install","argv","argparse","printHelp","help","presetsub","before","files","file","$list","rawOutput","chalkPrint","$upload","funcs","configHelpers","constructMetadata","$diff","unknown","rulesub","rule","supplysub","$calc","_","start","toLowerCase","chain","$magic","big","subCommand","object","after","ret","cli","helpArg","printArgs","supply","ident","pro","raw","prop","newConfigObject","helperName","set","newConfig","y","mode","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","defaultEnv","white","main","stack"],"mappings":";;;;;;;;;;;;;;;AAGO,IAAIA,aAAaC,eAAY,eAA7B;;AAEP,IAAIC,eAAe,EAACC,WAAW,IAAZ,EAAnB;AACA,IAAG;QACKC,OAAOC,gBAAaL,UAAb,CAAX;mBACeM,KAAKC,KAAL,CAAWH,IAAX,CAAf;CAFJ,CAGC,OAAMI,CAAN,EAAQ;QACFA,EAAEC,IAAF,IAAU,QAAb,EAAsB;qBACLN,SAAb,GAAyB,KAAzB;;KADJ,MAGK;cACKK,CAAN;;;;;;;;;;;;;;;;;;ACVRE,OAAOC,KAAP,GAAeA,OAAf;AACAD,OAAOE,GAAP,GAAaC,QAAQC,QAAQF,GAAR,CAAYC,IAAZ,CAArB;AACAH,OAAOK,KAAP,GAAeF,QAAQG,QAAQC,MAAR,CAAeF,KAAf,CAAqBF,IAArB,CAAvB;AACAH,OAAOQ,QAAP,GAAkBL,QAAQD,IAAID,QAAMQ,GAAN,CAAUN,IAAV,CAAJ,CAA1B;;AAEA,IAAaO,GAAb,GAAO,MAAMA,GAAN,CAAS;iBACCC,cAAb,CAA4B,EAACC,GAAD,QAAMC,OAAN,EAAYC,SAAZ,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCtB,OAAO,IAA7C,EAAmDuB,SAAS,KAA5D,EAAmEC,EAAnE,EAAuEC,UAAU,EAAjF,EAAqFC,eAAe,KAApG,EAA5B,EAAuI;;YAE/HC,SAAS7B,aAAa8B,GAAb,CAAiBV,GAAjB,CAAb;YACG,CAACS,MAAJ,EAAY;kBACF,IAAIE,oBAAJ,CAAyBX,GAAzB,CAAN;SAEJ;YACGK,WAAW,KAAX,IAAoB,CAACzB,aAAagC,YAArC,EAAkD;gBAC3CZ,QAAQ,KAAR,IAAiBS,OAAOI,WAAxB,IAAuCb,QAAQ,MAAlD,EAAyD;sBAC/C,IAAIc,iBAAJ,CAAsBd,GAAtB,CAAN;;;;YAKJe,gBAAgBN,OAAOO,GAA3B;YACIC,YAAYR,OAAOS,GAAvB;;kBAGOhB,aAAae,YAAYhB,OAAhC;eACOG,QAAQD,WAAWnB,KAAKmC,SAAL,CAAehB,OAAf,CAA1B;;YAEGf,OAAOgC,MAAV,EAAiB;gBACT/B,OAAM,GAAEgB,MAAO,MAAKJ,OAAK,EAA7B;gBACGK,EAAH,EAAM;oBACEA,EAAJ;;;YAGLH,OAAH,EAAW;oBACC,cAAR,IAA0B,0BAA1B;;;YAGAkB,iBAAiB;kBAAA,EACTjB,IADS,EACHE,EADG,EACCgB,KAAKrB,OADN;kBAEX,EAACsB,QAAQR,aAAT,EAFW;;wBAIL;eACLR,OAFP,CAHiB;oBAOT,KAPS,EAOFiB,yBAAyB;SAP5C;YASIC,WAAW,MAAMC,GAAGL,cAAH,CAArB;;YAEG,CAACb,YAAD,IAAiB,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgBmB,QAAhB,CAAyBF,SAASG,UAAlC,CAArB,EAAmE;kBACzD,IAAIC,QAAJ,CAAaJ,QAAb,EAAuBJ,cAAvB,CAAN;;YAEDb,YAAH,EAAgB;mBACLiB,QAAP;SADJ,MAEM,IAAG3C,IAAH,EAAQ;mBACHE,KAAKC,KAAL,CAAWwC,SAASrB,IAApB,CAAP;SADE,MAED;mBACMqB,SAASrB,IAAhB;;;;iBAIK0B,SAAb,CAAuB9B,GAAvB,EAA4BC,OAA5B,EAAiC;YACzB8B,MAAM,EAAV;;YAEIjD,OAAO,MAAM,KAAKiB,cAAL,CAAoB,EAACC,GAAD,QAAMC,OAAN,EAApB,CAAjB;;YAEI,CAAC+B,QAAD,EAAWC,QAAX,IAAuB,KAAKD,QAAL,CAAclD,KAAKoD,KAAL,CAAWC,IAAzB,CAA3B;;;cAGM,CAAC,GAAGrD,KAAKsD,IAAT,CAAN;eACMtD,KAAKoD,KAAL,CAAWG,IAAjB,EAAsB;mBACX,MAAM,KAAKtC,cAAL,CAAoB,EAACC,GAAD,EAAME,WAAWpB,KAAKoD,KAAL,CAAWG,IAA5B,EAApB,CAAb;kBACM,CAAC,GAAGN,GAAJ,EAAS,GAAGjD,KAAKsD,IAAjB,CAAN;;;eAGGL,GAAP;;;;WAIGC,QAAP,CAAgBM,GAAhB,EAAoB;mCACUC,IAAnB,CAAwBD,GAAxB,EAA6BE,KAA7B,CAAmC,CAAnC;;;;;;;;;;;;iBAWEC,aAAb,CAA2BzC,GAA3B,EAAgCC,OAAhC,EAAqC;YAC7B8B,MAAM,EAAV;;YAEIjD,OAAO,MAAM,KAAKiB,cAAL,CAAoB,EAACC,GAAD,QAAMC,OAAN,EAApB,CAAjB;YACIyC,WAAW5D,KAAKoD,KAAL,CAAWS,KAA1B;cACMC,aAAaC,QAAQH,SAASI,OAAT,CAAiB,SAAjB,EAA6B,QAAOD,IAAK,GAAzC,CAA3B;;YAEI,CAACb,QAAD,EAAWC,QAAX,IAAuB,KAAKD,QAAL,CAAclD,KAAKoD,KAAL,CAAWC,IAAzB,CAA3B;;;;;YAKIY,WAAW,CAACC,QAAQC,OAAR,CAAgBnE,IAAhB,CAAD,CAAf;aACI,IAAIoE,IAAI,CAAZ,EAAeA,KAAKlB,QAApB,EAA8BkB,GAA9B,EAAkC;gBAC1BC,MAAM,KAAKpD,cAAL,CAAoB,EAACC,GAAD,EAAME,WAAW0C,WAAWM,CAAX,CAAjB,EAApB,CAAV;qBACSE,IAAT,CAAcD,GAAd;;;aAGA,IAAIE,OAAR,IAAmBN,QAAnB,EAA4B;kBAClB,CAAC,GAAGhB,GAAJ,EAAS,GAAG,CAAC,MAAMsB,OAAP,EAAgBjB,IAA5B,CAAN;;;eAGGL,GAAP;;CA3GR,CA6GC;AAED,IAAauB,UAAb,GAAO,MAAMA,UAAN,SAAyBC,KAAzB,CAA8B;gBACrBC,OAAZ,EAAoB;cACVA,OAAN;cACMC,iBAAN,CAAwB,IAAxB,EAA8B,KAAKC,WAAnC;aACKC,IAAL,GAAY,YAAZ;;CAJR;;AAQA,IAAa9B,QAAb,GAAO,MAAMA,QAAN,SAAuB0B,KAAvB,CAA4B;gBACnB9B,QAAZ,EAAsBmC,IAAtB,EAA2B;cACjBvE,OAAM;mCACeoC,SAASG,UAAW;SAC9C5C,KAAKmC,SAAL,CAAeyC,IAAf,CAAqB;SACrBnC,SAASrB,IAAK;SAHf;cAKMqD,iBAAN,CAAwB,IAAxB,EAA8B,KAAKC,WAAnC;aACKC,IAAL,GAAY,UAAZ;;CARR;;AAYA,IAAahD,oBAAb,GAAO,MAAMA,oBAAN,SAAmC2C,UAAnC,CAA6C;gBACpCtD,GAAZ,EAAgB;cACNA,GAAN;aACK2D,IAAL,GAAY,wBAAZ;;CAHR;;AAOA,IAAa7C,iBAAb,GAAO,MAAMA,iBAAN,SAAgCwC,UAAhC,CAA0C;gBACjCtD,GAAZ,EAAgB;cACNA,GAAN;aACK2D,IAAL,GAAY,qBAAZ;;CAHR;;AAOA,IAAaE,UAAb,GAAO,MAAMA,UAAN,CAAgB;gBACPC,GAAZ,EAAgB;aACPA,GAAL,GAAWA,GAAX;;KAEHC,OAAOC,QAAR,IAAmB;eACR,KAAKF,GAAL,CAASC,OAAOC,QAAhB,GAAP;;aAEKC,EAAT,EAAY;eACD,KAAKH,GAAL,CAASI,IAAT,CAAcC,KAAKA,EAAEF,EAAF,IAAQA,EAA3B,CAAP;;eAEON,IAAX,EAAgB;eACL,KAAKG,GAAL,CAASI,IAAT,CAAcC,KAAKA,EAAER,IAAF,IAAUA,IAA7B,CAAP;;uBAEeS,KAAnB,EAAyB;eACd,KAAKN,GAAL,CAASI,IAAT,CAAcC,KAAKA,EAAER,IAAF,CAAOhC,QAAP,CAAgBgC,IAAhB,CAAnB,CAAP;;CAdR;;ACzJA;AACA,AAAO,IAAIU,cAAc,EAAlB;AACP,IAAIC,YAAYX,QAAQU,YAAYV,IAAZ,IAAoBU,YAAYV,IAAZ,CAApB,GAAyCU,YAAYV,IAAZ,IAAoB,EAACA,IAAD,EAArF;;;AAGA,AAAO,SAASY,QAAT,CAAkBhF,IAAlB,EAAuB;WACnB,UAASiF,IAAT,EAAeb,IAAf,EAAoB;kBACbA,IAAV,EAAgBpE,IAAhB,GAAuBA,IAAvB;eACOiF,IAAP;KAFJ;;;;AAOJ,AAAO,SAASC,GAAT,CAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,IAA1B,EAA+B;WAC3B,UAASJ,IAAT,EAAeb,IAAf,EAAoB;YACnBkB,OAAOP,UAAUX,IAAV,EAAgBkB,IAAhB,GAAuBP,UAAUX,IAAV,EAAgBkB,IAAhB,IAAwB,EAA1D;aACKC,OAAL,CAAa,EAACJ,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAb;eACOJ,IAAP;KAHJ;;;;AAQJ,AAAO,SAASO,KAAT,CAAeA,KAAf,EAAsBH,IAAtB,EAA2B;WACvB,UAASJ,IAAT,EAAeb,IAAf,EAAoB;YACnBqB,SAASV,UAAUX,IAAV,EAAgBqB,MAAhB,GAAyBV,UAAUX,IAAV,EAAgBqB,MAAhB,IAA0B,EAAhE;eACOF,OAAP,CAAe,EAACC,KAAD,EAAQH,IAAR,EAAf;eACOJ,IAAP;KAHJ;;;;AAQJ,AAAO,SAASS,KAAT,CAAeA,KAAf,EAAqB;WACjB,UAAST,IAAT,EAAeb,IAAf,EAAoB;gBACfsB,MAAMnC,OAAN,CAAc,kBAAd,EAAkCzD,KAAM,aAAxC,CAAR;kBACUsE,IAAV,EAAgBsB,KAAhB,GAAwBA,KAAxB;eACOT,IAAP;KAHJ;;;AAoBJ,SAASU,gBAAT,CAA0BL,IAA1B,EAAgCM,KAAhC,EAAsC;SAC9B,IAAI,CAACC,OAAD,EAAUC,KAAV,CAAR,IAA4BF,KAA5B,EAAkC;YAC3BN,KAAKS,MAAL,KAAgBF,QAAQE,MAA3B,EAAmC;aAC/B,IAAIpC,CAAR,IAAakC,OAAb,EAAqB;gBACdP,KAAK3B,CAAL,MAAYkC,QAAQlC,CAAR,CAAf,EAA0B;uBACf,EAACqC,OAAO,IAAR,EAAcF,KAAd,EAAP;;;;WAIL,EAACE,OAAO,KAAR,EAAP;;;;;AAKJ,AAAO,SAASC,MAAT,CAAgBC,MAAhB,EAAwBzE,GAAxB,EAA6B4D,IAA7B,EAAkC;QACjCc,UAAUd,KAAKS,KAAnB;QACIM,eAAe,EAAnB;aACSC,OAAT,CAAiB,GAAGf,IAApB,EAAyB;YACjB,EAACU,KAAD,EAAQF,KAAR,KAAiBH,iBAAiBL,IAAjB,EAAuBc,YAAvB,CAArB;YACG,CAACJ,KAAJ,EAAU;;oBAEEG,QAAQ,GAAGb,IAAX,CAAR;yBACazB,IAAb,CAAkB,CAACyB,IAAD,EAAOQ,KAAP,CAAlB;;eAEGA,KAAP;;YAEIQ,UAAR,GAAqB,YAAU;uBACZ,EAAf;KADJ;YAGQC,SAAR,GAAoB,UAASjB,IAAT,EAAeQ,KAAf,EAAqB;qBACxBjC,IAAb,CAAkB,CAACyB,IAAD,EAAOQ,KAAP,CAAlB;KADJ;;wBAKOT,IADP;eAEWgB;;;;;;AAMf,SAASG,UAAT,CAAoBC,GAApB,EAAyB/F,OAAzB,EAA8B;QACtBgG,IAAID,GAAR;SACI,IAAIhF,GAAR,IAAef,OAAf,EAAoB;YACb,CAACgG,CAAJ,EAAO,OAAO,EAAP;YACHA,EAAEjF,GAAF,CAAJ;;WAEGiF,CAAP;;;;;AAKJ,AAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,SAAhC,EAA2CnG,OAA3C,EAAgD;cAC5CA,QAAKoG,KAAL,CAAW,GAAX,CAAP;QACIC,UAAUrG,QAAKsG,GAAL,EAAd;;WAEOC,cAAP,CAAsBL,UAAUM,SAAhC,EAA2CL,SAA3C,EAAsD;cAC7C;mBACML,WAAW,KAAK3D,IAAhB,EAAsBnC,OAAtB,EAA4BqG,OAA5B,CAAP;SAF8C;YAI9CI,GAAJ,EAAQ;uBACO,KAAKtE,IAAhB,EAAsBnC,OAAtB,EAA4BqG,OAA5B,IAAuCI,GAAvC;;KALR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGJ,IAAIC,cAAc;kBACA,EADA;qBAEG;CAFrB;;IAKMC,mBAAN,MAAMA,MAAN,CAAY;gBACI,QAAC3G,OAAD,EAAO4G,MAAP,EAAezE,IAAf,EAAZ,EAAiC;aACxByE,MAAL,GAAcA,MAAd;YACG,CAAC,KAAKA,MAAT,EAAgB;iBACP5G,IAAL,GAAYA,OAAZ;gBACG;qBACMd,IAAL,GAAY,KAAK2H,YAAL,EAAZ;aADJ,CAEC,OAAM5H,CAAN,EAAQ;oBACDG,KAAM,4BAAV;sBACM,IAAIiE,UAAJ,CAAe,mCAAf,CAAN;;iBAECK,IAAL,GAAY,KAAKoD,oBAAL,MAA+B,KAAKC,gBAAL,EAA3C;SARJ,MASK;iBACIrD,IAAL,GAAYvB,KAAK6E,UAAL,CAAgBtD,IAA5B;iBACKM,EAAL,GAAU7B,KAAK6B,EAAf;iBACK7B,IAAL,GAAYA,IAAZ;;;gBAGG;YACHA,OAAO8E,OAAOC,MAAP,CAAc,EAAd,EAAkBR,WAAlB,CAAX;eACOvE,IAAP;;UAEEgF,YAAN,GAAoB;YACb,KAAKjI,IAAR,EAAc,OAAO,KAAKA,IAAZ;eACP,KAAKA,IAAL,GAAY,MAAMW,IAAIC,cAAJ,CAAmB;iBACnC,KAAK8G,MAD8B;uBAE7B,KAAKzE,IAAL,CAAUF,KAAV,CAAgBmF,YAFa;kBAGlC;SAHe,CAAzB;;QAMAlI,IAAJ,GAAU;YACH,KAAKmI,KAAR,EAAe,OAAO,KAAKA,KAAZ;;QAEfnI,IAAJ,CAASoI,CAAT,EAAW;aAAMD,KAAL,GAAaC,CAAb;;;iBAEA;YACJtD,KAAKuD,OAAO,KAAKX,MAAL,IAAe,KAAKA,MAAL,GAAc,GAAd,GAAoB,KAAK5C,EAAxC,IAA8C,OAArD,EAA8DwD,QAA9D,CAAuE,CAAvE,CAAT;eACOpI,KAAM,UAAS4E,EAAG,YAAW,KAAKN,IAAK,GAA9C;;2BAEkB;YACf,KAAK1D,IAAL,CAAUyH,QAAV,CAAmB,QAAnB,KAAgC,KAAKzH,IAAL,CAAUyH,QAAV,CAAmB,OAAnB,CAAnC,EAA+D;mBACpDC,cAAS,KAAK1H,IAAd,EACF6C,OADE,CACM,GADN,EACW,GADX,EAEFA,OAFE,CAEM,GAFN,EAEW,GAFX,CAAP;;;;uBAMU;cACR8E,aAAa,gCAAnB;cACMC,QAAQD,WAAWrF,IAAX,CAAgB,KAAKpD,IAArB,CAAd;YACG0I,KAAH,EAAU,OAAOA,MAAM,CAAN,CAAP;;sBAEIC,OAAlB,EAA0B;YACnB,CAAC,KAAK3I,IAAT,EAAe,OAAO,EAAP;;eAER2I,QAAQC,MAAR,CAAezF,OAAO;gBACrB0F,QAAQ,IAAIC,MAAJ,CAAW3F,GAAX,CAAZ;mBACO,CAAC,CAAC,KAAKnD,IAAL,CAAU0I,KAAV,CAAgBG,KAAhB,CAAT;SAFG,CAAP;;cAKK;eACG,GAAEtI,QAAQM,GAAR,CAAYkI,eAAgB,iBAAgB,KAAKvE,IAAK,IAAG,KAAKwE,GAAI,EAA5E;;sBAEa;eACL,GAAEzI,QAAQM,GAAR,CAAYkI,eAAgB,kBAAiB,KAAKvE,IAAK,OAAjE;;iBAEQ;YACL,KAAKxE,IAAL,CAAUiJ,UAAV,CAAqB,UAArB,CAAH,EAAoC;mBACzBC,KAAK,KAAKlJ,IAAL,CAAUmJ,SAAV,CAAoB,CAApB,CAAL,CAAP;SADJ,MAEK;mBACM,KAAKnJ,IAAZ;;;UAGFoJ,gBAAN,CAAuBvI,GAAvB,EAA4BiE,EAA5B,EAA+B;YACvBuE,MAAM,MAAM1I,IAAIC,cAAJ,CAAmB;eAAA,EAC1BE,MAAO,YAAWgE,EAAG,eADK;kBAEzB,KAAK9E,IAFoB,EAEdkB,QAAQ,KAFM,EAECG,cAAc;SAFlC,CAAhB;cAIMnB,KAAM,oBAAmBmJ,IAAI5G,UAAW,GAA9C;;UAEE6G,eAAN,CAAsBzI,GAAtB,EAA2B0I,cAA3B,EAA0C;cAChCrJ,KAAM,oBAAmB,KAAKsE,IAAK,eAAc3D,GAAI,KAA3D;;;YAGIwI,MAAM,MAAM1I,IAAIC,cAAJ,CAAmB;eAAA,EAC1BE,MAAO,UADmB;gBAE3B,EAAC8H,QAAS,QAAO,KAAKpE,IAAK,EAA3B;SAFQ,CAAhB;YAIIkD,SAAS2B,IAAIpG,IAAJ,CAAS,CAAT,CAAb;;YAEGyE,MAAH,EAAU;;kBAEA,WAAN;kBACM,KAAK0B,gBAAL,CAAsBvI,GAAtB,EAA2B6G,OAAO5C,EAAlC,CAAN;SAHJ,MAIK;;kBAEK,UAAN;gBACI0E,WAAW,MAAMD,eAAe,IAAf,CAArB;kBACM,8BAAN;gBACIF,MAAM,MAAM1I,IAAIC,cAAJ,CAAmB;mBAAA,EAC1BE,MAAO,UADmB,EACRI,QAAQ,MADA;yBAEtB,EAAC+B,MAAMuG,QAAP;aAFG,CAAhB;gBAII1E,KAAKuE,IAAIpG,IAAJ,CAAS6B,EAAlB;kBACM5E,KAAM,qBAAoB4E,EAAG,yBAAnC;kBACM,KAAKsE,gBAAL,CAAsBvI,GAAtB,EAA2BiE,EAA3B,CAAN;;;;;sBAKU2E,UAAlB,EAA6B;eAClB;wBACS;sBACF,KAAKjF;;;aAFZ;2BAMY;8BACG;0BACJ;4BACEiF,UADF;8BAEI;;;aAVf;kBAcG;SAdV;;;kBAkBS;mBACC;eACHC,YAAG9J,YAAH,CAAgB,KAAKkB,IAArB,EAA2B,OAA3B,CAAP;;;iBAGiB6I,UAAb,CAAwB9I,GAAxB,EAA4B;YAC5BoC,OAAO,MAAMtC,IAAI2C,aAAJ,CAAkBzC,GAAlB,EAAuB,oBAAvB,CAAjB;eACO,IAAI6D,UAAJ,CAAezB,KAAK2G,GAAL,CAASC,OAAO,IAAIpC,MAAJ,CAAW,EAACC,QAAQ7G,GAAT,EAAcoC,MAAM4G,GAApB,EAAX,CAAhB,CAAf,CAAP;;qDAFHxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC5ICyD,mBAAN,MAAMA,IAAN,CAAU;gBACM7G,IAAZ,EAAkByE,MAAlB,EAAyB;aAChBzE,IAAL,GAAYA,IAAZ;aACKyE,MAAL,GAAcA,MAAd;aACKqC,SAAL,GAAiB,CAAC,KAAKrC,MAAvB;;;UAGEsC,OAAN,GAAe;aACP,IAAI,CAACnI,GAAD,EAAM0F,GAAN,CAAR,IAAsBQ,OAAOkC,OAAP,CAAe,KAAKC,aAApB,CAAtB,EAAyD;mBAC9C3C,IAAIxE,KAAX;;;UAGFoH,YAAN,CAAmBC,KAAnB,EAA0B5F,IAA1B,EAA+B;YACvB6F,QAAQ,KAAKH,aAAL,CAAmB1F,IAAnB,CAAZ;YACG,CAAC6F,KAAJ,EAAW;YACR,CAACA,MAAMpH,IAAV,EAAgB;aACZ,IAAI4D,GAAR,IAAeuD,KAAf,EAAqB;gBACdvD,IAAI/B,EAAJ,IAAUuF,MAAMpH,IAAN,CAAW6B,EAAxB,EAA2B;uBAChB+B,GAAP;;;;UAIN/C,OAAN,GAAe;YACPwG,UAAU,MAAM7C,OAAOkC,UAAP,CAAkB,KAAKjC,MAAvB,CAApB;YACI6C,QAAQ,MAAMT,KAAKU,QAAL,CAAc,KAAK9C,MAAnB,CAAlB;qBACa4C,OAAb,EAAsB,QAAtB;qBACaC,KAAb,EAAoB,UAApB;qBACaA,KAAb,EAAoB,WAApB;;;eAGOE,MAAI,IAAf,EAAoB;YACZ3F,KAAKuD,OAAO,KAAKX,MAAL,GAAc,GAAd,GAAoB,KAAK5C,EAAhC,CAAT;YACG2F,GAAH,EAAQ3F,KAAKA,GAAGwD,QAAH,CAAY,CAAZ,CAAL;eACDpI,KAAM,UAAS4E,EAAG,YAAW,KAAKN,IAAK,GAA9C;;;iBAGiBgG,QAAb,CAAsB3J,GAAtB,EAA0B;YAC1B0J,QAAQ,MAAM5J,IAAI2C,aAAJ,CAAkBzC,GAAlB,EAAuB,0BAAvB,CAAlB;eACO,IAAI6D,UAAJ,CAAe6F,MAAMX,GAAN,CAAU3G,QAAQ,IAAI6G,IAAJ,CAAS7G,IAAT,EAAepC,GAAf,CAAlB,CAAf,CAAP;;uDAFHwF;;;AAMLU,YAAY+C,IAAZ,EAAkB,MAAlB,EAA0B,iBAA1B;AACA/C,YAAY+C,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB;AACA/C,YAAY+C,IAAZ,EAAkB,eAAlB,EAAmC,eAAnC;;IC5CqBY,cAAN,MAAMA,WAAN,CAAiB;gBAChBC,YAAZ,EAAyB;aAChBA,YAAL,GAAoBA,YAApB;aACKjD,MAAL,GAAciD,aAAajD,MAA3B;;UAEEkD,SAAN,GAAiB;cACP,mBAAN;aACKC,QAAL,GAAgB,MAAMf,KAAKU,QAAL,CAAc,KAAK9C,MAAnB,CAAtB;YACI,KAAKmD,QAAL,CAAc1E,MAAlB;;cAEM,qBAAN;aACK2E,UAAL,GAAkB,MAAMrD,OAAOkC,UAAP,CAAkB,KAAKjC,MAAvB,CAAxB;YACI,KAAKoD,UAAL,CAAgB3E,MAApB;;cAEM,sBAAN;cACMtC,QAAQjB,GAAR,CAAY,KAAKkI,UAAL,CAAgBnG,GAAhB,CAAoBiF,GAApB,CAAwB/C,OAAOA,IAAIoB,YAAJ,EAA/B,CAAZ,CAAN;YACI,OAAJ;;oBAEG8C,aAAH,CAAiB,WAAjB,EAA8BlL,KAAKmC,SAAL,CAAe,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA9B;;;;YAIIgJ,YAAY,CAAC,KAAKL,YAAN,CAAhB;AACA,AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC7BCM,uBAAN,MAAMA,QAAN,CAAc;gBACEhI,IAAZ,EAAkBpC,GAAlB,EAAsB;aACboC,IAAL,GAAYA,IAAZ;aACKyE,MAAL,GAAc7G,GAAd;;UAEEqK,eAAN,CAAsBrK,GAAtB,EAA2BsK,QAA3B,EAAoC;YAC7B,KAAKC,YAAR,EAAsB,OAAO,KAAKA,YAAZ;;eAEf,KAAKA,YAAL,GAAoB,MAAMzK,IAAIC,cAAJ,CAAmB;iBAC3C,KAAK8G,MADsC;uBAErC,KAAKzE,IAAL,CAAUF,KAAV,CAAgBqI;SAFE,CAAjC;;iBAKiBC,YAAb,CAA0BxK,GAA1B,EAA8B;YAC9ByK,YAAY,MAAM3K,IAAIgC,SAAJ,CAAc9B,GAAd,EAAmB,0BAAnB,CAAtB;oBACYyK,UAAUC,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;mBAC1BD,EAAE1D,UAAF,CAAa4D,QAAb,CAAsBC,aAAtB,CAAoCF,EAAE3D,UAAF,CAAa4D,QAAjD,KACAF,EAAE1D,UAAF,CAAatD,IAAb,CAAsBmH,aAAtB,CAAoCF,EAAE3D,UAAF,CAAatD,IAAjD,CADP;SADQ,CAAZ;eAIO,IAAIE,UAAJ,CAAe4G,UAAU1B,GAAV,CAAc5E,KAAK,IAAIiG,QAAJ,CAAajG,CAAb,EAAgBnE,GAAhB,CAAnB,CAAf,CAAP;;;eAGO4J,MAAI,IAAf,EAAoB;YACZ3F,KAAKuD,OAAO,KAAKvD,EAAZ,CAAT;YACG2F,GAAH,EAAQ3F,KAAKA,GAAGwD,QAAH,CAAY,CAAZ,CAAL;eACDpI,KAAM,UAAS4E,EAAG,YAAW,KAAK4G,QAAS,cAAa,KAAKlH,IAAK,GAAzE;;2DAZH6B;;;AAgBLU,YAAYkE,QAAZ,EAAsB,IAAtB,EAA4B,IAA5B;AACAlE,YAAYkE,QAAZ,EAAsB,MAAtB,EAA8B,iBAA9B;AACAlE,YAAYkE,QAAZ,EAAsB,UAAtB,EAAkC,qBAAlC;;ACxBO,MAAMW,iBAAiB;UACpBC,eAAN,GAAuB;eACZC,SAAP,GAAmB,IAAnB;aACI,IAAI/H,IAAI,EAAZ,EAAgBA,KAAK,EAArB,EAAyBA,KAAG,CAA5B,EAA8B;oBAClBgI,IAAR,CAAa,eAAehI,CAA5B;gBACIiI,KAAK,MAAMrL,IAAI2C,aAAJ,CAAkB,KAAlB,EAA0B,yBAAwBS,CAAE,EAApD,CAAf;oBACQkI,OAAR,CAAgB,eAAelI,CAA/B;;KANkB;UASpBmI,aAAN,CAAoBrL,GAApB,EAAyByJ,OAAzB,EAAkC6B,aAAa,MAAI,KAAnD,EAAyD;aACjD,IAAIC,MAAR,IAAkB9B,OAAlB,EAA0B;kBAChB8B,OAAO9C,eAAP,CAAuBzI,GAAvB,EAA4BsL,UAA5B,CAAN;;KAXkB;;UAepBE,UAAN,CAAiBxL,GAAjB,EAAqB;YACbyL,SAAS,MAAM3L,IAAIC,cAAJ,CAAmB,EAACC,GAAD,EAAMC,MAAM,qBAAZ,EAAmCO,cAAc,IAAjD,EAAnB,CAAnB;eACOiL,OAAO7J,UAAd;;CAjBD;;;;ACPA,eAAe8J,IAAf,CAAoBC,SAApB,EAA8B;UAC3BC,cAAW;aACP,uCADO;aAEP,uCAFO;cAGP;KAHV;;QAMIC,CAAJ;QACGF,aAAaA,UAAU,CAAV,CAAhB,EAA6B;YACrB,EAACG,MAAM,CAACH,UAAU,CAAV,CAAD,CAAP,EAAJ;KADJ,MAEK;;YAEG,MAAMI,SAASC,MAAT,CAAgB,CAAC;kBACjB,UADiB;kBAEjB,MAFiB;qBAGb,gDAHa;qBAId9E,OAAO+E,IAAP,CAAYL,WAAZ,EAAsB7C,GAAtB,CAA0BpF,SAAS,EAACA,IAAD,EAAOuI,SAAQ,IAAf,EAAT,CAA1B;SAJa,CAAhB,CAAV;;;;QASAC,YAAYN,EAAEC,IAAF,CAAO/C,GAAP,CAAW/I,OAAO;YAC1BoM,aAAa1M,QAAQM,GAAR,CAAa,iBAAgBA,GAAI,EAAjC,CAAjB;YACGpB,gBAAgBA,aAAa8B,GAA7B,IAAoC9B,aAAa8B,GAAb,CAAiBV,GAAjB,CAAvC,EAA6D;yBAC5CpB,aAAa8B,GAAb,CAAiBV,GAAjB,EAAsBgB,GAAnC;;;eAGG,CAAC;kBACE,OADF;kBAEG,OAAMhB,GAAI,MAFb;qBAGM,gCAA+BA,GAAI,EAHzC;qBAIK4L,YAAS5L,GAAT;SAJN,EAKJ;kBACO,OADP;kBAEQ,OAAMA,GAAI,MAFlB;qBAGW,4BAA2BA,GAAI,EAH1C;qBAIUoM;SATN,CAAP;KANY,CAAhB;;;gBAoBY,GAAGC,MAAH,CAAU,GAAGF,SAAb,CAAZ;QACI,MAAMJ,SAASC,MAAT,CAAgBG,SAAhB,CAAV;QACGR,SAAH,EAAa;UACPjL,GAAF,gBAAY9B,aAAa8B,GAAzB,EAAiCmL,EAAEnL,GAAnC;;WAEGmL,CAAP;;AAEJ,AAAO,eAAeS,MAAf,CAAsBX,SAAtB,EAAgC;WAC5B,EAACtM,OAAO,MAAMkN,YAAY,+CAAZ,CAAd,EAAP;;AAEJ,AAAO,eAAeC,YAAf,CAA4Bb,SAA5B,EAAsC;WAClC,EAAC9K,aAAa,MAAM0L,YAAY,gCAAZ,CAApB,EAAP;;AAEJ,AAAO,eAAeE,QAAf,CAAwBd,SAAxB,EAAkC;WAC9B,MAAMI,SAASC,MAAT,CAAgB,CAAC;cACpB,OADoB;cAEnB,SAFmB;iBAGhB,iCAHgB;iBAIjBtM,QAAQM,GAAR,CAAY,iBAAZ;KAJgB,CAAhB,CAAb;;;AAQJ,AAAO,eAAe0M,WAAf,CAA2Bf,SAA3B,EAAqC;WACjC,MAAMI,SAASC,MAAT,CAAgB,CAAC;cACpB,OADoB;cAEnB,YAFmB;iBAGhB,sBAHgB;iBAIjB;KAJgB,CAAhB,CAAb;;;;AASJ,AAAO,eAAeW,cAAf,CAA8B3M,GAA9B,EAAmCyK,SAAnC,EAA6C;QAC5CmC,kBAAmBnC,UAAUvG,IAAV,CAAeC,KAAKA,EAAE8C,UAAF,CAAatD,IAAb,KAAsB,cAA1C,CAAvB;QACGkB,KAAKgI,aAAR,EAAsB;eACXD,eAAP;KADJ,MAEK;YACGf,IAAI,MAAME,SAASC,MAAT,CAAgB,CAAC;kBACrB,MADqB;kBAErB,UAFqB;qBAGlBY,eAHkB;qBAIlBnC,UAAU1B,GAAV,CAAc5E,MAAM;sBACnB2I,oBAAoB3I,CAApB,CADmB;uBAElBA;aAFY,CAAd;SAJiB,CAAhB,CAAd;eASO0H,EAAEvB,QAAT;;;;AAIR,AAAO,eAAeiC,WAAf,CAA2BQ,QAA3B,EAAoC;WAChC,CAAC,MAAMhB,SAASC,MAAT,CAAgB,CAAC;cACrB,SADqB;cAErB,IAFqB;iBAGlBe;KAHiB,CAAhB,CAAP,EAIFC,EAJL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FJC,QAAQ,oBAAR,EAA8BC,OAA9B;;AAmBA,IAAIC,OAAOC,SAAS1N,QAAQyN,IAAR,CAAa3K,KAAb,CAAmB,CAAnB,CAAT,EAAgC;YAC/B,CAAC,MAAD,EAAS,KAAT,CAD+B;aAE9B,CAAC,YAAD,CAF8B;WAGhC;WACA,MADA,EACQtD,GAAG;;CAJX,CAAX;;AAQA,SAASmO,SAAT,CAAmBC,IAAnB,EAAyB3I,KAAzB,EAA+B;QACvBJ,cAAWlF,KAAM;SAChBiO,KAAK3J,IAAK,MAAK2J,KAAK/N,IAAK;aACrB+N,KAAKrI,KAAL,IAAc,WAAY;CAFnC;;kBAKWV,YAAS+D,SAAT,CAAmB,CAAnB,EAAsB/D,YAASe,MAAT,GAAgB,CAAtC,CAAX;;QAEG,CAACX,KAAJ,EAAU;aACF,IAAII,QAAR,IAAiBuI,KAAKtI,MAAL,IAAe,EAAhC,EAAmC;2BACnB3F,KAAM,eAAc0F,SAAMA,KAAM,MAAKA,SAAMH,IAAK,EAA5D;;aAEA,IAAIH,MAAR,IAAe6I,KAAKzI,IAAL,IAAa,EAA5B,EAA+B;2BACfxF,KAAM,eAAcoF,OAAIE,KAAM,YAAWF,OAAIC,IAAK,MAAKD,OAAIG,IAAK,EAA5E;;;;WAIDL,WAAP;;;AAGJ,IAAIgJ,YAAY;UACNC,MAAN,CAAa3I,IAAb,EAAkB;aACT7E,GAAL,GAAW6E,KAAK7E,GAAhB;YACG,CAAC,KAAKA,GAAT,EAAc,MAAM,IAAIsD,UAAJ,CAAe,iBAAf,CAAN;;YAEVmK,QAAQ5I,KAAK6I,IAAjB;YACG,OAAOD,KAAP,KAAiB,QAApB,EAA8BA,QAAQ,CAACA,KAAD,CAAR;aACzBA,KAAL,GAAaA,KAAb;KAPQ;UASNE,KAAN,CAAY9I,IAAZ,EAAiB;YACT,YAAJ;YACI4E,UAAU,MAAM7C,OAAOkC,UAAP,CAAkB,KAAK9I,GAAvB,CAApB;YACGpB,aAAagP,SAAhB,EAA2B,OAAOnE,OAAP;;YAEvBpK,KAAM,WAAUoK,QAAQnE,MAAO,uBAAsB,KAAKtF,GAAI,IAAlE;aACI,IAAIuL,MAAR,IAAkB9B,OAAlB,EAA2BnK,IAAIiM,OAAOsC,UAAP,EAAJ;KAfnB;UAiBNC,OAAN,CAAcjJ,IAAd,EAAmB;YACZ,CAAC,KAAK4I,KAAT,EAAe;kBACL,IAAInK,UAAJ,CAAe,mDAAf,CAAN;;;YAGAjE,KAAM,oBAAmB,KAAKoO,KAAL,CAAWnI,MAAO,yBAAwB,KAAKtF,GAAI,IAAhF;;YAEIyJ,UAAU,KAAKgE,KAAL,CAAW1E,GAAX,CAAe9I,WAAQ,IAAI2G,MAAJ,CAAW,QAAC3G,OAAD,EAAO4G,QAAQ,KAAf,EAAX,CAAvB,CAAd;cACMkH,eAAM1C,aAAN,CAAoB,KAAKrL,GAAzB,EAA8ByJ,OAA9B,EAAuC,MAAM8B,MAAN,IAAgB;gBACrD,YAAJ;gBACId,YAAY,MAAML,SAASI,YAAT,CAAsB,KAAKxK,GAA3B,CAAtB;gBACIsK,WAAW,MAAM0D,cAAA,CAA6B,KAAKhO,GAAlC,EAAuCyK,SAAvC,CAArB;mBACOc,OAAO0C,iBAAP,CAAyB3D,SAASrG,EAAlC,CAAP;SAJE,CAAN;KAzBQ;UAgCNiK,KAAN,CAAYrJ,IAAZ,EAAiB,EAhCL;UAkCNsJ,OAAN,CAAc1J,MAAd,EAAmBI,IAAnB,EAAwB;YAChBxF,KAAM,uBAAsBoF,MAAI,mCAApC;;CAnCR;;AAuCA,IAAI2J,UAAU;UACJZ,MAAN,CAAa3I,IAAb,EAAkB;aACT7E,GAAL,GAAW6E,KAAK7E,GAAhB;YACG,CAAC,KAAKA,GAAT,EAAc,MAAM,IAAIsD,UAAJ,CAAe,iBAAf,CAAN;KAHR;UAKJqK,KAAN,CAAY9I,IAAZ,EAAiB;YACT,YAAJ;YACI6E,QAAQ,MAAMT,KAAKU,QAAL,CAAc,KAAK3J,GAAnB,CAAlB;YACGpB,aAAagP,SAAhB,EAA2B,OAAOlE,KAAP;;YAEvBrK,KAAM,WAAUqK,MAAMpE,MAAO,qBAAoB,KAAKtF,GAAI,IAA9D;aACI,IAAIqO,IAAR,IAAgB3E,KAAhB,EAAuBpK,IAAI+O,KAAKR,UAAL,EAAJ;KAXjB;UAaJC,OAAN,CAAcjJ,IAAd,EAAmB,EAbT;UAeJsJ,OAAN,CAAc1J,MAAd,EAAmBI,IAAnB,EAAwB;YAChBxF,KAAM,uBAAsBoF,MAAI,iCAApC;;CAhBR;;AAoBA,IAAI6J,YAAY;UACNd,MAAN,CAAa3I,IAAb,EAAkB;aACT7E,GAAL,GAAW6E,KAAK7E,GAAhB;YACG,CAAC,KAAKA,GAAT,EAAc,MAAM,IAAIsD,UAAJ,CAAe,iBAAf,CAAN;KAHN;UAKNiL,KAAN,CAAY1J,IAAZ,EAAiB;YACTlB,OAAOkB,KAAK2J,CAAL,CAAO,CAAP,CAAX;YACI9E,QAAQ,MAAMT,KAAKU,QAAL,CAAc,KAAK3J,GAAnB,CAAlB;YACIyO,KAAJ;aACI,IAAIJ,IAAR,IAAgB3E,KAAhB,EAAsB;gBACf2E,KAAK1K,IAAL,CAAU+K,WAAV,GAAwB/M,QAAxB,CAAiCgC,KAAK+K,WAAL,EAAjC,CAAH,EAAwD;wBAC5CL,IAAR;;;;YAIJhP,KAAM,2BAA0BoP,MAAMZ,UAAN,CAAiB,KAAjB,CAAwB,EAA5D;;YAEIc,QAAQ,IAAI9E,WAAJ,CAAgB4E,KAAhB,CAAZ;cACME,MAAM5E,SAAN,EAAN;;KAlBQ;UAqBN6E,MAAN,CAAa/J,IAAb,EAAkB;YACVgK,MAAM5B,QAAQ,IAAR,EAAclO,YAAd,CAA2B,WAA3B,CAAV;cACMC,KAAKC,KAAL,CAAW4P,GAAX,CAAN;;YAEIA,IAAIhI,MAAR;YACI4C,UAAUoF,IAAI5E,UAAJ,CAAenG,GAAf,CAAmBiF,GAAnB,CAAuB/C,OAAO;gBACpCuF,SAAS,IAAI3E,MAAJ,CAAW;sBACdZ,IAAI5D,IADU,EACJyE,QAAQgI,IAAIhI;aADnB,CAAb;mBAGO1H,IAAP,GAAc6G,IAAIsB,KAAlB;mBACOiE,MAAP;SALU,CAAd;eAOOzC,UAAP,CAAkBhD,SAAlB,CAA4B,CAAC+I,IAAIhI,MAAL,CAA5B,EAA0C,IAAIhD,UAAJ,CAAe4F,OAAf,CAA1C;;YAEIC,QAAQmF,IAAI7E,QAAJ,CAAalG,GAAb,CAAiBiF,GAAjB,CAAqB/C,OAAO;gBAChCqI,OAAO,IAAIpF,IAAJ,CACPjD,IAAI5D,IADG,EACGyM,IAAIhI,MADP,CAAX;iBAGK1H,IAAL,GAAY6G,IAAIsB,KAAhB;mBACO+G,IAAP;SALQ,CAAZ;aAOK1E,QAAL,CAAc7D,SAAd,CAAwB,CAAC+I,IAAIhI,MAAL,CAAxB,EAAsC,IAAIhD,UAAJ,CAAe6F,KAAf,CAAtC;;eAEO,MAAM,KAAK6E,KAAL,CAAW1J,IAAX,CAAb;KA5CQ;UA8CNsJ,OAAN,CAAc1J,MAAd,EAAmBI,IAAnB,EAAwB;YAChBxF,KAAM,uBAAsBoF,MAAI,mCAApC;;CA/CR;;AAmDA,SAASqK,UAAT,CAAoBC,MAApB,EAA2B;;iBAEX,EADZ,EACgBC,QAAO,EADvB,EAC2Bb,UAAS;OAC7BY,MAFP;WAIO,gBAAelK,IAAf,EAAoB;YACnBJ,SAAMI,KAAK2J,CAAL,CAAO,CAAP,CAAV;YACIxN,MAAM,MAAMyD,MAAhB;YACIwK,GAAJ;YACGF,OAAO/N,GAAP,CAAH,EAAe;kBACL+N,OAAOvB,MAAP,CAAc3I,IAAd,CAAN;kBACM,MAAMkK,OAAO/N,GAAP,EAAY6D,IAAZ,CAAZ;kBACMkK,OAAOC,KAAP,CAAanK,IAAb,CAAN;SAHJ,MAIK;mBACMsJ,OAAP,CAAe1J,MAAf,EAAoBI,IAApB;;eAEGoK,GAAP;KAXJ;;;AAeJ,IAAIC,cACC3K,SAAU,uBAAV,CADD,UAECU,MAAO,sBAAP,CAFD,UAGCF,MAAM,SAAN,EAAiB,yCAAjB,CAHD,UAyBCR,SAAU,wBAAV,CAzBD,UA0BCU,MAAO,6EAAP,CA1BD,UA2BCF,MAAM,QAAN,EAAgB,8CAAhB,CA3BD,UA4BCN,IAAI,IAAJ,EAAU,OAAV,EAAmB,mDAAnB,CA5BD,UA6BCA,IAAI,IAAJ,EAAU,QAAV,EAAoB,kBAApB,CA7BD,UAkCCF,SAAU,sBAAV,CAlCD,WAmCCU,MAAO,yCAAP,CAnCD,WAoCCF,MAAM,QAAN,EAAgB,yDAAhB,CApCD,WAqCCN,IAAI,IAAJ,EAAU,OAAV,EAAmB,mDAAnB,CArCD,WA0CCF,SAAU,8BAAV,CA1CD,WA2CCU,MAAO,2CAAP,CA3CD,WA4CCF,MAAM,QAAN,EAAgB,wBAAhB,CA5CD,WA6CCN,IAAI,IAAJ,EAAU,OAAV,EAAmB,mDAAnB,CA7CD,WAkDCF,SAAU,sDAAV,CAlDD,WAmDCU,MAAO,gDAAP,CAnDD,WAoDCF,MAAM,YAAN,EAAoB,uCAApB,CApDD,WAqDCN,IAAI,IAAJ,EAAU,OAAV,EAAmB,mDAAnB,CArDD,WAsDCA,IAAI,GAAJ,EAAS,OAAT,EAAkB,8EAAlB,CAtDD,WA4ECF,SAAU,+BAAV,CA5ED,WA6ECU,MAAM,wCAAN,CA7ED,WA8ECF,MAAM,KAAN,EAAa1F,KAAM,qEAAnB,CA9ED,WA+ECoF,IAAI,GAAJ,EAAS,OAAT,EAAkB,8FAAlB,CA/ED,WAgFCA,IAAI,GAAJ,EAAS,OAAT,EAAkB,2BAAlB,CAhFD,UAAM;UAIA6I,IAAN,CAAWzI,IAAX,EAAgB;YACRJ,SAAMI,KAAK2J,CAAL,CAAO,CAAP,CAAV;YACG/J,MAAH,EAAO;gBACC6I,OAAOjJ,YAAYI,MAAZ,CAAX;gBACG,CAAC6I,IAAJ,EAAS;oBACDjO,KAAM,2BAA0BoF,MAAI,IAAxC;aADJ,MAEK;oBACG4I,UAAUhJ,YAAYI,MAAZ,CAAV,CAAJ;;SALR,MAOK;iBACG,IAAI0K,OAAR,IAAmB9K,WAAnB,EAA+B;oBACvBgJ,UAAUhJ,YAAY8K,OAAZ,CAAV,EAAgC,IAAhC,CAAJ;;;KAfN;;;UAqBAC,SAAN,CAAgBvK,IAAhB,EAAqB;YACbA,IAAJ;KAtBE;;UA8BA0G,MAAN,CAAa1G,IAAb,EAAkB;eACPiK,WAAWvB,SAAX,EAAsB1I,IAAtB,CAAP;KA/BE;;UAsCAwJ,IAAN,CAAWxJ,IAAX,EAAgB;eACLiK,WAAWV,OAAX,EAAoBvJ,IAApB,CAAP;KAvCE;;UA8CAwK,MAAN,CAAaxK,IAAb,EAAkB;eACPiK,WAAWR,SAAX,EAAsBzJ,IAAtB,CAAP;KA/CE;;UAuDA4F,SAAN,CAAgB5F,IAAhB,EAAqB;YACb7E,MAAM6E,KAAK7E,GAAf;YACG,CAACA,GAAJ,EAAS,OAAOJ,SAAS,kBAAT,CAAP;YACL0P,QAAQzK,KAAK2J,CAAL,CAAO,CAAP,CAAZ;;YAEI/D,YAAY,MAAML,SAASI,YAAT,CAAsBxK,GAAtB,CAAtB;;YAEGsP,KAAH,EAAS;gBACDC,MAAM9E,UAAUvG,IAAV,CAAeC,KAAKA,EAAEF,EAAF,IAAQqL,KAAR,IAAiBnL,EAAER,IAAF,CAAOhC,QAAP,CAAgB2N,KAAhB,CAArC,CAAV;gBACG,CAACC,GAAJ,EAAQ;oBACAlQ,KAAM,oCAAmCiQ,KAAM,GAAnD;aADJ,MAEK;oBACGC,IAAI1B,UAAJ,CAAe,KAAf,CAAJ;qBACI,MAAM0B,IAAIlF,eAAJ,EAAV;oBACGxF,KAAK2K,GAAR,EAAa,OAAOD,GAAP;;SAPrB,MASK;gBACE1K,KAAK2K,GAAR,EAAa,OAAO/E,SAAP;iBACT,IAAI8E,GAAR,IAAe9E,SAAf,EAA0BnL,IAAIiQ,IAAI1B,UAAJ,EAAJ;;KAzE5B;;UAiFApN,MAAN,CAAaoE,IAAb,EAAkB;YACV4K,OAAO5K,KAAK2J,CAAL,CAAO,CAAP,CAAX;YACI7C,YAAY8D,QAAQA,KAAKpJ,KAAL,CAAW,GAAX,CAAxB;;;YAGIqJ,eAAJ;;YAEG,CAACD,IAAJ,EAAS;gBACF7Q,aAAagP,SAAhB,EAA2B,OAAOhP,YAAP;gBACvB,qBAAJ;2CAEOA,YADP;iBAGI,IAAI+Q,UAAR,IAAsB3B,aAAtB,EAAoC;oBAC7B2B,WAAWvH,UAAX,CAAsB,GAAtB,CAAH,EAA8B;mDAEnBsH,eADP,GAEQ,MAAM1B,cAAc2B,UAAd,EAA0B,KAA1B,CAFd;;;SARZ,MAcK;gBACGtQ,KAAM,yBAAwBoQ,IAAK,GAAvC;gBACG5K,KAAK+K,GAAR,EAAY;+CAEDhR,YADP;qBAEK6Q,IAAD,GAAQ5K,KAAK+K;;aAHrB,MAKK;oBACGN,QAAQ,MAAM3D,UAAU,CAAV,CAAlB;;oBAEGqC,cAAcsB,KAAd,CAAH,EAAwB;mDAEb1Q,YADP,GAEQ,MAAMoP,cAAcsB,KAAd,EAAqB3D,SAArB,CAFd;iBADJ,MAKK;wBACGtM,KAAM,sBAAqBiQ,KAAM,GAArC;;;;;;wBAMIzQ,SAAhB,GAA4B,IAA5B;;;YAGIgR,YAAY7Q,KAAKmC,SAAL,CAAeuO,eAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAAhB;YACIG,SAAJ;;;YAGG,CAAChL,KAAKiL,CAAN,IAAW,CAACjL,KAAK+K,GAAjB,IAAwB,EAAC,MAAM5B,WAAA,CAA0B,4BAA1B,CAAP,CAA3B,EAA2F;yBAC7EtP,UAAd,EAA0BmR,SAA1B,EAAqC,EAACE,MAAM,KAAP,EAArC;YACI1Q,KAAM,uBAAsBX,UAAW,IAA3C;;CArIJ,kzBAAJ;;AAyIA,eAAesR,SAAf,GAA0B;UAChB3Q,KAAM;uBACO4Q,OAAe;;CADlC;QAIG,CAACrR,aAAaC,SAAjB,EAA2B;cACjBQ,KAAM;;CAAZ;;;SAKA,IAAIW,GAAR,IAAe,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAf,EAAsC;;YAE9BkQ,SAAJ;YACG;gBACKzE,SAAS,MAAMsC,eAAMvC,UAAN,CAAiBxL,GAAjB,CAAnB;;;wBAGY,6BAAZ;gBACGyL,WAAW,GAAd,EAAmByE,YAAY7Q,KAAM,gBAAlB,CAAnB,KACK,IAAGoM,WAAW,GAAd,EAAmByE,YAAY7Q,KAAM,qBAAlB,CAAnB,KACA,IAAGoM,UAAU,GAAb,EAAmByE,YAAY7Q,KAAM,WAAUoM,MAAO,aAAnC;SAP5B,CAQC,OAAMvM,CAAN,EAAQ;gBACF,CAACA,CAAD,YAAcyB,oBAAjB,EAAuC,MAAMzB,CAAN;wBAC3BG,KAAM,uBAAlB;;;YAGAA,KAAM,MAAKW,GAAI,KAAIkQ,SAAU,EAAjC;;;;AAIR,eAAeC,KAAf,GAAsB;UACZC,OAAN,GAAgBxR,aAAaC,SAAb,GAAyBD,aAAaS,KAAtC,GAA8C,IAA9D;QACGA,MAAMgR,KAAN,KAAgB,CAAhB,IAAqB,CAAChR,MAAM+Q,OAA/B,EAAuC;YAC/BE,QAAQnD,KAAK,aAAL,CAAZ;YACGmD,KAAH,EAAS;kBACCF,OAAN,GAAgB,IAAhB;gBACGE,UAAU,IAAV,IAAkBjR,MAAMgR,KAAN,KAAgB,CAArC,EAAuC;sBAC7BA,KAAN,GAAc,CAAd;aADJ,MAEM,IAAGE,OAAOD,KAAP,CAAH,EAAiB;sBACbD,KAAN,GAAcE,OAAOD,KAAP,CAAd;;;;;iBAKC1P,YAAb,GAA4BuM,KAAK,YAAL,CAA5B;QACGA,KAAK,KAAL,CAAH,EAAe;qBACES,SAAb,GAAyB,IAAzB;eACOtO,GAAP,GAAa,MAAI,EAAjB;eACOM,QAAP,GAAkB,MAAI,EAAtB;eACOH,KAAP,GAAe,MAAI,EAAnB;;;QAGDb,aAAa4R,UAAhB,EAA2B;aAClBxQ,GAAL,GAAWmN,KAAKnN,GAAL,IAAYpB,aAAa4R,UAApC;;;QAGAhM,OAAO2I,KAAKqB,CAAL,CAAO,CAAP,CAAX;QACGU,IAAI1K,IAAJ,CAAH,EAAa;YACN;;gBAEKyK,MAAM,MAAMC,IAAI1K,IAAJ,EAAU2I,IAAV,CAAhB;gBACG8B,GAAH,EAAO;sBACG5P,MAAMoR,KAAN,CAAY,gBAAZ,CAAN;wBACQnR,GAAR,CAAYN,KAAKmC,SAAL,CAAe8N,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAZ;;SALR,CAOC,OAAM/P,CAAN,EAAQ;gBACFA,aAAaoE,UAAhB,EAA2B;oBACnBjE,KAAM,sBAAqBH,EAAEsE,OAAQ,EAAzC;aADJ,MAEK;sBACKtE,CAAN;;;KAZZ,MAeK;cACK8Q,WAAN;;;;AAIR,eAAeU,MAAf,CAAoB,GAAG7L,IAAvB,EAA4B;QACrB;cACOsL,MAAM,GAAGtL,IAAT,CAAN;KADJ,CAEC,OAAM3F,CAAN,EAAQ;iBACIA,EAAEyR,KAAX;;;;AAIRD"}