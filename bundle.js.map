{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/index.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject;\nexport function loadConfig(file) {\n    if (file) configFile = file;\n\n    configObject = {hasConfig: true};\n    try {\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    } catch (e) {\n        if (e.code == \"ENOENT\") {\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        } else {\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj) {\n    configObject = obj;\n}\n\nexport function getPrefix() {\n    if (configObject.prefix) {\n        return configObject.prefix + \" - \";\n    }\n    return \"\";\n}\n\nloadConfig();\n\nexport {configObject};\n","//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name =>\n    helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text) {\n    return function(func, name) {\n        helpEntry(name).text = text;\n        return func;\n    };\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc) {\n    return function(func, name) {\n        let args = (helpEntry(name).args = helpEntry(name).args || []);\n        args.unshift({long, short, desc});\n        return func;\n    };\n}\n\n//normal argument\nexport function param(param, desc) {\n    return function(func, name) {\n        let params = (helpEntry(name).params = helpEntry(name).params || []);\n        params.unshift({param, desc});\n        return func;\n    };\n}\n\n//usage string\nexport function usage(usage) {\n    return function(func, name) {\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    };\n}\n\nexport function cachedgetter(target, key, desc) {\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function() {\n        if (cachedVal) return cachedVal;\n        return (cachedVal = oldget.call(this));\n    };\n    desc.set = function(val) {\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache) {\n    for (let [argsKey, value] of cache) {\n        if (args.length !== argsKey.length) continue;\n        for (let i in argsKey) {\n            if (args[i] !== argsKey[i]) {\n                continue;\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc) {\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args) {\n        let {found, value} = findValueInCache(args, cachedValues);\n        if (!found) {\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function() {\n        cachedValues = [];\n    };\n    newFunc.cachePush = function(args, value) {\n        cachedValues.push([args, value]);\n    };\n    newFunc.remove = function(...args) {\n        let {found, value} = findValueInCache(args, cachedValues);\n        if (found) {\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    };\n\n    return {\n        ...desc,\n        value: newFunc\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function returns obj.a.b.c\nfunction deepAccess(obj, path) {\n    let o = obj;\n    for (let key of path) {\n        if (!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path) {\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get() {\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val) {\n            deepAccess(this, path)[lastKey] = val;\n        }\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args) {\n    if (typeof options !== \"object\") {\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if (cp.stdout)\n            cp.stdout.on(\"data\", chunk => {\n                stdout += chunk;\n                write(chunk);\n            });\n        if (cp.stderr)\n            cp.stderr.on(\"data\", chunk => {\n                stderr += chunk;\n                write(chunk);\n            });\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr =\n        time > 1000 ? ((time / 100) | 0) / 10 + \"s\" : (time | 0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport { configObject, getPrefix } from \"./config.js\";\nimport { cached } from \"./decorators.js\";\nconst rp = importLazy(\"request-promise\");\n\nglobal.chalk = chalk;\nglobal.log = (...text) => console.log(...text);\nglobal.write = (...text) => process.stdout.write(...text);\nglobal.elog = (...text) => console.log(...text);\nglobal.ewrite = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib {\n  //This function takes 2 required arguments:\n  // env: the environment you wish to use\n  // and either:\n  //  'path', the short path to the resource. ex '/presets/'\n  //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n  //\n  // If the method is anything but GET, either payload or body should be set.\n  // payload should be a javascript object to be turned into json as the request body\n  // body should be a string that is passed as the body. for example: the python code of a preset.\n  //\n  // qs are the querystring parameters, in a key: value object.\n  // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n  //\n  // headers are the headers of the request. \"Content-Type\" is already set if\n  //   payload is given as a parameter\n  //\n  // fullResponse should be true if you want to receive the request object,\n  //  not just the returned data.\n  static async makeAPIRequest({\n    env,\n    path,\n    path_full,\n    fullPath,\n    payload,\n    body,\n    method = \"GET\",\n    qs,\n    headers = {},\n    fullResponse = false,\n    timeout = configObject.timeout || 20000\n  }) {\n    //backwards compatability from ruby script\n    if (fullPath) path_full = fullPath;\n    //Keys are defined in environment variables\n    let config = configObject?.api?.[env];\n    if (!config) {\n      throw new UnconfiguredEnvError(env);\n    }\n    //Protect PROD and UAT(?) if the --no-protect flag was not set.\n    if (method !== \"GET\" && !configObject.dangerModify) {\n      if ((env === \"UAT\" && configObject.restrictUAT) || env === \"PROD\") {\n        throw new ProtectedEnvError(env);\n      }\n    }\n\n    let rally_api_key = config.key;\n    let rally_api = config.url;\n    if (path && path.startsWith(\"/v1.0/\")) {\n      rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n    }\n\n    path = path_full || rally_api + path;\n    if (payload) {\n      body = JSON.stringify(payload, null, 4);\n    }\n    if (configObject.vvverbose) {\n      if (payload || body) {\n        log(payload || body);\n      }\n    }\n\n    if (payload) {\n      headers[\"Content-Type\"] = \"application/vnd.api+json\";\n    }\n\n    let requestOptions = {\n      method,\n      body,\n      qs,\n      uri: path,\n      timeout,\n      auth: { bearer: rally_api_key },\n      headers: {\n        //SDVI ignores this header sometimes.\n        Accept: \"application/vnd.api+json\",\n        ...headers\n      },\n      simple: false,\n      resolveWithFullResponse: true\n    };\n\n    let response;\n    try {\n      response = await rp(requestOptions);\n      if (configObject.vverbose || configObject.vvverbose) {\n        log(chalk`${method} @ ${response.request.uri.href}`);\n      }\n    } catch (e) {\n      if (e?.cause.code === \"ESOCKETTIMEDOUT\") {\n        throw new APIError(response || {}, requestOptions, body);\n      } else {\n        throw e;\n      }\n    }\n\n    //Throw an error for any 5xx or 4xx\n    if (\n      !fullResponse &&\n      ![200, 201, 202, 203, 204].includes(response.statusCode)\n    ) {\n      throw new APIError(response, requestOptions, body);\n    }\n    let contentType = response.headers[\"content-type\"];\n    let isJSONResponse =\n      contentType === \"application/vnd.api+json\" ||\n      contentType === \"application/json\";\n\n    if (configObject.vvverbose) {\n      log(response.body);\n    }\n\n    if (fullResponse) {\n      return response;\n    } else if (isJSONResponse) {\n      try {\n        return JSON.parse(response.body);\n      } catch (e) {\n        log(response.body);\n        throw new AbortError(\"Body is not valid json: \");\n      }\n    } else {\n      return response.body;\n    }\n  }\n\n  //Index a json endpoint that returns a {links} field.\n  //This function returns the merged data objects as an array\n  //\n  //Additional options (besides makeAPIRequest options):\n  // - Observe: function to be called for each set of data from the api\n  static async indexPath(env, path) {\n    let all = [];\n\n    let opts = typeof env === \"string\" ? { env, path } : env;\n    let json = await this.makeAPIRequest(opts);\n\n    let [numPages, pageSize] = this.numPages(json.links.last);\n    //log(`num pages: ${numPages} * ${pageSize}`);\n\n    all = [...json.data];\n    while (json.links.next) {\n      json = await this.makeAPIRequest({ ...opts, path_full: json.links.next });\n      if (opts.observe) await opts.observe(json.data);\n      all = [...all, ...json.data];\n    }\n\n    return all;\n  }\n\n  //Returns number of pages and pagination size\n  static numPages(str) {\n    return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n  }\n\n  static arrayChunk(array, chunkSize) {\n    let newArr = [];\n    for (let i = 0; i < array.length; i += chunkSize) {\n      newArr.push(array.slice(i, i + chunkSize));\n    }\n    return newArr;\n  }\n\n  static async doPromises(promises, result = [], cb) {\n    for (let promise of promises) {\n      let res = await promise;\n      result.push(res);\n      if (cb) {\n        cb(res.data);\n      }\n    }\n    return result;\n  }\n\n  static clearProgress(size = 30) {\n    process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n  }\n\n  static async drawProgress(i, max, size = process.stdout.columns - 15 || 15) {\n    if (size > 45) size = 45;\n    let pct = Number(i) / Number(max);\n    //clamp between 0 and 1\n    pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n    let numFilled = Math.floor(pct * size);\n    let numEmpty = size - numFilled;\n\n    this.clearProgress(size);\n    process.stderr.write(\n      `[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`\n    );\n  }\n\n  static async keepalive(\n    func,\n    inputData,\n    { chunksize, observe = async _ => _ } = {}\n  ) {\n    let total = inputData ? inputData.length : func.length;\n    let i = 0;\n    let createPromise = () => {\n      let ret;\n      if (i >= total) return [];\n      if (inputData) {\n        ret = [i, func(inputData[i])];\n      } else {\n        ret = [i, func[i]()];\n      }\n\n      i++;\n      return ret;\n    };\n\n    let values = [];\n    let finished = 0;\n    process.stderr.write(\"\\n\");\n    let threads = [...this.range(20)].map(async whichThread => {\n      while (true) {\n        let [i, currentPromise] = createPromise();\n        if (i == undefined) break;\n        values[i] = await observe(await currentPromise);\n        this.drawProgress(++finished, total);\n      }\n    });\n    await Promise.all(threads);\n    process.stderr.write(\"\\n\");\n\n    return values;\n  }\n\n  static *range(start, end) {\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    }\n    while (start < end) yield start++;\n  }\n\n  //Index a json endpoint that returns a {links} field.\n  //\n  //This function is faster than indexPath because it can guess the pages it\n  //needs to retrieve so that it can request all assets at once.\n  //\n  //This function assumes that the content from the initial request is the\n  //first page, so starting on another page may cause issues. Consider\n  //indexPath for that.\n  //\n  //Additional opts, besides default indexPath opts:\n  // - chunksize[10]: How often to break apart concurrent requests\n  static async indexPathFast(env, path) {\n    let opts = typeof env === \"string\" ? { env, path } : env;\n    //Create a copy of the options in case we need to have a special first request\n    let start = opts.start || 1;\n    let initOpts = { ...opts };\n    if (opts.pageSize) {\n      initOpts.qs = { ...opts.qs };\n      initOpts.qs.page = `${start}p${opts.pageSize}`;\n    }\n\n    let json = await this.makeAPIRequest(initOpts);\n\n    if (opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n    let baselink = json.links.first;\n    const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n    let [numPages, pageSize] = this.numPages(json.links.last);\n\n    //Construct an array of all the requests that are done simultanously.\n    //Assume that the content from the inital request is the first page.\n    let allResults = await this.keepalive(\n      this.makeAPIRequest,\n      [...this.range(start + 1, Number(numPages) + 1 || opts.limit + 1)].map(\n        i => ({ ...opts, path_full: linkToPage(i) })\n      ),\n      { chunksize: opts.chunksize, observe: opts.observe }\n    );\n    if (start == 1) {\n      allResults.unshift(json);\n    }\n    this.clearProgress();\n\n    let all = [];\n    for (let result of allResults) {\n      for (let item of result.data) {\n        all.push(item);\n      }\n    }\n\n    return all;\n  }\n  static isLocalEnv(env) {\n    return !env || env === \"LOCAL\" || env === \"LOC\";\n  }\n  static envName(env) {\n    if (this.isLocalEnv(env)) return \"LOCAL\";\n    return env;\n  }\n}\n\nexport class AbortError extends Error {\n  constructor(message) {\n    super(message);\n    Error.captureStackTrace(this, this.constructor);\n    this.name = \"AbortError\";\n  }\n}\n\nexport class APIError extends Error {\n  constructor(response, opts, body) {\n    super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n    this.response = response;\n    this.opts = opts;\n    this.body = body;\n\n    Error.captureStackTrace(this, this.constructor);\n    this.name = \"ApiError\";\n  }\n}\n\nexport class UnconfiguredEnvError extends AbortError {\n  constructor(env) {\n    super(\"Unconfigured environment: \" + env);\n    this.name = \"Unconfigured Env Error\";\n  }\n}\n\nexport class ProtectedEnvError extends AbortError {\n  constructor(env) {\n    super(\"Protected environment: \" + env);\n    this.name = \"Protected Env Error\";\n  }\n}\n\nexport class Collection {\n  constructor(arr) {\n    this.arr = arr;\n  }\n  [Symbol.iterator]() {\n    return this.arr[Symbol.iterator]();\n  }\n  findById(id) {\n    return this.arr.find(x => x.id == id);\n  }\n  findByName(name) {\n    return this.arr.find(x => x.name == name);\n  }\n  findByNameContains(name) {\n    return this.arr.find(x => x.name.includes(name));\n  }\n  log() {\n    for (let d of this) {\n      if (d) {\n        log(d.chalkPrint(true));\n      } else {\n        log(chalk`{red (None)}`);\n      }\n    }\n  }\n  get length() {\n    return this.arr.length;\n  }\n}\n\nexport class RallyBase {\n  static handleCaching() {\n    if (!this.cache) this.cache = [];\n  }\n  static isLoaded(env) {\n    if (!this.hasLoadedAll) return;\n    return this.hasLoadedAll[env];\n  }\n  static async getById(env, id, qs) {\n    this.handleCaching();\n    for (let item of this.cache) {\n      if (\n        (item.id == id && item.remote === env) ||\n        `${env}-${id}` === item.metastring\n      )\n        return item;\n    }\n\n    let data = await lib.makeAPIRequest({\n      env,\n      path: `/${this.endpoint}/${id}`,\n      qs\n    });\n    if (data.data) {\n      let o = new this({\n        data: data.data,\n        remote: env,\n        included: data.included\n      });\n      this.cache.push(o);\n      return o;\n    }\n  }\n\n  static async getByName(env, name, qs) {\n    this.handleCaching();\n    for (let item of this.cache) {\n      if (item.name === name && item.remote === env) return item;\n    }\n\n    let data = await lib.makeAPIRequest({\n      env,\n      path: `/${this.endpoint}`,\n      qs: { ...qs, filter: `name=${name}` + (qs ? qs.filter : \"\") }\n    });\n    //TODO included might not work correctly here\n    if (data.data[0]) {\n      let o = new this({\n        data: data.data[0],\n        remote: env,\n        included: data.included\n      });\n      this.cache.push(o);\n      return o;\n    }\n  }\n\n  static async getAllPreCollect(d) {\n    return d;\n  }\n  static async getAll(env) {\n    this.handleCaching();\n    let datas = await lib.indexPathFast({\n      env,\n      path: `/${this.endpoint}`,\n      pageSize: \"50\",\n      qs: { sort: \"id\" }\n    });\n    datas = await this.getAllPreCollect(datas);\n    let all = new Collection(\n      datas.map(data => new this({ data, remote: env }))\n    );\n    this.cache = [...this.cache, ...all.arr];\n    return all;\n  }\n  static async removeCache(env) {\n    this.handleCaching();\n    this.cache = this.cache.filter(x => x.remote !== env);\n  }\n\n  //Specific turns name into id based on env\n  //Generic turns ids into names\n  async resolveApply(type, dataObj, direction) {\n    let obj;\n    if (direction == \"generic\") {\n      obj = await type.getById(this.remote, dataObj.id);\n      if (obj) {\n        dataObj.name = obj.name;\n      }\n    } else if (direction == \"specific\") {\n      obj = await type.getByName(this.remote, getPrefix() + dataObj.name);\n      if (obj) {\n        dataObj.id = obj.id;\n      }\n    }\n    return obj;\n  }\n\n  //Type is the baseclass you are looking for (should extend RallyBase)\n  //name is the name of the field\n  //isArray is true if it has multiple cardinailty, false if it is single\n  //direction gets passed directly to resolveApply\n  async resolveField(type, name, isArray = false, direction = \"generic\") {\n    // ignore empty fields\n    let field = this.relationships[name];\n    if (!field?.data) return;\n\n    if (isArray) {\n      return await Promise.all(\n        field.data.map(o => this.resolveApply(type, o, direction))\n      );\n    } else {\n      return await this.resolveApply(type, field.data, direction);\n    }\n  }\n\n  cleanup() {\n    for (let [key, val] of Object.entries(this.relationships)) {\n      //Remove ids from data\n      if (val.data) {\n        if (val.data.id) {\n          delete val.data.id;\n        } else if (val.data[0]) {\n          for (let x of val.data) delete x.id;\n        }\n      }\n      delete val.links;\n    }\n    // organization is unused (?)\n    delete this.relationships.organization;\n    // id is specific to envs\n    // but save source inside meta string in case we need it\n    this.metastring = this.remote + \"-\" + this.data.id;\n    delete this.data.id;\n    // links too\n    delete this.data.links;\n  }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase {\n    constructor({data, remote}) {\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig() {\n        if (this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers) {\n        return providers.sort((a, b) => {\n            return (\n                a.attributes.category.localeCompare(b.attributes.category) ||\n        a.attributes.name.localeCompare(b.attributes.name)\n            );\n        });\n    }\n\n    async getFileExtension() {\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key) {\n                if (this.name === \"Aurora\") return \"zip\";\n                if (this[key]) return this[key];\n                return key;\n            }\n        };\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad = true) {\n        let id = String(this.id);\n        if (pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n    async startEvaluate(presetid){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\nconst home = homedir();\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path) {\n    if (path.includes(\":\")) {\n    //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if (configObject.invertedPath) {\n        path = path.replace(siloLike, \"$2-$1.$3\");\n    }\n    if (path.includes(\"\\\\342\\\\200\\\\220\")) {\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options) {\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false) {\n    path = pathTransform(path);\n    try {\n        return fs.writeFileSync(path, data, options);\n    } catch (e) {\n        if (dircreated) throw e;\n        let directory = dirname(path);\n        try {\n            fs.statSync(directory);\n            throw e;\n        } catch (nodir) {\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject, getPrefix} from \"./config.js\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase {\n    constructor({path, remote, data, subProject} = {}) {\n    // Get full path if possible\n        if (path) {\n            path = pathResolve(path);\n            if (dirname(path).includes(\"silo-metadata\")) {\n                throw new AbortError(\"Constructing preset from metadata file\");\n            }\n        }\n\n        super();\n\n        // Cache by path\n        if (path) {\n            if (exists[path]) return exists[path];\n            exists[path] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote;\n        if (lib.isLocalEnv(this.remote)) {\n            if (path) {\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length - 1];\n                try {\n                    this.code = this.getLocalCode();\n                } catch (e) {\n                    if (e.code === \"ENOENT\" && configObject.ignoreMissing) {\n                        this.missing = true;\n                        return undefined;\n                    } else {\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try {\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                } catch (e) {\n                    log(\n                        chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${\n                            this.localmetadatapath\n                        }`\n                    );\n                    this.data = Preset.newShell();\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            } else {\n                this.data = Preset.newShell();\n            }\n        } else {\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actual file\n    static async fromMetadata(path, subproject) {\n        let data;\n        try {\n            data = JSON.parse(readFileSync(path));\n        } catch (e) {\n            if (e.code === \"ENOENT\" && configObject.ignoreMissing) {\n                return null;\n            } else {\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if (!provider) {\n            log(\n                chalk`{red The provider type {green ${providerType}} does not exist}`\n            );\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell() {\n        return {\n            attributes: {\n                providerSettings: {}\n            },\n            relationships: {},\n            type: \"presets\"\n        };\n    }\n    cleanup() {\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env) {\n        if (!this.isGeneric)\n            throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n        ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test() {\n        if (!this.code) return;\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match;\n        let matches = [];\n        while ((match = regex.exec(this.code))) {\n            matches.push(match[1]);\n        }\n        return matches;\n    }\n    async runTest(env) {\n        let remote = await Preset.getByName(env, this.name);\n        for (let test of this.test) {\n            log(\"Tests...\");\n            let asset;\n\n            if (test.startsWith(\"id\")) {\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if (!match) {\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            } else {\n                asset = await Asset.getByName(env, test);\n            }\n\n            if (!asset) {\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(\n                chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(\n                    false\n                )}... `\n            );\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve() {\n        if (this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal() {\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata() {\n        if (!this.isGeneric) {\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile() {\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env) {\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env) {\n        this.saved = true;\n        if (!this.isGeneric) {\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if (lib.isLocalEnv(env)) {\n            log(\n                chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`\n            );\n            await this.saveLocal();\n        } else {\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode() {\n        if (!this.remote || this.code) return this.code;\n        return (this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false\n        }));\n    }\n\n    get code() {\n        if (this._code) return this._code;\n    }\n    set code(v) {\n        this._code = v;\n    }\n\n    chalkPrint(pad = true) {\n        let id = String(\n            \"P-\" + ((this.remote && this.remote + \"-\" + this.id) || \"LOCAL\")\n        );\n        let sub = \"\";\n        if (this.subproject) {\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if (pad) id = id.padStart(10);\n        if (this.name == undefined) {\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        } else if (this.meta.proType) {\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${\n                this.name\n            }}`;\n        } else {\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName() {\n        if (this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")) {\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName() {\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if (match) return match[1];\n    }\n\n    findStringsInCode(strings) {\n        if (!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject) {\n        return path.join(\n            configObject.repodir,\n            subproject || \"\",\n            \"silo-presets\",\n            name + \".\" + ext\n        );\n    }\n    get localpath() {\n        return Preset.getLocalPath(this.name, this.ext, this.subproject);\n    }\n\n    get path() {\n        if (this._path) return this._path;\n    }\n    set path(val) {\n        this._path = val;\n    }\n    get name() {\n        return this._nameOuter;\n    }\n    set name(val) {\n        this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value) {\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\"\n            }\n        };\n    }\n    //TODO allow preset upload to be in root rather than in silo-presets i.e. join(\"silo-presets\",filename)\n    get localmetadatapath() {\n        if (this.path) {\n            return this.path\n                .replace(\"silo-presets\", \"silo-metadata\")\n                .replace(new RegExp(this.ext + \"$\"), \"json\");\n        }\n        return path.join(\n            configObject.repodir,\n            this.subproject || \"\",\n            \"silo-metadata\",\n            this.name + \".json\"\n        );\n    }\n    get immutable() {\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id) {\n        let res = await lib.makeAPIRequest({\n            env,\n            path: `/presets/${id}/providerData`,\n            body: this.code,\n            method: \"PUT\",\n            fullResponse: true,\n            timeout: 5000\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env) {\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if (!remote) {\n            throw new AbortError(\n                `No file found on remote ${env} with name ${this.name}`\n            );\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true) {\n        if (!this.name) {\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n            return;\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if (this.immutable) {\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, getPrefix() + this.name);\n\n        if (remote) {\n            //If it exists we can replace it\n            write(\"replace, \");\n            //check for env\n            if (includeMetadata) {\n                let metadata = {\n                    data: {attributes: this.data.attributes, type: \"presets\"}\n                };\n                //changing metadata for replacement to include prefix\n                metadata.data.attributes.name = getPrefix() + this.name;\n                metadata.data.attributes.providerSettings.PresetName = this.name;\n                metadata.data.attributes.rallyConfiguration = this.name;\n                console.log(\"metadata\");\n                console.log(metadata);\n\n                let res = await lib.makeAPIRequest({\n                    env,\n                    path: `/presets/${remote.id}`,\n                    method: \"PATCH\",\n                    payload: metadata,\n                    fullResponse: true\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        } else {\n            write(\"create, \");\n\n            let metadata = {data: this.data};\n            if (configObject.prefix) {\n                metadata.data.attributes.name = getPrefix() + this.name;\n                metadata.data.attributes.providerSettings.PresetName = this.name;\n                metadata.data.attributes.rallyConfiguration = {\n                    OutputStorageName: null,\n                    PresetName: this.name,\n                    ProxyTypeName: null\n                };\n\n                await this.acclimatize(env);\n                write(\"Posting to create preset... \");\n                let res = await lib.makeAPIRequest({\n                    env,\n                    path: `/presets`,\n                    method: \"POST\",\n                    payload: metadata,\n                    timeout: 5000\n                });\n                let id = res.data.id;\n                write(chalk`Created id {green ${id}}... Uploading Code... `);\n                await this.uploadPresetData(env, id);\n            }\n\n            if (!this.relationships[\"providerType\"]) {\n                throw new AbortError(\n                    \"Cannot acclimatize shelled presets. (try creating it on the env first)\"\n                );\n            }\n        }\n        if (this.test[0] && shouldTest) {\n            await this.runTest(env);\n        } else {\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata() {\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode() {\n        return readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(\n    Preset,\n    \"_nameInner\",\n    \"data.attributes.providerSettings.PresetName\"\n);\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase {\n    constructor({data, remote}) {\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications) {\n        return notifications.sort((a, b) => {\n            return (\n                a.attributes.type.localeCompare(b.attributes.type) ||\n        a.attributes.name.localeCompare(b.attributes.name)\n            );\n        });\n    }\n\n    chalkPrint(pad = false) {\n        let id = String(\"N-\" + this.id);\n        if (pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\";\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from \"./rally-tools.js\";\nimport {configObject, getPrefix} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\nimport argparse from \"minimist\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"prefixmode\"],\n    default: {protect: true, prefixmode: true},\n    alias: {\n        f: \"file\",\n        e: \"env\",\n        p: \"prefixmode\"\n    }\n});\n\n\nclass Rule extends RallyBase {\n    constructor({path, data, remote, subProject} = {}) {\n        super();\n        if (path) {\n            path = pathResolve(path);\n            try {\n                let f = readFileSync(path, \"utf-8\");\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            } catch (e) {\n                if (e.code === \"ENOENT\") {\n                    if (configObject.ignoreMissing) {\n                        this.missing = true;\n                        return undefined;\n                    } else {\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                } else {\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if (!data) {\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n\n    static newShell() {\n        return {\n            attributes: {\n                description: \"-\",\n                priority: \"PriorityNorm\",\n                starred: false\n            },\n            relationships: {},\n            type: \"workflowRules\"\n        };\n    }\n\n    async acclimatize(env) {\n        this.remote = env;\n\n        let preset = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(\n            Provider,\n            \"providerType\",\n            false,\n            \"specific\"\n        );\n\n        let dynamicNexts = await this.resolveField(\n            Rule,\n            \"dynamicNexts\",\n            true,\n            \"specific\"\n        );\n\n        let enterNotif = await this.resolveField(\n            Notification,\n            \"enterNotifications\",\n            true,\n            \"specific\"\n        );\n        let errorNotif = await this.resolveField(\n            Notification,\n            \"errorNotifications\",\n            true,\n            \"specific\"\n        );\n        let passNotif = await this.resolveField(\n            Notification,\n            \"passNotifications\",\n            true,\n            \"specific\"\n        );\n    }\n    async saveA(env) {\n        if (lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env) {\n        if (!this.isGeneric) {\n            await this.resolve();\n        }\n        this.cleanup();\n        if (lib.isLocalEnv(env)) {\n            log(\n                chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`\n            );\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        } else {\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable() {\n        return false;\n    }\n    async createIfNotExist(env) {\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if (this.immutable) {\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        if (configObject.prefixmode == true) {\n            var remote = await Rule.getByName(env, getPrefix() + this.name);\n        } else {\n            var remote = await Rule.getByName(env, this.name);\n        }\n\n        this.idMap = this.idMap || {};\n\n        if (remote) {\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it.\n        write(\"create, \");\n\n        if (configObject.prefixmode == true) {\n            var res = await lib.makeAPIRequest({\n                env,\n                path: `/workflowRules`,\n                method: \"POST\",\n                payload: {\n                    data: {\n                        attributes: {name: getPrefix() + this.name},\n                        type: \"workflowRules\"\n                    }\n                }\n            });\n        } else {\n            var res = await lib.makeAPIRequest({\n                env,\n                path: `/workflowRules`,\n                method: \"POST\",\n                payload: {\n                    data: {attributes: {name: this.name}, type: \"workflowRules\"}\n                }\n            });\n        }\n\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip() {\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if (this.relationships.passMetadata && this.relationships.passMetadata[0]) {\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if (\n            this.relationships.errorMetadata &&\n      this.relationships.errorMetadata[0]\n        ) {\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n    // This is commented out because it was fixed.\n    //for(let key in this.relationships){\n    //let relationship = this.relationships[key];\n    //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n    //delete this.relationships[key];\n    //}\n    //}\n    }\n\n    async uploadRemote(env) {\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if (this.immutable) {\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if (this.idMap[env]) {\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            // let metadata = { data: this.data };\n            //\n            // //checking for prefix mode for attribute name and then relationships name\n            // if (argv.prefixmode == true) {\n            //   // metadata.data.attributes.name = getPrefix() + this.name;\n            //   // metadata.data.relationships.preset.data.name = this.name;\n            //\n            //   log(chalk.yellow`PREFIX MODE IS ON`);\n            // } else {\n            //   // metadata.data.attributes.name = this.name;\n            //   // metadata.data.relationships.preset.data.name = this.name;\n            //   log(chalk.yellow`PREFIX MODE IS OFF`);\n            //\n            // }\n\n            let res = await lib.makeAPIRequest({\n                env,\n                path: `/workflowRules/${this.idMap[env]}`,\n                method: \"PATCH\",\n                payload: {data: this.name},\n                fullResponse: true\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if (res.statusCode !== 200) {\n                log(res.body);\n                log(JSON.stringify(this.data, null, 4));\n            }\n        } else {\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath() {\n        return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve() {\n        let preset = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext = await this.resolveField(Rule, \"passNext\", false);\n        let eNext = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(\n            Notification,\n            \"enterNotifications\",\n            true\n        );\n        let errorNotif = await this.resolveField(\n            Notification,\n            \"errorNotifications\",\n            true\n        );\n        let passNotif = await this.resolveField(\n            Notification,\n            \"passNotifications\",\n            true\n        );\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"];\n        delete this.relationships[\"errorMetadata\"];\n\n        this.isGeneric = true;\n\n        return {\n            preset,\n            proType,\n            pNext,\n            eNext,\n            dynamicNexts,\n            errorNotif,\n            enterNotif,\n            passNotif\n        };\n    }\n\n    chalkPrint(pad = true) {\n        let id = String(\n            \"R-\" + ((this.remote && this.remote + \"-\" + this.id) || \"LOCAL\")\n        );\n        let sub = \"\";\n        if (this.subproject) {\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if (pad) id = id.padStart(10);\n        try {\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        } catch (e) {\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain {\n    constructor(startingRule, stopRule) {\n        if (startingRule) {\n            this.startingRule = startingRule;\n            this.stopRule = stopRule;\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets) {\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate() {\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if (!this.startingRule) {\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return;\n        } else {\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr\n            .map(x => x.name)\n            .filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr\n            .map(x => x.name)\n            .filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr\n            .map(x => x.name)\n            .filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for (let currentRule of ruleQueue) {\n            if (currentRule === this.stopRule) continue;\n            let {\n                eNext,\n                pNext,\n                preset,\n                passNotif,\n                errorNotif,\n                enterNotif\n            } = await currentRule.resolve();\n\n            passNotif.forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if (eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if (pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for (let p of neededPresets)\n                if (!presetQueue.includes(p)) presetQueue.push(p);\n            for (let p of neededRules) if (!ruleQueue.includes(p)) ruleQueue.push(p);\n\n            if (configObject.verbose) {\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \");\n                if (pNext) write(pNext.chalkPrint(false));\n                else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \");\n                if (eNext) write(eNext.chalkPrint(false));\n                else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for (let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for (let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\");\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log() {\n        if (this.notifications.arr.length > 0) {\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if (this.rules.arr.length > 0) {\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if (this.presets.arr.length > 0) {\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n    }\n    async syncTo(env) {\n        for (let preset of this.presets) {\n            try {\n                await preset.save(env);\n            } catch (e) {\n                log(e);\n            }\n        }\n        if (this.rules.arr[0]) {\n            log(\"Starting create phase for rules\");\n            for (let rule of this.rules) {\n                try {\n                    await rule.saveA(env);\n                } catch (e) {\n                    log(e);\n                }\n            }\n\n            log(\"OK\");\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for (let rule of this.rules) {\n                try {\n                    await rule.saveB(env);\n                } catch (e) {\n                    log(e);\n                }\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase {\n    constructor({data, remote}) {\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad = false) {\n        let id = String(\"U-\" + this.id);\n        if (pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\";\n\nexport default User;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation() {\n        global.silentAPI = true;\n        for (let i = 10; i <= 30; i += 5) {\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = () => false) {\n        for (let preset of presets) {\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env) {\n        if (lib.isLocalEnv(env)) {\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({\n            env,\n            path: \"/providers?page=1p1\",\n            fullResponse: true,\n            timeout: 1000\n        });\n        return result.statusCode;\n    }\n};\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"move\",\n            \"source\": {\n                \"labels\": [ \"MyLabel\" ],\n                \"tags\": [ \"segmented\" ]\n                \"storageSet\": [ \"*\", \"-OtherStorageBucket\" ],\n\n            },\n            \"destination\": {\n                \"storage\": \"Archive\",\n                \"newLabel\": \"myNewLabel\",\n                \"overwrite\": \"always\"\n            }\n        }\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`,\n};\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt() {\n    if (hasAutoCompletePrompt) return;\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\n        \"autocomplete\",\n        require(\"inquirer-autocomplete-prompt\")\n    );\n}\n\nexport async function $api(propArray) {\n    let q;\n    q = await inquirer.prompt([\n        {\n            type: \"input\",\n            name: \"company\",\n            message: `What is your company?`,\n            default: `discovery`\n        }\n    ]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV: `https://${company}-dev.sdvi.com/api/v2`,\n        UAT: `https://${company}-uat.sdvi.com/api/v2`,\n        QA: `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`\n    };\n\n    if (propArray && propArray[1]) {\n        q = {envs: [propArray[1]]};\n    } else {\n    //Create a checkbox prompt to choose environments\n        q = await inquirer.prompt([\n            {\n                type: \"checkbox\",\n                name: \"envs\",\n                message: `What environments would you like to configure?`,\n                choices: Object.keys(defaults).map(name => ({name, checked: true}))\n            }\n        ]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if (configObject && configObject.api && configObject.api[env]) {\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [\n            {\n                type: \"input\",\n                name: `api.${env}.url`,\n                message: `What is the api endpoint for ${env}?`,\n                default: defaults[env]\n            },\n            {\n                type: \"input\",\n                name: `api.${env}.key`,\n                message: `What is your api key for ${env}?`,\n                default: defaultKey\n            }\n        ];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if (propArray) {\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray) {\n    return {\n        chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")\n    };\n}\nexport async function $restrictUAT(propArray) {\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray) {\n    return await inquirer.prompt([\n        {\n            type: \"input\",\n            name: `repodir`,\n            message: `Where is your rally repository?`,\n            default: process.env[\"rally_repo_path\"]\n        }\n    ]);\n}\n\nexport async function $prefixmode(propArray) {\n    return {prefixmode: await askQuestion(\"Would you like to use a prefix?\")};\n}\n\nexport async function $project(propArray) {\n    let project = await askInput(\"Subproject directory?\");\n    if (project === \"none\" || project === \"-\" || project === \"\" || !project) {\n        project = null;\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray) {\n    return await inquirer.prompt([\n        {\n            type: \"input\",\n            name: `defaultEnv`,\n            message: `Default environment?`,\n            default: \"DEV\"\n        }\n    ]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false) {\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if (autoDefault) {\n        return defaultProvider;\n    } else {\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x\n        }));\n        let q = await inquirer.prompt([\n            {\n                type: \"autocomplete\",\n                name: \"provider\",\n                default: defaultProvider,\n                source: async (sofar, input) => {\n                    return choices.filter(x =>\n                        input\n                            ? x.value.name.toLowerCase().includes(input.toLowerCase())\n                            : true\n                    );\n                }\n            }\n        ]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class) {\n    addAutoCompletePrompt();\n    let basePath = join(configObject.repodir, path);\n    let f = await readdir(basePath);\n    let objs = f.map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x\n    }));\n    let none = {\n        name: chalk`      {red None}: {red None}`,\n        value: null\n    };\n    objsMap.unshift(none);\n\n    let q = await inquirer.prompt([\n        {\n            type: \"autocomplete\",\n            name: \"obj\",\n            message: `What ${typeName} do you want?`,\n            source: async (sofar, input) => {\n                return objsMap.filter(x =>\n                    input ? x.name.toLowerCase().includes(input.toLowerCase()) : true\n                );\n            }\n        }\n    ]);\n    return q.obj;\n}\n\nexport async function selectPreset(purpose = \"preset\") {\n    return selectLocal(\"silo-presets\", purpose, Preset);\n}\nexport async function selectRule(purpose = \"rule\") {\n    return selectLocal(\"silo-rules\", purpose, Rule);\n}\n\nexport async function askInput(name, question, def) {\n    return (await inquirer.prompt([\n        {\n            type: \"input\",\n            name: \"ok\",\n            message: question,\n            default: def\n        }\n    ])).ok;\n}\n\nexport async function askQuestion(question) {\n    return (await inquirer.prompt([\n        {\n            type: \"confirm\",\n            name: \"ok\",\n            message: question\n        }\n    ])).ok;\n}\n","import { getPrefix } from \"./index\";\nimport { join, resolve as pathResolve } from \"path\";\n\nrequire(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\";\nimport {\n  rallyFunctions as funcs,\n  Preset,\n  Rule,\n  SupplyChain,\n  Provider,\n  Asset,\n  User,\n  AbortError,\n  UnconfiguredEnvError,\n  Collection,\n  APIError\n} from \"./index.js\";\n\nimport { version as packageVersion } from \"../package.json\";\nimport { configFile, configObject, loadConfig } from \"./config.js\";\nimport { readFile, readFileSync, writeFileSync } from \"fs\";\n\nimport {\n  helpText,\n  arg,\n  param,\n  usage,\n  helpEntries,\n  spawn\n} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport { sep as pathSeperator } from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nimport { inquirer } from \"./config-create\";\nconst False = false;\nconst True = true;\nconst None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n  string: [\"file\", \"env\"],\n  //boolean: [\"no-protect\"],\n  boolean: [\"prefixmode\"],\n  default: { protect: true, prefixmode: true },\n  alias: {\n    f: \"file\",\n    e: \"env\",\n    p: \"prefixmode\"\n  }\n});\n\n//help menu helper\nfunction printHelp(help, short) {\n  let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`;\n  //Trim newlines\n  helpText = helpText.substring(1, helpText.length - 1);\n\n  if (!short) {\n    for (let param of help.params || []) {\n      helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`;\n    }\n    for (let arg of help.args || []) {\n      helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${\n        arg.desc\n      }`;\n    }\n  }\n\n  return helpText;\n}\n\nasync function getFilesFromArgs(args) {\n  let lastArg = args._.shift();\n  if (args.file) {\n    let files = args.file;\n    if (typeof files === \"string\") files = [files];\n    return files;\n  }\n\n  // checking for last argument for @ and for make for supply make\n  if (lastArg == \"-\"| args._old[1] == 'make') {\n    log(\"Reading from stdin\");\n    let getStdin = require(\"get-stdin\");\n    let stdin = await getStdin();\n    let files = stdin.split(\"\\n\");\n    if (files[files.length - 1] === \"\") files.pop();\n    return files;\n  } else {\n    args._.push(lastArg);\n  }\n}\n\nexport async function regtoenv(args) {\n  log(\n    chalk.green`Searching in specified file for hardcoded Preset and Rule names...`\n  );\n  if (argv.prefixmode == false) {\n    var elements =  args._old.slice(-9);\n    var filename = args.f + \" \"+ elements.join(\" \");\n  } else {\n    var elements = process.argv.slice(7);\n    var filename = elements.join(\" \");\n\n  }\n  //inquire is this is the right file name.\n  // async function filenameQ(filename) {\n  //   return await inquirer\n  //     .prompt([\n  //       {\n  //         type: \"confirm\",\n  //         name: \"filename\",\n  //         message: \"Is \" + filename + \" the correct filename?\"\n  //       }\n  //     ])\n  //     .then(answers => {\n  //       //writing time\n  //       if (answers.filename != true) {\n  //         log(\n  //           chalk.red`You indicated this was not the correct filename so the program exited`\n  //         );\n  //         process.exit(22);\n  //       }\n  //     });\n  // }\n  // await filenameQ(filename);\n\n  //reading time\n  let filetext = readFileSync(filename, \"utf-8\");\n  // Regex and Replace time\n  var regex = /(@include |: |=)[\"'][N][L]/g;\n  var strmatch = filetext.match(regex);\n  // Replaces the strings found with regex with a prefixed version conditionally.\n  var replacementtext = filetext.replace(regex, function(strmatch) {\n    var prefixedmatch = \"\";\n    var equalpattern = \"=\";\n    var includepattern = \"@include \";\n    if (strmatch.match(equalpattern)) {\n      prefixedmatch = (\"='\" + getPrefix() + \"NL\").toString();\n    } else if (strmatch.match(includepattern)) {\n      prefixedmatch = (\"@include \" + '\"' + getPrefix() + \"NL\").toString();\n    } else {\n      prefixedmatch = (\": '\" + getPrefix() + \"NL\").toString();\n    }\n    return prefixedmatch;\n  });\n  //inquire before writing to disk??\n  // async function writetofileQ(filename) {\n  //   return await inquirer\n  //     .prompt([\n  //       {\n  //         type: \"confirm\",\n  //         name: \"writetofile\",\n  //         message:\n  //           \"Do you want to add your prefix to preset/rule names in \" +\n  //           filename +\n  //           \" to disk?\"\n  //       }\n  //     ])\n  //     .then(answers => {\n  //       //writing time\n  //       if (answers.writetofile == true) {\n  //         writeFileSync(filename, replacementtext, { encoding: \"utf8\" });\n  //         log(chalk.yellow`Writing is done!`);\n  //       } else {\n  //         log(\n  //           chalk.red(`You have indicated that you do not want to write `) +\n  //             chalk.blue(filename) +\n  //             chalk.red(` to disk.`)\n  //         );\n  //         process.exit(22);\n  //       }\n  //     });\n  // }\n  // await writetofileQ(filename);\n\n  return subCommand(regsub)(args);\n}\n\nlet presetsub = {\n  async before(args) {\n    this.env = args.env;\n    if (!this.env) throw new AbortError(\"No env supplied\");\n\n    this.files = await getFilesFromArgs(args);\n  },\n  async $grab(args) {\n    if (!this.files) {\n      throw new AbortError(\"No files provided to grab (use --file argument)\");\n      process.exit(22);\n    }\n\n    log(\n      chalk`Grabbing {green ${\n        this.files.length\n      }} preset(s) metadata from {green ${this.env}}.`\n    );\n\n    let presets = this.files.map(path => new Preset({ path, remote: false }));\n    for (let preset of presets) {\n      //TODO small refactor\n      await preset.grabMetadata(this.env);\n      await preset.saveLocalMetadata();\n\n      if (args.full) {\n        let remo = await Preset.getByName(this.env, preset.name);\n        await remo.resolve();\n        await remo.downloadCode();\n        await remo.saveLocalFile();\n      }\n    }\n  },\n  async $create(args) {\n    let provider, name, ext;\n    if (args.provider) {\n      provider = { name: args.provider };\n      ext = args.ext;\n    } else {\n      provider = await configHelpers.selectProvider(\n        await Provider.getAll(this.env)\n      );\n      ext = (await provider.getEditorConfig()).fileExt;\n    }\n    if (args.name) {\n      name = args.name;\n    } else {\n      name = await configHelpers.askInput(\n        \"Preset Name\",\n        \"What is the preset name?\"\n      );\n    }\n\n    let preset = new Preset({ subProject: configObject.project });\n\n    preset.providerType = { name: provider.name };\n    preset.isGeneric = true;\n    preset.name = name;\n    preset.ext = ext;\n    if (baseCode[provider.name]) {\n      preset._code = baseCode[provider.name].replace(\"{name}\", name);\n    } else {\n      preset._code = \" \";\n    }\n\n    preset.saveLocalMetadata();\n    preset.saveLocalFile();\n  },\n  async $list(args) {\n    log(\"Loading...\");\n    let presets = await Preset.getAll(this.env);\n    if (args.resolve) {\n      Provider.getAll(this.env);\n      for (let preset of presets) {\n        let resolve = await preset.resolve(this.env);\n        if (args.attach) {\n          let { proType } = resolve;\n          proType.editorConfig.helpText = \"\";\n          preset.meta = {\n            ...preset.meta,\n            proType\n          };\n        }\n      }\n    }\n    if (configObject.rawOutput) return presets;\n    log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n    presets.arr.sort((a, b) => {\n      return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt);\n    });\n    for (let preset of presets) {\n      log(preset.chalkPrint());\n    }\n  },\n  async $upload(args) {\n    if (!this.files) {\n      throw new AbortError(\"No files provided to upload (use --file argument)\");\n      process.exit(22);\n    }\n\n    console.log(\"BLAHHHH\")\n    console.log(argv.prefixmode)\n    //rewriting files\n    if (argv.prefixmode == false) {\n      log(chalk.yellow`PREFIX MODE IS OFF`);\n    } else {\n      log(chalk.yellow`PREFIX MODE IS ON`);\n    }\n\n    log(chalk.green`Rewriting file inplace with regex...`);\n    log(\n      chalk.green`The preset will be uploaded to the ` +\n        chalk.blue(this.env) +\n        chalk.green(` environment...`)\n    );\n\n    // async function noprefixQ(env) {\n    //   return await inquirer\n    //     .prompt([\n    //       {\n    //         type: \"confirm\",\n    //         name: \"noprefixenv\",\n    //         message: \"Do you want to push this prefixless code to \" + env + \"?\"\n    //       }\n    //     ])\n    //     .then(answers => {\n    //       //writing time\n    //       if (answers.noprefixenv != true) {\n    //         log(\n    //           chalk.red(\n    //             `You have indicated that you need prefixes before pushing to `\n    //           ) +\n    //             chalk.blue(env) +\n    //             chalk.red(` so the program exited`)\n    //         );\n    //         process.exit(22);\n    //       } else {\n    //         log(chalk.green`Uploading to `+ chalk.blue(env) + chalk.blue(\"....\"));\n    //         regtoenv(args);\n    //       }\n    //     });\n    // }\n\n    // if (this.env == \"DEV\"| \"UAT\" | \"QA\" | \"PROD\") {\n    //   log(chalk`The environment specified is ` + this.env);\n    // }\n    // else {\n    //   log(chalk`there is no environment specified`);\n    // }\n\n    //changing the this.files object to be an array of the full file name.\n\n    if (argv.prefixmode == false) {\n      var elements =  args._old.slice(-9);\n      var filename = args.f + \" \"+ elements.join(\" \");\n      this.files = [filename\n      ];\n\n    } else {\n      this.files = [\n        process.argv\n          .slice(7)\n          .join(\" \")\n          .toString()\n      ];\n    }\n\n    log(\n      chalk`Uploading {green ${this.files.length}} preset(s) to {green ${\n        this.env\n      }}.`\n    );\n\n    let presets = this.files.map(path => new Preset({ path, remote: false }));\n    await funcs.uploadPresets(this.env, presets);\n  },\n  async $diff(args) {\n    let file = this.files[0];\n    if (!this.files) {\n      throw new AbortError(\"No files provided to diff (use --file argument)\");\n    }\n\n    let preset = new Preset({ path: file, remote: false });\n    if (!preset.name) {\n      throw new AbortError(chalk`No preset header found. Cannot get name.`);\n    }\n    let preset2 = await Preset.getByName(this.env, preset.name);\n    if (!preset2) {\n      throw new AbortError(\n        chalk`No preset found with name {red ${preset.name}} on {blue ${\n          this.env\n        }}`\n      );\n    }\n    await preset2.downloadCode();\n\n    let tempfile = require(\"tempy\").file;\n    let temp = tempfile({ extension: `${this.env}.${preset.ext}` });\n    writeFileSync(temp, preset2.code);\n\n    let ptr = `${file},${temp}`;\n\n    //raw output returns \"file1\" \"file2\"\n    if (configObject.rawOutput) {\n      if (args[\"only-new\"]) return temp;\n      else return ptr;\n    }\n\n    //standard diff\n    argv.command = argv.command || \"diff\";\n    await spawn(argv.command, [file, temp], { stdio: \"inherit\" });\n  },\n  async unknown(arg, args) {\n    log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n  }\n};\n\nlet rulesub = {\n  async before(args) {\n    this.env = args.env;\n    if (!this.env) throw new AbortError(\"No env supplied\");\n  },\n  async $list(args) {\n    log(\"Loading...\");\n    let rules = await Rule.getAll(this.env);\n    if (configObject.rawOutput) return rules;\n\n    log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n    rules.arr.sort((a, b) => {\n      return (\n        Number(a.data.attributes.updatedAt) -\n        Number(b.data.attributes.updatedAt)\n      );\n    });\n    for (let rule of rules) log(rule.chalkPrint());\n  },\n  async $create(args) {\n    let preset = await configHelpers.selectPreset();\n    let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\n    let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\n    let name = await configHelpers.askInput(\n      \"Rule Name\",\n      \"What is the rule name?\"\n    );\n    let desc = await configHelpers.askInput(\n      \"Description\",\n      \"Enter a description.\"\n    );\n\n    let dynamicNexts = [];\n    let next;\n    while ((next = await configHelpers.selectRule(\"dynamic next\"))) {\n      let name = await configHelpers.askInput(\n        \"Key\",\n        \"Key name for dynamic next\"\n      );\n      dynamicNexts.push({\n        meta: {\n          transition: name\n        },\n        type: \"workflowRules\",\n        name: next.name\n      });\n    }\n\n    let rule = new Rule();\n    rule.name = name;\n    rule.description = desc;\n    rule.relationships.preset = {\n      data: { name: preset.name, type: \"presets\" }\n    };\n    if (errorNext)\n      rule.relationships.errorNext = {\n        data: { name: errorNext.name, type: \"workflowRules\" }\n      };\n    if (passNext)\n      rule.relationships.passNext = {\n        data: { name: passNext.name, type: \"workflowRules\" }\n      };\n    if (dynamicNexts[0]) {\n      rule.relationships.dynamicNexts = {\n        data: dynamicNexts\n      };\n    }\n\n    rule.saveB();\n  },\n  async unknown(arg, args) {\n    log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n  }\n};\n\nlet jupytersub = {\n  async before(args) {\n    this.input = args._.shift() || \"main.ipynb\";\n    this.output = args._.shift() || \"main.py\";\n  },\n  async $build(args) {\n    let cmd = `jupyter nbconvert --to python ${\n      this.input\n    } --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${\n      this.output\n    } --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\n      \" \"\n    );\n    log(\n      chalk`Compiling GCR file {green ${this.input}} into {green ${\n        this.output\n      }} using jupyter...`\n    );\n\n    try {\n      let { timestr } = await spawn(cmd[0], cmd.slice(1));\n      log(chalk`Complete in ~{green.bold ${timestr}}.`);\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n      log(\n        chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`\n      );\n      return;\n    }\n  }\n};\n\nlet regsub = {\n  async before(args) {\n    this.files = await getFilesFromArgs(args);\n    if (!this.files) {\n      throw new AbortError(\"No files provided to upload (use --file argument)\");\n    }\n  }\n};\n\nasync function categorizeString(str, defaultSubproject = undefined) {\n  str = str.trim();\n  if (str.startsWith('\"')) {\n    str = str.slice(1, -1);\n  }\n  let match;\n  if ((match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str))) {\n    if (match[1] === \"P\") {\n      let ret = await Preset.getById(match[2], match[3]);\n      //TODO modify for subproject a bit\n      return ret;\n    } else if (match[1] === \"R\") {\n      return await Rule.getById(match[2], match[3]);\n    } else {\n      return null;\n    }\n  } else if ((match = /^([\\w\\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str))) {\n    try {\n      switch (match[2]) {\n        case \"presets\":\n          return new Preset({ path: str, subProject: match[1] });\n        case \"rules\":\n          return new Rule({ path: str, subProject: match[1] });\n        case \"metadata\":\n          return await Preset.fromMetadata(str, match[1]);\n      }\n    } catch (e) {\n      log(e);\n    }\n  } else {\n    return null;\n  }\n}\n\nlet supplysub = {\n  async before(args) {\n    this.env = args.env;\n    if (!this.env) throw new AbortError(\"No env supplied\");\n    this.files = await getFilesFromArgs(args);\n  },\n\n  //Calculate a supply chain based on a starting rule at the top of the stack\n  async $calc(args) {\n    let name = args._.shift();\n    let stopName = args._.shift();\n    if (!name) {\n      throw new AbortError(\"No starting rule or @ supplied\");\n    }\n\n    if (name === \"@\") {\n      log(chalk`Silo clone started`);\n      this.chain = new SupplyChain();\n      this.chain.remote = args.env;\n    } else {\n      let rules = await Rule.getAll(this.env);\n      let stop, start;\n      start = rules.findByNameContains(name);\n      if (stopName) stop = rules.findByNameContains(stopName);\n\n      if (!start) {\n        throw new AbortError(\n          chalk`No starting rule found by name {blue ${name}}`\n        );\n      }\n      log(\n        chalk`Analyzing supply chain: ${start.chalkPrint(false)} - ${\n          stop ? stop.chalkPrint(false) : \"(open)\"\n        }`\n      );\n      this.chain = new SupplyChain(start, stop);\n    }\n\n    await this.chain.calculate();\n    await this.postAction(args);\n  },\n  async postAction(args) {\n    //Now that we have a supply chain object, do something with it\n    if (args[\"to\"]) {\n      this.chain.log();\n      if (this.chain.presets.arr[0]) {\n        await this.chain.downloadPresetCode(this.chain.presets);\n        log(\"Done\");\n      }\n\n      if (Array.isArray(args[\"to\"])) {\n        for (let to of args[\"to\"]) {\n          await this.chain.syncTo(to);\n        }\n      } else {\n        await this.chain.syncTo(args[\"to\"]);\n      }\n    } else if (args[\"diff\"]) {\n      //Very basic diff\n      let env = args[\"diff\"];\n      await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n      await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n      let otherPresets = await Promise.all(\n        this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name))\n      );\n      otherPresets = new Collection(otherPresets.filter(x => x));\n      await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n      await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n      const printPresets = (preset, otherPreset) => {\n        log(preset.chalkPrint(true));\n        if (otherPreset.name) {\n          log(otherPreset.chalkPrint(true));\n        } else {\n          log(chalk`{red (None)}`);\n        }\n      };\n\n      for (let preset of this.chain.presets) {\n        let otherPreset =\n          otherPresets.arr.find(x => x.name === preset.name) || {};\n\n        if (preset.code === otherPreset.code) {\n          if (!args[\"ignore-same\"]) {\n            printPresets(preset, otherPreset);\n            log(\"Code Same\");\n          }\n        } else {\n          printPresets(preset, otherPreset);\n          if (args[\"ignore-same\"]) {\n            log(\"-------\");\n          } else {\n            log(\"Code Different\");\n          }\n        }\n      }\n    } else {\n      await this.chain.log();\n    }\n  },\n  async $make(args) {\n    let set = new Set();\n    let hints = args.hint\n      ? Array.isArray(args.hint)\n        ? args.hint\n        : [args.hint]\n      : [];\n    //TODO modify for better hinting, and add this elsewhere\n    for (let hint of hints) {\n      if (hint === \"presets-uat\") {\n        log(\"got hint\");\n        await Preset.getAll(\"UAT\");\n      }\n    }\n\n    for (let file of this.files) {\n      set.add(await categorizeString(file));\n    }\n    let files = [...set];\n    files = files.filter(f => f && !f.missing);\n    this.chain = new SupplyChain();\n\n    this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n    this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n    this.chain.notifications = new Collection([]);\n\n    await this.postAction(args);\n  },\n  async unknown(arg, args) {\n    log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n  }\n};\n\nfunction subCommand(object) {\n  object = {\n    before() {},\n    after() {},\n    unknown() {},\n    ...object\n  };\n  return async function(args) {\n    //Grab the next arg on the stack, find a function tied to it, and run\n    let arg = args._.shift();\n    let key = \"$\" + arg;\n    let ret;\n    if (object[key]) {\n      await object.before(args);\n      ret = await object[key](args);\n      await object.after(args);\n    } else {\n      if (arg === undefined) arg = \"(None)\";\n      object.unknown(arg, args);\n    }\n    return ret;\n  };\n}\n\nlet cli = {\n  @helpText(`Display the help menu`)\n  @usage(`rally help [subhelp]`)\n  @param(\"subhelp\", \"The name of the command to see help for\")\n  async help(args) {\n    let arg = args._.shift();\n    if (arg) {\n      let help = helpEntries[arg];\n      if (!help) {\n        log(chalk`No help found for '{red ${arg}}'`);\n      } else {\n        log(printHelp(helpEntries[arg]));\n      }\n    } else {\n      for (let helpArg in helpEntries) {\n        log(printHelp(helpEntries[helpArg], true));\n      }\n    }\n  },\n\n  @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n  @usage(\"rally jupyter build [in] [out]\")\n  @param(\n    \"in/out\",\n    \"input and output file for jupyter. By default main.ipynb and main.py\"\n  )\n  async jupyter(args) {\n    return subCommand(jupytersub)(args);\n  },\n\n  @helpText(`Regex and writing related actions locally`)\n  @usage(`rally regwrite [action] --file [file]`)\n  @param(\"action\", \"The action to perform. Only list is supported right now\")\n  @arg(\"-f\", \"--file\", \"A file to act on\")\n  async regwrite(args) {\n  log(\n    chalk.green`Searching in specified file for hardcoded Preset and Rule names...`\n  );\n\n  if (configObject.prefixmode == false) {\n    var elements = process.argv.slice(9);\n  } else {\n    var elements = process.argv.slice(7);\n  }\n\n  //inquire is this is the right file name.\n  let filename = elements.join(\" \");\n  async function filenameQ(filename) {\n    return await inquirer\n      .prompt([\n        {\n          type: \"confirm\",\n          name: \"filename\",\n          message: \"Is \" + filename + \" the correct filename?\"\n        }\n      ])\n      .then(answers => {\n        //writing time\n        if (answers.filename != true) {\n          log(\n            chalk.red`You indicated this was not the correct filename so the program exited`\n          );\n          process.exit(22);\n        }\n      });\n  }\n  await filenameQ(filename);\n\n  //reading time\n  let filetext = readFileSync(filename, \"utf-8\");\n\n  // Regex and Replace time\n  var regex = /(@include |: |=)[\"'][N][L]/g;\n  var strmatch = filetext.match(regex);\n  // Replaces the strings found with regex with a prefixed version conditionally.\n  var replacementtext = filetext.replace(regex, function(strmatch) {\n    var prefixedmatch = \"\";\n    var equalpattern = \"=\";\n    var includepattern = \"@include \";\n    if (strmatch.match(equalpattern)) {\n      prefixedmatch = (\"='\" + getPrefix() + \"NL\").toString();\n    } else if (strmatch.match(includepattern)) {\n      prefixedmatch = (\"@include \" + '\"' + getPrefix() + \"NL\").toString();\n    } else {\n      prefixedmatch = (\": '\" + getPrefix() + \"NL\").toString();\n    }\n    return prefixedmatch;\n  });\n  //inquire before writing to disk??\n  async function writetofileQ(filename) {\n    return await inquirer\n      .prompt([\n        {\n          type: \"confirm\",\n          name: \"writetofile\",\n          message:\n            \"Do you want to add your prefix to preset/rule names in \" +\n            filename +\n            \" to disk?\"\n        }\n      ])\n      .then(answers => {\n        //writing time\n        if (answers.writetofile == true) {\n          writeFileSync(filename, replacementtext, { encoding: \"utf8\" });\n          log(chalk.yellow`Writing is done!`);\n        } else {\n          log(\n            chalk.red(`You have indicated that you do not want to write `) +\n              chalk.blue(filename) +\n              chalk.red(` to disk.`)\n          );\n          process.exit(22);\n        }\n      });\n  }\n  await writetofileQ(filename);\n\n  return subCommand(regsub)(args);\n},\n\n\n  //@helpText(`Print input args, for debugging`)\n  async printArgs(args) {\n    log(args);\n  },\n\n  @helpText(`Preset related actions`)\n  @usage(\n    `rally preset [action] --env <environment> --file [file1] --file [file2] ...`\n  )\n  @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\n  @arg(\"-f\", \"--file\", \"A file to act on\")\n  @arg(\n    \"~\",\n    \"--command\",\n    \"If the action is diff, this is the command to run instead of diff\"\n  )\n  @arg(\"-p\", \"--prefixmode\", \"A boolean for using prefixes or not\")\n  async preset(args) {\n    return subCommand(presetsub)(args);\n  },\n\n  @helpText(`Rule related actions`)\n  @usage(`rally rule [action] --env [environment]`)\n  @param(\"action\", \"The action to perform. Only list is supported right now\")\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\n  async rule(args) {\n    return subCommand(rulesub)(args);\n  },\n\n  @helpText(`supply chain related actions`)\n  @usage(`rally supply [action] [identifier] --env [environment]`)\n  @param(\"action\", \"The action to perform. Can be calc.\")\n  @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\n  @arg(\"-p\", \"--prefixmode\", \"A boolean for using prefixes or not\")\n  async supply(args) {\n    return subCommand(supplysub)(args);\n  },\n\n  @helpText(`List all available providers, or find one by name/id`)\n  @usage(`rally providers [identifier] --env [env] --raw`)\n  @param(\"identifier\", \"Either the name or id of the provider\")\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\n  @arg(\n    \"~\",\n    \"--raw\",\n    \"Raw output of command. If [identifier] is given, then print editorConfig too\"\n  )\n  async providers(args) {\n    let env = args.env;\n    if (!env) return errorLog(\"No env supplied.\");\n    let ident = args._.shift();\n\n    let providers = await Provider.getAll(env);\n\n    if (ident) {\n      let pro = providers.arr.find(\n        x => x.id == ident || x.name.includes(ident)\n      );\n      if (!pro) {\n        log(chalk`Couldn't find provider by {green ${ident}}`);\n      } else {\n        log(pro.chalkPrint(false));\n        let econfig = await pro.getEditorConfig();\n        if (args.raw) {\n          return pro;\n        } else {\n          if (econfig.helpText.length > 100) {\n            econfig.helpText = \"<too long to display>\";\n          }\n          if (econfig.completions.length > 5) {\n            econfig.completions = \"<too long to display>\";\n          }\n          log(econfig);\n        }\n      }\n    } else {\n      if (args.raw) return providers;\n      for (let pro of providers) log(pro.chalkPrint());\n    }\n  },\n\n  @helpText(`Change config for rally tools`)\n  @usage(\"rally config [key] --set [value] --raw\")\n  @param(\n    \"key\",\n    chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`\n  )\n  @arg(\n    \"~\",\n    \"--set\",\n    \"If this value is given, no interactive prompt will launch and the config option will change.\"\n  )\n  @arg(\"~\", \"--raw\", \"Raw output of json config\")\n  async config(args) {\n    let prop = args._.shift();\n    let propArray = prop && prop.split(\".\");\n\n    //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n    let newConfigObject;\n\n    if (!prop) {\n      if (configObject.rawOutput) return configObject;\n      log(\"Creating new config\");\n      newConfigObject = {\n        ...configObject\n      };\n      for (let helperName in configHelpers) {\n        if (helperName.startsWith(\"$\")) {\n          newConfigObject = {\n            ...newConfigObject,\n            ...(await configHelpers[helperName](false))\n          };\n        }\n      }\n    } else {\n      log(chalk`Editing option {green ${prop}}`);\n      if (args.set) {\n        newConfigObject = {\n          ...configObject,\n          [prop]: args.set\n        };\n      } else {\n        let ident = \"$\" + propArray[0];\n\n        if (configHelpers[ident]) {\n          newConfigObject = {\n            ...configObject,\n            ...(await configHelpers[ident](propArray))\n          };\n        } else {\n          log(chalk`No helper for {red ${ident}}`);\n          return;\n        }\n      }\n    }\n\n    newConfigObject.hasConfig = true;\n\n    //Create readable json and make sure the user is ok with it\n    let newConfig = JSON.stringify(newConfigObject, null, 4);\n    log(newConfig);\n\n    //-y or --set will make this not prompt\n    if (\n      !args.y &&\n      !args.set &&\n      !(await configHelpers.askQuestion(\"Write this config to disk?\"))\n    )\n      return;\n    writeFileSync(configFile, newConfig, { mode: 0o600 });\n    log(chalk`Created file {green ${configFile}}.`);\n  },\n\n  @helpText(`create/modify asset`)\n  @usage(\"rally asset [action] [action...]\")\n  @param(\n    \"action\",\n    chalk`Options are create, delete, launch, addfile. You can supply multiple actions to chain them`\n  )\n  @arg(`-i`, `--id`, chalk`MOVIE_ID of asset to select`)\n  @arg(\n    `-n`,\n    `--name`,\n    chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`\n  )\n  @arg(`-j`, `--job-name`, chalk`Job name to start (used with launch)`)\n  @arg(\n    `~`,\n    `--init-data`,\n    chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`\n  )\n  @arg(`~`, `--file-label`, chalk`File label (used with addfile)`)\n  @arg(\n    `~`,\n    `--file-uri`,\n    chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`\n  )\n  async asset(args) {\n    function uuid(args) {\n      const digits = 16;\n      return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(\n        digits,\n        \"0\"\n      );\n    }\n\n    let name = args.name || `TEST_#`;\n    let env = args.env;\n\n    let asset;\n    let arg = args._.shift();\n    if (!arg) {\n      throw new AbortError(\n        chalk`Missing arguments: see {white 'rally help asset'}`\n      );\n    }\n\n    if (arg == \"create\") {\n      name = name.replace(\"#\", uuid());\n      asset = await Asset.createNew(name, env);\n    } else {\n      args._.unshift(arg);\n      if (args.id) {\n        asset = Asset.lite(args.id, env);\n      } else {\n        asset = await Asset.getByName(env, args.name);\n      }\n    }\n\n    if (!asset) {\n      throw new AbortError(\"No asset found/created\");\n    }\n    let launchArg = 0;\n    let fileArg = 0;\n\n    let arrayify = (obj, i) =>\n      Array.isArray(obj) ? obj[i] : i == 0 ? obj : undefined;\n\n    while ((arg = args._.shift())) {\n      if (arg === \"launch\") {\n        let initData = arrayify(args[\"init-data\"], launchArg);\n        if (initData && initData.startsWith(\"@\")) {\n          log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n          initData = readFileSync(initData.slice(1), \"utf-8\");\n        }\n\n        let jobName = arrayify(args[\"job-name\"], launchArg);\n        let p = await Rule.getByName(env, jobName);\n        if (!p) {\n          throw new AbortError(\n            `Cannot launch job ${jobName}, does not exist (?)`\n          );\n        } else {\n          log(\n            chalk`Launching ${p.chalkPrint(false)} on ${asset.chalkPrint(\n              false\n            )}`\n          );\n        }\n\n        asset.startWorkflow(jobName, initData);\n        launchArg++;\n      } else if (arg === \"addfile\") {\n        let label = arrayify(args[\"file-label\"], fileArg);\n        let uri = arrayify(args[\"file-uri\"], fileArg);\n        if (label === undefined || !uri) {\n          throw new AbortError(\n            \"Number of file-label and file-uri does not match\"\n          );\n        }\n        await asset.addFile(label, uri);\n        log(chalk`Added file ${label}`);\n        fileArg++;\n      } else if (arg === \"delete\") {\n        await asset.delete();\n      } else if (arg === \"create\") {\n        throw new AbortError(\n          `Cannot have more than 1 create/get per asset call`\n        );\n      } else if (arg === \"show\") {\n        log(asset);\n      }\n    }\n  },\n\n  async checkSegments(args) {\n    let asset = args._.shift();\n    let res = await allIndexBundle.lib.makeAPIRequest({\n      env: args.env,\n      path: `/movies/${asset}/metadata/Metadata`\n    });\n    let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n    let r = segments.reduce((lastSegment, val, ind) => {\n      let curSegment = val.startTime;\n      if (curSegment < lastSegment) {\n        log(\"bad segment \" + (ind + 1));\n      }\n      return val.endTime;\n    }, \"00:00:00:00\");\n  },\n\n  async listAssets(args, tag) {\n    let req = await allIndexBundle.lib.indexPathFast({\n      env: args.env,\n      path: \"/assets\",\n      qs: {\n        noRelationships: true,\n        sort: \"id\"\n      },\n      chunksize: 30\n    });\n    for (let asset of req) {\n      log(asset.id);\n    }\n\n    return req;\n  },\n\n  async listSegments(args) {\n    let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n    for (let asset of f) {\n      let r = await allIndexBundle.lib.makeAPIRequest({\n        env: args.env,\n        path: `/movies/${asset.id}/metadata/Metadata`\n      });\n\n      let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n      if (segs && segs.length > 1) {\n        log(asset.id);\n        log(asset.name);\n      }\n    }\n  },\n  async test2(args) {\n    let wfr = await allIndexBundle.lib.indexPath({\n      env: args.env,\n      path: \"/workflowRuleMetadata\"\n    });\n    log(wfr);\n\n    for (let wfrm of wfr) {\n      try {\n        wfrm.id = undefined;\n        wfrm.links = undefined;\n        log(wfrm);\n        let req = await allIndexBundle.lib.makeAPIRequest({\n          env: \"DEV\",\n          path: \"/workflowRuleMetadata\",\n          method: \"POST\",\n          payload: { data: wfrm }\n        });\n      } catch (e) {\n        log(\"caught\");\n      }\n      //break;\n    }\n  },\n\n  async test3(args) {\n    let wfr = await allIndexBundle.lib.indexPath({\n      env: args.env,\n      path: \"/workflowRuleMetadata\"\n    });\n    log(wfr);\n\n    for (let wfrm of wfr) {\n      try {\n        wfrm.id = undefined;\n        wfrm.links = undefined;\n        log(wfrm);\n        let req = await allIndexBundle.lib.makeAPIRequest({\n          env: \"DEV\",\n          path: \"/workflowRuleMetadata\",\n          method: \"POST\",\n          payload: { data: wfrm }\n        });\n      } catch (e) {\n        log(\"caught\");\n      }\n      //break;\n    }\n  },\n\n  sleep(time = 1000) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  },\n\n  async audit(args) {\n    let supportedAudits = [\"presets\", \"rule\", \"other\"];\n    await configHelpers.addAutoCompletePrompt();\n    let q = await configHelpers.inquirer.prompt([\n      {\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What audit do you want?`,\n        source: async (sofar, input) => {\n          return supportedAudits.filter(x =>\n            input ? x.includes(input.toLowerCase()) : true\n          );\n        }\n      }\n    ]);\n    let choice = q.obj;\n    let resourceId = undefined;\n    let filterFunc = _ => _;\n    if (choice === \"presets\") {\n      let preset = await configHelpers.selectPreset();\n      let remote = await Preset.getByName(args.env, preset.name);\n      if (!remote)\n        throw new AbortError(\"Could not find this item on remote env\");\n      filterFunc = ev => ev.resource == \"Preset\";\n      resourceId = remote.id;\n    } else if (choice === \"rule\") {\n      let preset = await configHelpers.selectRule();\n      let remote = await Rule.getByName(args.env, preset.name);\n      if (!remote)\n        throw new AbortError(\"Could not find this item on remote env\");\n      filterFunc = ev => ev.resource == \"Rule\";\n      resourceId = remote.id;\n    } else {\n      resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n    }\n\n    log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n    log(`Loading audits (this might take a while)`);\n    const numRows = 100;\n    let r = await allIndexBundle.lib.makeAPIRequest({\n      env: args.env,\n      path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n      timeout: 180000\n    });\n    r.data = r.data.filter(filterFunc);\n\n    log(\"Data received, parsing users\");\n\n    for (let event of r.data) {\n      let uid = event?.correlation?.userId;\n      if (!uid) continue;\n      try {\n        event.user = await User.getById(args.env, uid);\n      } catch (e) {\n        event.user = { name: \"????\" };\n      }\n    }\n\n    if (args.raw) return r.data;\n    let evCounter = 0;\n    for (let event of r.data) {\n      let evtime = moment(event.createdAt);\n      let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n      let timedist = evtime.fromNow();\n      log(\n        chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${\n          event.event\n        }`\n      );\n\n      if (++evCounter >= 30) break;\n    }\n  },\n\n  async audit2(args) {\n    const numRows = 1000;\n    let r = await allIndexBundle.lib.makeAPIRequest({\n      env: args.env,\n      //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n      path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n      timeout: 60000\n    });\n    for (let event of r.data) {\n      log(event.event);\n    }\n  },\n\n  async findIDs(args) {\n    let files = await getFilesFromArgs(args);\n    for (let file of files) {\n      let preset = await Preset.getByName(args.env, file);\n      await preset.resolve();\n      log(`silo-presets/${file}.${preset.ext}`);\n    }\n  },\n\n  async getAssets(env, name) {\n    if (!this.callid) this.callid = 0;\n    this.callid++;\n    let callid = this.callid;\n\n    await this.sleep(500);\n\n    if (callid != this.callid) return this.lastResult || [];\n\n    let req = await allIndexBundle.lib.makeAPIRequest({\n      env,\n      path: `/assets`,\n      qs: name ? { filter: `nameContains=${name}` } : undefined\n    });\n    this.lastCall = Date.now();\n\n    return (this.lastResult = req.data);\n  },\n\n  async content(args) {\n    configHelpers.addAutoCompletePrompt();\n    let q = await configHelpers.inquirer.prompt([\n      {\n        type: \"autocomplete\",\n        name: \"what\",\n        message: `What asset do you want?`,\n        source: async (sofar, input) => {\n          let assets = await this.getAssets(args.env, input);\n          assets = assets.map(x => new Asset({ data: x, remote: args.env }));\n          return assets.map(x => ({\n            name:\n              x.chalkPrint(true) +\n              \": \" +\n              x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n            value: x\n          }));\n        }\n      }\n    ]);\n  },\n\n  async [\"@\"](args) {\n    args._.unshift(\"-\");\n    args._.unshift(\"make\");\n    return this.supply(args);\n  },\n\n  async test(args) {\n    let asset = await Asset.getByName(\"UAT\", args.name);\n    log(asset);\n  },\n\n  //Used to test startup and teardown speed.\n  noop() {\n    return true;\n  }\n};\nasync function unknownCommand(cmd) {\n  log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand() {\n  write(chalk` \nRally Tools {yellow v${packageVersion} (alpha)} CLI\ncreated by John Schmidt <John_Schmidt@discovery.com>\nenhanced by David Ampofo <David_Ampofo@discovery.com>\n`);\n\n  //Prompt users to setup one time config.\n  if (!configObject.hasConfig) {\n    write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n    return;\n  }\n\n  //API Access tests\n  for (let env of [\"LOCAL\", \"DEV\", \"UAT\", \"QA\", \"PROD\"]) {\n    //Test access. Returns HTTP response code\n    let resultStr;\n    try {\n      let result = await funcs.testAccess(env);\n\n      //Create a colored display and response\n      resultStr = chalk`{yellow ${result} <unknown>}`;\n      if (result === 200) resultStr = chalk`{green 200 OK}`;\n      else if (result === 401) resultStr = chalk`{red 401 No Access}`;\n      else if (result >= 500) resultStr = chalk`{yellow ${result} API Down?}`;\n      else if (result === true) resultStr = chalk`{green OK}`;\n      else if (result === false) resultStr = chalk`{red BAD}`;\n    } catch (e) {\n      if (e instanceof UnconfiguredEnvError) {\n        resultStr = chalk`{yellow Unconfigured}`;\n      } else if (e instanceof APIError) {\n        if (!e.response.body) {\n          resultStr = chalk`{red Timeout (?)}`;\n        }\n      } else if (e.name == \"RequestError\") {\n        resultStr = chalk`{red Low level error (check internet): ${\n          e.error.errno\n        }}`;\n      } else {\n        throw e;\n      }\n    }\n\n    log(chalk`   ${env}: ${resultStr}`);\n  }\n}\n\nasync function $main() {\n  //Supply --config to load a different config file\n  if (argv.config) loadConfig(argv.config);\n  console.log(argv)\n  // First we need to decide if the user wants color or not. If they do want\n  // color, we need to ensure we use the right mode\n  chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n  if (chalk.level === 0 || !chalk.enabled) {\n    let force = argv[\"force-color\"];\n    if (force) {\n      chalk.enabled = true;\n      if (force === true && chalk.level === 0) {\n        chalk.level = 1;\n      } else if (Number(force)) {\n        chalk.level = Number(force);\n      }\n    }\n  }\n\n  //This flag being true allows you to modify UAT and PROD\n  if (!argv[\"protect\"]) {\n    configObject.dangerModify = true;\n  }\n\n  //This enables raw output for some functions\n  if (argv[\"raw\"]) {\n    configObject.rawOutput = true;\n    global.log = () => {};\n    global.errorLog = () => {};\n    global.write = () => {};\n  }\n  //This prevents the prefix from being used\n  if (argv[\"prefixmode\"]) {\n    configObject.prefixmode = JSON.parse(argv[\"prefixmode\"]);\n  }\n\n  if (argv[\"ignore-missing\"]) {\n    configObject.ignoreMissing = true;\n  }\n\n  //Default environment should normally be from config, but it can be\n  //overridden by the -e/--env flag\n  if (configObject.defaultEnv) {\n    argv.env = argv.env || configObject.defaultEnv;\n  }\n\n  //Enable verbose logging in some places.\n  if (argv[\"vverbose\"]) {\n    configObject.verbose = argv[\"vverbose\"];\n    configObject.vverbose = true;\n  } else if (argv[\"verbose\"]) {\n    configObject.verbose = argv[\"verbose\"];\n  } else if (argv[\"vvverbose\"]) {\n    configObject.verbose = true;\n    configObject.vverbose = true;\n    configObject.vvverbose = true;\n  }\n\n  //copy argument array to new object to allow modification\n  argv._old = argv._.slice();\n\n  //Take first argument after `node bundle.js`\n  //If there is no argument, display the default version info and API access.\n  let func = argv._.shift();\n  if (func) {\n    if (!cli[func]) return await unknownCommand(func);\n    try {\n      //Call the cli function\n      let ret = await cli[func](argv);\n      if (ret) {\n        write(chalk.white(\"CLI returned: \"));\n        if (ret instanceof Collection) ret = ret.arr;\n\n        //Directly use console.log so that --raw works as intended.\n        if (typeof ret === \"object\") {\n          console.log(JSON.stringify(ret, null, 4));\n        } else {\n          console.log(ret);\n        }\n      }\n    } catch (e) {\n      if (e instanceof AbortError) {\n        log(chalk`{red CLI Aborted}: ${e.message}`);\n        process.exit(22);\n\n      } else {\n        throw e;\n      }\n    }\n  } else {\n    await noCommand();\n  }\n}\n\nasync function main(...args) {\n  //Catch all for errors to avoid ugly default node promise catcher\n  try {\n    await $main(...args);\n  } catch (e) {\n    errorLog(e.stack);\n  }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Otherwise just export everything.\nif (require.main === module) {\n  main();\n} else {\n  module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","getPrefix","prefix","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","rp","importLazy","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","vvverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Asset","metadata","normalizeMetadata","newMetadata","md","lite","createNew","req","delete","addFile","label","fileuris","Array","instances","startWorkflow","jobName","initData","startAnonWorkflow","startEvaluate","presetid","movie","preset","home","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","rallyConfiguration","systemManaged","fromMetadata","providerType","provider","realpath","getLocalPath","providerSettings","acclimatize","ptype","test","regex","match","matches","runTest","asset","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","uploadPresetData","grabMetadata","includeMetadata","shouldTest","PresetName","OutputStorageName","ProxyTypeName","Notification","notifications","argv","argparse","string","boolean","default","protect","prefixmode","alias","f","p","Rule","description","priority","starred","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","verbose","syncTo","rule","User","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","SdviContentMover","SdviEvaluate","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$prefixmode","$project","project","askInput","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","basePath","objsMap","none","selectPreset","purpose","selectRule","question","def","ok","printHelp","help","substring","getFilesFromArgs","lastArg","shift","files","_old","getStdin","stdin","regtoenv","green","elements","filename","filetext","strmatch","replacementtext","prefixedmatch","equalpattern","includepattern","toString","subCommand","regsub","presetsub","before","$grab","exit","full","remo","$create","configHelpers","baseCode","$list","attach","rawOutput","$upload","yellow","blue","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","jupytersub","output","$build","cmd","categorizeString","defaultSubproject","trim","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","object","after","cli","helpArg","jupyter","regwrite","filenameQ","then","answers","writetofileQ","writetofile","encoding","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","launchArg","fileArg","arrayify","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","listAssets","tag","noRelationships","listSegments","segs","test2","wfr","wfrm","test3","sleep","setTimeout","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","moment","date","format","timedist","fromNow","audit2","findIDs","getAssets","callid","lastResult","lastCall","Date","content","assets","self","noop","unknownCommand","noCommand","packageVersion","resultStr","error","errno","$main","enabled","level","force","defaultEnv","white","main","stack","module","exports"],"mappings":"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"}