{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/notification.js","src/fswrap.js","src/rule.js","src/config-create.js","src/file.js","src/trace.js","src/asset.js","src/preset.js","src/supply-chain.js","src/user.js","src/tag.js","src/stage.js","src/index.js","src/baseCode.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        let write = global.write;\n        if(options.noecho){\n            write = () => {};\n        }\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n\n        if(options.stdin) {\n            options.stdin(cp.stdin);\n        }\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.error(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if([200, 201, 202, 203, 204].includes(response.statusCode) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        opts.maxParallelRequests = 1;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n    static async keepalive(funcs){\n        for(let f of funcs){\n            await f();\n        }\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${!response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        //Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class ResoultionError extends Error{\n    constructor(name, env){\n        super(chalk`Error during name resolution: '{blue ${name}}' is not mapped on {green ${env}}`);\n        this.name = \"Name Resoultion Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs && qs.filter ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }else{\n                throw new ResoultionError(`(id = ${dataObj.id})`, this.remote);\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }else{\n                throw new ResoultionError(dataObj.name, this.remote);\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function* zip(...items){\n    let iters = items.map(x => x[Symbol.iterator]());\n\n    for(;;){\n        let r = [];\n        for(let i of iters){\n            let next = i.next()\n            if(next.done) return;\n            r.push(next.value);\n        }\n        yield r;\n    }\n}\n\nexport async function* unordered(proms){\n    let encapsulatedPromises = proms.map(async (x, i) => [i, await x]);\n    while(encapsulatedPromises.length > 0){\n        let [ind, result] = await Promise.race(encapsulatedPromises.filter(x => x));\n        yield result;\n\n        encapsulatedPromises[ind] = undefined;\n    }\n}\n\nexport function* range(start, end){\n    if(end === undefined){\n        end = start;\n        start = 0;\n    }\n    while(start < end) yield start++;\n}\n\nexport class IndexObject {\n    //normal opts from any makeAPIRequest\n    //Note that full_response and pages won't work.\n    //\n    //if you want to start from another page, use `opts.start`\n    //opts.observe: async function(jsonData) => jsonData. Transform the data from the api\n    //opts.maxParallelRequests: number of max api requests to do at once\n    //opts.noCollect: return [] instead of the full data\n    constructor(opts){\n        this.opts = opts;\n    }\n\n    linkToPage(page) {\n        return this.baselink.replace(`page=1p`, `page=${page}p`);\n    }\n\n    async initializeFirstRequest(){\n        //Create a copy of the options in case we need to have a special first request\n        this.start = this.opts.start || 1;\n        let initOpts = {...this.opts};\n        if(this.opts.pageSize){\n            initOpts.qs = {...this.opts.qs};\n            initOpts.qs.page = `${this.start}p${this.opts.pageSize}`;\n        }\n\n        this.allResults = [];\n\n        //we make 1 non-parallel request to the first page so we know how to\n        //format the next requests\n        let json = await lib.makeAPIRequest(initOpts);\n\n        if(this.opts.observe) json = await this.opts.observe(json);\n        if(!this.opts.noCollect) this.allResults.push(json);\n\n        this.baselink = json.links.first;\n        this.currentPageRequest = this.start;\n\n        this.hasHit404 = false;\n    }\n\n    getNextRequestLink(){\n        this.currentPageRequest++;\n        return [this.currentPageRequest, this.linkToPage(this.currentPageRequest)];\n    }\n\n    ///promiseID is the id in `currentPromises`, so that it can be marked as\n    ///done inside the promise array. promiseID is a number from 0 to\n    ///maxparallel-1\n    async getNextRequestPromise(promiseID){\n        let [page, path_full] = this.getNextRequestLink();\n        return [promiseID, page, await lib.makeAPIRequest({\n            ...this.opts,\n            path_full,\n            fullResponse: true,\n        })];\n    }\n\n    cancel(){\n        this.willCancel = true;\n    }\n\n    async fullResults(){\n        await this.initializeFirstRequest();\n        let maxParallelRequests = this.opts.maxParallelRequests || this.opts.chunksize || 20;\n\n        let currentPromises = [];\n\n        //generate the first set of requests. Everything after this will re-use these i promiseIDs\n        for(let i = 0; i < maxParallelRequests; i++){\n            currentPromises.push(this.getNextRequestPromise(currentPromises.length));\n        }\n\n        for(;;){\n            let [promiseID, page, requestResult] = await Promise.race(currentPromises.filter(x => x));\n\n            if(this.willCancel){\n                return null;\n            }\n\n            if(requestResult.statusCode === 404){\n                this.hasHit404 = true;\n            }else if(requestResult.statusCode === 200){\n                let json = JSON.parse(requestResult.body);\n                if(this.opts.observe) json = await this.opts.observe(json);\n                if(!this.opts.noCollect) this.allResults.push(json);\n\n                if(json.data.length === 0) this.hasHit404 = true;\n            }else{\n                throw new APIError(requestResult, `(unknown args) page ${page}`, null);\n            }\n\n            if(this.hasHit404){\n                currentPromises[promiseID] = null;\n            }else{\n                currentPromises[promiseID] = this.getNextRequestPromise(promiseID);\n            }\n\n            if(currentPromises.filter(x => x).length === 0) break;\n        }\n\n        let all = [];\n        for(let result of this.allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n}\n\nexport function orderedObjectKeys(obj) {\n    let keys = Object.keys(obj).sort();\n\n    let newDict = {};\n    for(let key of keys) {\n        if(Array.isArray(obj[key])){\n            newDict[key] = obj[key].map(x => orderedObjectKeys(x));\n        }else if(typeof obj[key] === \"object\" && obj[key]) {\n            newDict[key] = orderedObjectKeys(obj[key]);\n        }else{\n            newDict[key] = obj[key];\n        }\n    }\n\n    return newDict;\n};\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this.name === \"Vantage\") return \"zip\";\n                if(this.name === \"ffmpeg\") return \"txt\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError, orderedObjectKeys} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        delete this.data.relationships.transitions;\n        delete this.data.meta;\n        delete this.data.attributes.updatedAt;\n        delete this.data.attributes.createdAt;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n\n            writeFileSync(this.localpath, JSON.stringify(orderedObjectKeys(this.data), null, 4));\n        }else{\n            await this.acclimatize(env);\n            return await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PUT\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode > 210){\n                return `Failed to upload: ${res.body}`;\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return this._localpath || join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import {configFile, configObject} from \"./config.js\";\nimport {join, basename} from \"path\";\nimport {writeFileSync} from \"fs\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository (empty for N/A)?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function loadLocals(path, Class){\n    let basePath = configObject.repodir;\n    let objs = (await readdir(basePath))\n        .filter(name => name.includes(path))\n        .filter(name => !basename(name).startsWith(\".\"))\n        .map(name => new Class({path: name}));\n    return objs;\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let objs = await loadLocals(path, Class);\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n\n    return await selectLocalMenu(objsMap, typeName, canSelectNone);\n}\n\nexport async function selectLocalMenu(objs, typeName, canSelectNone = true){\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    if(canSelectNone) objs.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objs.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n\nexport async function saveConfig(newConfigObject, {ask = true, print = true} = {}){\n    //Create readable json and make sure the user is ok with it\n    let newConfig = JSON.stringify(newConfigObject, null, 4);\n    if(print) log(newConfig);\n\n    //-y or --set will make this not prompt\n    if(ask && !await askQuestion(\"Write config to disk?\")) return;\n    writeFileSync(configFile, newConfig, {mode: 0o600});\n    log(chalk`Created file {green ${configFile}}.`);\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite file)\"}} {red ${this.sizeHR}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n\n    get sizeHR(){\n        let units = [\"B\", \"K\", \"M\", \"G\", \"T\"];\n\n        let unitIdx = 0;\n\n        let size = this.size;\n        while(size > 1000){\n            size /= 1024;\n            unitIdx++;\n        }\n\n        if(size > 100){\n            size = Math.round(size);\n        }else{\n            size = Math.round(size * 10) / 10;\n        }\n\n        return size + units[unitIdx];\n    }\n\n    get instancesList() {\n        let instances = [];\n        for(let [key, val] of Object.entries(this.instances)){\n            let n = {id: key};\n            Object.assign(n, val);\n            instances.push(n);\n        }\n        return instances;\n    }\n\n    static rslURL(instance){\n        return `rsl://${instance.storageLocationName}/${instance.name}`;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getArtifact(env, artifact, jobid){\n    let path = `/jobs/${jobid}/artifacts/${artifact}`;\n    let art = lib.makeAPIRequest({\n        env, path,\n    }).catch(_ => null);\n\n    return await art;\n}\n\nexport async function getInfo(env, jobid){\n    let trace          = getArtifact(env, \"trace\", jobid);\n    let renderedPreset = getArtifact(env, \"preset\", jobid);\n    let result         = getArtifact(env, \"result\", jobid);\n    let error          = getArtifact(env, \"error\", jobid);\n    let output         = getArtifact(env, \"output\", jobid);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport const tracelineRegex = /^(?:[\\d.]+) ([\\w ]+):(\\d+): (.+)/;\nexport function parseTraceLine(line){\n    let info = tracelineRegex.exec(line);\n\n    if(!info) {\n        return {\n            full: line,\n            parsed: false,\n            content: line,\n        };\n    }\n\n    return {\n        absoluteTime: info[0],\n        presetName: info[1],\n        lineNumber: info[2],\n        text: info[3],\n        content: info[3],\n        full: line,\n        parsed: true,\n    }\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        let info = parseTraceLine(errLine);\n        if(!info.parsed){\n            errorList.push(await findLineInFile(renderedPreset, info.lineNumber));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile, getArtifact};\nexport default Trace;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nimport {getArtifact, parseTraceLine} from \"./trace.js\";\nimport moment from \"moment\"\n\nimport path from \"path\";\nimport fs from \"fs\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata?page=1p100`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow){\n            //FIXME\n            //Currently, WORKFLOW_METADATA cannot be patched via api: we need to\n            //start a ephemeral eval to upload it\n            let md = JSON.stringify(JSON.stringify(metadata.Workflow));\n            let fakePreset = {\n                code: `WORKFLOW_METADATA.update(json.loads(${md}))`\n            }\n            await this.startEphemeralEvaluateIdeal(fakePreset);\n            log(\"WFMD Patched using ephemeralEval\")\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n            log(\"MD Patched\")\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(refresh = false){\n        if(this._files && !refresh) return this._files;\n\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return this._files = new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData, isBinary=false){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        //we need to strip invalid utf8 characters from the\n                        //buffer before we encode it or the sdvi backend dies\n                        providerData: Buffer.from(preset.code, isBinary && \"binary\" || \"utf8\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\\n\");\n        let dots = 0;\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(`\\r${res.data.attributes.state}${\".\".repeat(dots++)}         `);\n            if(dots === 5){ dots = 1; }\n\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(500);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n\n    async migrate(targetEnv){\n        configObject.globalProgress = false;\n        log(`Creating paired file in ${targetEnv}`);\n\n        //Fetch metadata in parallel, we await it later\n        let _mdPromise = this.getMetadata();\n\n        let targetAsset = await Asset.getByName(targetEnv, this.name);\n        if(targetAsset){\n            log(`Asset already exists ${targetAsset.chalkPrint()}`);\n            //if(configObject.script) process.exit(10);\n        }else{\n            targetAsset = await Asset.createNew(this.name, targetEnv);\n            log(`Asset created ${targetAsset.chalkPrint()}`);\n        }\n\n        //wait for metadata to be ready before patching\n        await _mdPromise;\n        log(\"Adding asset metadata\");\n        await targetAsset.patchMetadata(this.md);\n\n        let fileCreations = [];\n        for(let file of await this.getFiles()){\n\n            let possibleInstances = {};\n            //Check for any valid copy-able instances\n            for(let inst of file.instancesList){\n                //We need to skip internal files\n                if(inst.storageLocationName === \"Rally Platform Bucket\") continue;\n\n                log(`Adding file: ${file.chalkPrint()}`);\n                possibleInstances[inst.storageLocationName] = () => targetAsset.addFileInstance(file, inst);\n            }\n\n            if(Object.values(possibleInstances).length > 1){\n                //prioritize archive is possible\n                if(possibleInstances[\"Archive\"]){\n                    log(\"Hit archive prioritizer\");\n                    fileCreations.push(possibleInstances[\"Archive\"]);\n                }else{\n                    fileCreations.push(...Object.values(possibleInstances));\n                }\n            }else{\n                fileCreations.push(...Object.values(possibleInstances));\n            }\n\n        }\n        await Promise.all(fileCreations.map(x => x()));\n    }\n\n    async addFileInstance(file, inst, tagList = []){\n        let newInst = {\n            uri: File.rslURL(inst),\n            name: inst.name,\n            size: inst.size,\n            lastModified: inst.lastModified,\n            storageLocationName: inst.storageLocationName,\n        };\n\n        let instances = {};\n\n        instances[String(Math.floor(Math.random() * 100000 + 1))] = newInst;\n\n\n        let request = lib.makeAPIRequest({\n            env: this.remote, path: `/files`, method: \"POST\",\n\n            payload: {\n                data: {\n                    type: \"files\",\n                    attributes: {\n                        label: file.label,\n                        tagList,\n                        instances,\n                    },\n                    relationships: {\n                        asset: {\n                            data: {\n                                id: this.id,\n                                type: \"assets\"\n                            },\n                        },\n                    },\n                }\n            }\n        });\n\n\n        try{\n            let fileData = await request;\n            let newFile = new File({data: fileData.data, remote: this.remote, parent: this})\n            if(configObject.script) console.log(inst.uri, newFile.instancesList[0].uri);\n        }catch(e){\n            log(chalk`{red Failed file: ${file.chalkPrint()}}`)\n        }\n    }\n\n    async downloadFile(label, destFolder){\n        let files = await this.getFiles();\n\n        let file = files.findByName(label)\n\n        let c = await file.getContent();\n\n        if(destFolder){\n            let filePath = path.join(destFolder, file.instancesList[0].name);\n            fs.writeFileSync(filePath, c);\n        }else{\n            console.log(c);\n        }\n    }\n    async deleteFile(label){\n        let files = await this.getFiles();\n        let file = files.findByName(label);\n        if(!file) return false;\n        await file.delete(false);//mode=forget\n        return true;\n    }\n\n    async listJobs() {\n        let jobs = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n\n        for(let e of jobs) {\n            if(!e.relationships.preset.data) continue;\n            let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n            let rule = await Rule.getById(this.remote, e.relationships.workflowRule.data.id);\n            log(\"Preset\", preset.name);\n            log(\"Rule\", rule.name);\n        }\n    }\n\n    //get all artifacts of type `artifact` from this asset\n    async *artifactsList(artifact) {\n        async function* reorderPromises(p){\n            ////yield in order we got it\n            //yield* p[Symbol.iterator]();\n            ////yield in order of first to finish\n            //yield* unordered(p);\n\n            //yield in chronological order\n            let k = await Promise.all(p);\n            yield* k.sort((\n                [e1, _a],\n                [e2, _b]\n            ) => {\n                return e1.attributes.completedAt - e2.attributes.completedAt;\n            });\n        }\n\n\n        elog(\"Reading jobs...\");\n        let r = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n        elog(\"Getting job artifacts...\");\n\n\n        //let evals = r.filter(x => x.attributes.providerTypeName === \"SdviEvaluate\");\n        let evals = r;\n        let zipped = evals.map(async x => [x, await getArtifact(this.remote, artifact, x.id)]);\n\n        for await(let x of reorderPromises(zipped)) {\n            yield x;\n        }\n    }\n\n    async grep(text, {artifact = \"trace\", nameOnly = false, ordering = null}){\n        function highlight(line, text){\n            let parts = line.split(text);\n            return parts.join(chalk`{blue ${text}}`);\n        }\n\n        function parseLine(x){\n            if(artifact === \"trace\"){\n                return parseTraceLine(x);\n            }else{\n                //fake the output from parseTraceLine to make it look right\n                return {content: x};\n            }\n        }\n\n        for await(let [e, trace] of this.artifactsList(artifact)){\n            if(!trace) continue;\n\n            let lines = trace.split(\"\\n\").map(parseLine);\n            let matching = lines.filter(x => x.content.includes(text));\n            if(matching.length > 0){\n                let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n                if(nameOnly){\n                    log(chalk`{red ${preset.name}} ${e.id} {blue ${matching.length}} matche(s) ${e.attributes.completedAt}`);\n                }else if(configObject.rawOutput){\n                    console.log(matching.map(x => chalk`{red ${preset.name}}:${highlight(x.content, text)}`).join(\"\\n\"));\n                }else{\n                    log(chalk`{red ${preset.name}} ${e.id} ${moment(e.attributes.completedAt)}`);\n                    log(matching.map(x => `  ${highlight(x.content, text)}`).join(\"\\n\"));\n                }\n            }\n        }\n    }\n\n    async replay() {\n\n        function colorRequest(id) {\n            if(id <= 299) {\n                return chalk`{green ${id}}`;\n            }else if(id <= 399) {\n                return chalk`{blue ${id}}`;\n            }else if(id <= 499) {\n                return chalk`{red ${id}}`;\n            }else if(id <= 599) {\n                return chalk`{cyan ${id}}`;\n            }else {\n                throw new Error(\"failed to create color from id\");\n            }\n        }\n        let worstRegexEver = /^@Request (?<type>\\w+) (?<url>.+)$[\\n\\r]+^(?<time>.+)$[\\S\\s]+?^(?<request>\\{[\\S\\s]+?^\\})?[\\S\\s]+?^@Response (?<statusCode>\\d+)$[\\S\\s]+?^(?<response>\\{[\\S\\s]+?^\\})?[\\S\\s]+?={61}/gm;\n        for await(let [e, trace] of this.artifactsList(\"output\")){\n            if(!trace) continue;\n\n            let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n            log(chalk`{red ${preset.name}}`);\n            for(let request of trace.matchAll(worstRegexEver)) {\n                //log(request);\n                if(true){\n                    let r = request.groups;\n                    log(chalk`Request: ${r.type} ${r.url} returned ${colorRequest(r.statusCode)}`);\n                }\n            }\n        }\n    }\n\n    async analyze(){\n        await lib.makeAPIRequest({\n            env: this.remote, path: \"/v1.0/analysis\",\n            method: \"POST\",\n            payload: {\n                \"movieId\": this.id,\n                \"latestVersion\": true,\n            },\n        });\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import {RallyBase, lib, AbortError, Collection, orderedObjectKeys} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {loadLocals} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        delete this.data.attributes.rallyConfiguration;\n        delete this.data.attributes.systemManaged;\n        delete this.data.meta;\n    }\n    //Given a metadata file, get its actual file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id, {\"uploadPresetName\": this.name});\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code || \"\");\n    }\n    async uploadRemote(env, shouldTest = true){\n        await this.uploadCodeToEnv(env, true, shouldTest);\n    }\n    async save(env, shouldTest = true){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env, shouldTest);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        let code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n\n        //match header like \n        // # c: d\n        // # b\n        // # a\n        // ##################\n        let headerRegex = /(^# .+[\\r\\n]+)+#+[\\r\\n]+/gim;\n        let hasHeader = headerRegex.exec(code);\n\n        if(hasHeader){\n            this.header = code.substring(0, hasHeader[0].length - 1);\n            code = code.substring(hasHeader[0].length);\n        }\n\n        return this.code = code;\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s*:\\s*([\\w\\d. \\/_]+)\\s*$/gim;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return this._localpath || path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n\n    async convertImports() { \n    }\n\n    async convertIncludes() { \n    }\n\n    isEval() {\n        return this.providerName === \"SdviEvaluate\" || this.providerName === \"SdviEvalPro\";\n    }\n\n    async uploadPresetData(env, id){\n        if(this.code.trim() === \"NOUPLOAD\"){\n            write(chalk`code skipped {yellow :)}, `);\n            // Not an error, so return null\n            return null;\n        }\n\n        let code = this.code;\n        let headers = {};\n\n        //if(this.isEval()){\n            //let crt = 0;\n            //code = code.split(\"\\n\").map(line => {\n                //crt += 1\n\n                //if(line.trim().endsWith(\"\\\\\")) return line;\n\n                //return [\n                    //line,\n                    //`# this ^^ is ${this.name}:${crt}`,\n                //]\n            //}).flat().join(\"\\n\");\n        //}\n\n        if(!configObject.skipHeader && this.isEval()){\n            write(chalk`generate header, `);\n            let repodir = configObject.repodir;\n            let localpath;\n            if(this.path){\n                localpath = this.path.replace(repodir, \"\");\n                if(localpath.startsWith(\"/\")) localpath = localpath.substring(1);\n            }else{\n                localpath = \"Other Silo\"\n            }\n\n            try{\n                let {stdout: headerText} = await spawn(\n                    {noecho: true},\n                    \"sh\",\n                    [\n                        path.join(configObject.repodir, `bin/header.sh`),\n                        moment(Date.now()).format(\"ddd YYYY/MM/DD hh:mm:ssa\"),\n                        localpath,\n                    ]\n                );\n                code = headerText + code;\n                write(chalk`header ok, `);\n            }catch(e){\n                write(chalk`missing unix, `);\n            }\n        }\n\n        //binary presets\n        if(this.providerName == \"Vantage\"){\n            code = Buffer.from(code).toString(\"base64\");\n            headers[\"Content-Transfer-Encoding\"] = \"base64\";\n        }\n\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: code, method: \"PUT\", fullResponse: true, timeout: 10000,\n            headers,\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async deleteRemoteVersion(env, id=null){\n        if(lib.isLocalEnv(env)) return false;\n        if(!id){\n            let remote = await Preset.getByName(env, this.name);\n            id = remote.id;\n        }\n\n        return await lib.makeAPIRequest({\n            env, path: `/presets/${id}`,\n            method: \"DELETE\",\n        });\n    }\n\n    async delete(){\n        if(lib.isLocalEnv(this.remote)) return false;\n\n        return await this.deleteRemoteVersion(this.remote, this.id);\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return \"Missing Name\";\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return \"Immutable Preset\";\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        let uploadResult = null;\n        if(remote){\n            //If it exists we can replace it\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                payload.data.relationships = {};\n                if (this.relationships.providerType) {\n                    payload.data.relationships.providerType = this.relationships.providerType;\n                    let dt = payload.data.relationships.providerType;\n                    write(chalk`query type, `);\n                    let ptid = await Provider.getByName(env, dt.data.name);\n                    write(chalk`({gray ${ptid.name}}) ok, `);\n                    dt.data.id = ptid.data.id;\n                }else{\n                    write(\"replace (simple), \");\n                }\n\n                if(this.providerName === \"SdviEvalPro\"){\n                    log(\"givin it a name,\");\n                    let oldName = this.attributes.providerDataFilename;\n                    if(!oldName){\n                        this.attributes.providerDataFilename = this.name + \".py\";\n                    }\n                }\n\n\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PUT\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode >= 400){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return \"Metadata Upload Failed\";\n                }\n            }\n\n            uploadResult = await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            uploadResult = await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n\n        return uploadResult;\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n\n    parseHeaderInfo(){\n        if(!this.header) return null;\n        let abs = {\n            built:   /Built On:(.+)/.exec(this.header)[1]?.trim(),\n            author:  /Author:(.+)/.exec(this.header)[1]?.trim(),\n            build:   /Build:(.+)/.exec(this.header)[1]?.trim(),\n            version: /Version:(.+)/.exec(this.header)[1]?.trim(),\n            branch:  /Branch:(.+)/.exec(this.header)[1]?.trim(),\n            commit:  /Commit:(.+)/.exec(this.header)[1]?.trim(),\n            local:   /Local File:(.+)/.exec(this.header)[1]?.trim(),\n        }\n\n        let tryFormats = [\n            [true,  \"ddd MMM DD HH:mm:ss YYYY\"],\n            [false, \"ddd YYYY/MM/DD LTS\"],\n        ];\n\n        for(let [isUTC, format] of tryFormats){\n            let date;\n            if(isUTC){\n                date = moment.utc(abs.built, format)\n            }else{\n                date = moment(abs.built, format)\n            }\n\n            if(!date.isValid()) continue;\n\n            abs.offset = date.fromNow();\n\n            break;\n        }\n\n        return abs;\n    }\n\n    async printRemoteInfo(env){\n        let remote = await Preset.getByName(env, this.name);\n        if(!remote) {\n            log(chalk`Not found on {red ${env}}`);\n            return;\n        }\n        await remote.downloadCode();\n        let i = remote.parseHeaderInfo();\n\n        if(i){\n            log(chalk`\n                ENV: {red ${env}}, updated {yellow ~${i.offset}}\n                Built on {blue ${i.built}} by {green ${i.author}}\n                From ${i.build || \"(unknown)\"} on ${i.branch} ({yellow ${i.commit}})\n                Remote Data Filename \"${this.importName}\"\n            `.replace(/^[ \\t]+/gim, \"\").trim());\n        }else{\n            log(chalk`No header on {red ${env}}`);\n        }\n    }\n\n    async getInfo(envs){\n        await this.printDepends();\n        for(let env of envs.split(\",\")){\n            await this.printRemoteInfo(env);\n        }\n    }\n\n    async printDepends(indent=0, locals=null, seen={}){\n        let includeRegex = /@include [\"'](.+)['\"]/gim;\n        //let includeRegex = /@include/g;\n\n        let includes = [];\n\n        let inc;\n        while(inc = includeRegex.exec(this.code)){\n            includes.push(inc[1]);\n        }\n\n        //let includes = this.code\n            //.split(\"\\n\")\n            //.map(x => includeRegex.exec(x))\n            //.filter(x => x)\n            //.map(x => x[1]);\n        //log(includes);\n\n        if(!locals){\n            locals = new Collection(await loadLocals(\"silo-presets\", Preset));\n        }\n\n        log(Array(indent + 1).join(\" \") + \"- \" + this.name);\n\n        for(let include of includes){\n            if(seen[include]){\n                log(Array(indent + 1).join(\" \") + \"  - (seen) \" + include);\n            }else{\n                seen[include] = true\n                let file = await locals.findByName(include);\n                if(file){\n                    await file.printDepends(indent + 2, locals, seen);\n                }else{\n                    log(Array(indent + 1).join(\" \") + \"  - (miss) \" + include);\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"_nameE2\", \"data.attributes.providerDataFilename\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"importName\", \"data.attributes.providerDataFilename\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\ndefineAssoc(Preset, \"providerName\", \"relationships.providerType.data.name\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async deleteTo(env){\n         for(let preset of this.presets){\n            try{\n                await preset.deleteRemoteVersion(env);\n            }catch(e){log(e);}\n         }\n    }\n    async syncTo(env){\n        let fails = [];\n        for(let preset of this.presets){\n            try{\n                fails.push([preset, await preset.save(env), \"preset\"]);\n            }catch(e){\n                log(chalk`{red Error}`);\n                fails.push([preset, e]);\n            }\n        }\n\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    fails.push([rule, await rule.saveA(env), \"rule create\"]);\n                }catch(e){\n                    log(chalk`{red Error}`);\n                    fails.push([rule, e, \"rule create\"]);\n                }\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    fails.push([rule, await rule.saveB(env), \"rule link\"]);\n                }catch(e){\n                    log(chalk`{red Error}`);\n                    fails.push([rule, e, \"rule link\"]);\n                }\n            }\n        }\n\n        let finalErrors = [];\n        for(let [item, error, stage] of fails){\n            if(!error) continue;\n            log(chalk`Error during {blue ${stage}}: ${item.chalkPrint(false)} {red ${error}}`);\n            finalErrors.push([item, error, stage]);\n        }\n\n        return finalErrors;\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n    async curate(){\n        this.curated = !this.curated;\n\n        return await lib.makeAPIRequest({\n            env: this.remote, path: `/tagNames/${this.id}`, method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        curated: this.curated,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        });\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","import {RallyBase, lib, AbortError, Collection, sleep, zip} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {saveConfig, loadLocals, inquirer, addAutoCompletePrompt, askQuestion, selectPreset, selectLocalMenu, askInput} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nimport SupplyChain from \"./supply-chain.js\";\nimport {categorizeString} from \"./index.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\nlet stagingEmsg = chalk`Not currently on a clean staging branch. Please move to staging or resolve the commits.\nTry {red git status} or {red rally stage edit --verbose} for more info.`;\n\nlet Stage = {\n    async before(args){\n        this.env = args.env;\n        this.args = args;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n\n    setStageId() {\n        let api = configObject.api[this.env];\n        if(!api) return null;\n        return this.stageid = api.stage;\n    },\n\n    // This returns true if the stage failed to load\n    async downloadStage() {\n        this.setStageId();\n\n        if(!this.stageid) {\n            log(chalk`No stage ID found for {green ${this.env}}. Run \"{red rally stage init -e ${this.env} (stage name)}\" or select a different env.`);\n            return true;\n        }\n\n        let preset = await Preset.getById(this.env, this.stageid);\n        await preset.downloadCode();\n\n        this.stageData = JSON.parse(preset.code);\n        this.stagePreset = preset;\n\n        log(chalk`Stage loaded: {green ${this.stagePreset.name}}`);\n    },\n\n    async uploadStage() {\n        if(!this.stagePreset || !this.stageData) {\n            throw \"Assert fail: no existing prestage (you shouldn't see this)\";\n        }\n\n        this.stagePreset.code = JSON.stringify(this.stageData, null, 4);\n\n        await this.stagePreset.uploadCodeToEnv(this.env, false, false);\n    },\n\n    async $init(){\n        let presetName = this.args._.pop();\n\n        let preset = await Preset.getByName(this.env, presetName);\n\n        if(!preset) {\n            log(\"Existing preset stage not found.\");\n            return;\n        }\n\n        log(chalk`Found stage target to init: ${preset.chalkPrint(false)}`);\n\n        configObject.api[this.env].stage = preset.id;\n        configObject[\"ownerName\"] = await askInput(\"What is your name\");\n\n        await saveConfig(configObject, {print: false});\n    },\n\n    async $info(){\n        if(await this.downloadStage()) return;\n\n        if(configObject.rawOutput) return this.stageData;\n\n        log(chalk`Currently Staged Branches: ${this.stageData.stage.length}`);\n        for(let {branch, commit} of this.stageData.stage){\n            log(chalk`    ${branch} {gray ${commit}}`);\n        }\n\n        log(chalk`Currently Claimed Presets: ${this.stageData.claimedPresets.length}`);\n        for(let preset of this.stageData.claimedPresets){\n            log(chalk`    {blue ${preset.name}} {gray ${preset.owner}}`);\n        }\n    },\n\n    async $claim(){\n        await Promise.all([this.downloadStage(), addAutoCompletePrompt()]);\n        let q;\n\n        let opts = [\n            {name: \"Claim a preset\", value: \"add\"},\n            {name: \"Remove a claimed preset\", value: \"rem\"},\n            {name: \"Apply changes\", value: \"done\"},\n            {name: \"Quit without saving\", value: \"quit\"},\n        ];\n\n        //slice to copy\n        let newClaimed = [];\n        let ownerName = configObject[\"ownerName\"]\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let p = await selectPreset({});\n\n                if(!p) continue;\n\n                newClaimed.push(p);\n            }else if(q.type === \"rem\") {\n                let objsMap = newClaimed.map(x => ({\n                    name: x.chalkPrint(true),\n                    value: x,\n                }));\n\n                for(let obj of this.stageData.claimedPresets) {\n                    objsMap.push({\n                        name: obj.name,\n                        value: obj.name,\n                    });\n                }\n\n                let p = await selectLocalMenu(objsMap, \"preset\", true);\n\n                if(!p) continue;\n                if(typeof(p) == \"string\") {\n                    this.stageData.claimedPresets = this.stageData.claimedPresets.filter(x => x.name != p);\n                }else{\n                    newClaimed = newClaimed.filter(x => x !== p);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n\n        for(let newClaim of newClaimed) {\n            this.stageData.claimedPresets.push({\n                name: newClaim.name,\n                owner: ownerName,\n            });\n        }\n\n        await this.uploadStage();\n    },\n\n    async getBranches(){\n        let branches = await spawn({noecho: true}, \"git\", [\"branch\", \"-la\", \"--color=never\"]);\n        if(branches.exitCode !== 0) {\n            log(\"Error in loading branches\", branches);\n        }\n\n        let branchList = branches.stdout\n            .split(\"\\n\")\n            .map(x => x.trim())\n            .filter(x => x.startsWith(\"remotes/origin\"))\n            .map(x => {\n                let lastSlash = x.lastIndexOf(\"/\");\n                if(lastSlash !== -1){\n                    x = x.slice(lastSlash + 1);\n                }\n\n                return x;\n            });\n\n        if(!await this.checkCurrentBranch()) {\n            log(stagingEmsg);\n            return;\n        }\n\n        log(\"Finished retreiving branches.\");\n\n        return branchList;\n    },\n\n    async runGit(oks, ...args) {\n        if(typeof(oks) === \"number\") {\n            oks = [oks];\n        }else if(typeof(oks) === \"undefined\") {\n            oks = [0];\n        }\n\n        let g = await spawn({noecho: true}, \"git\", args);\n        if(configObject.verbose) log(`git ${args.join(\" \")}`);\n\n        if(!oks.includes(g.exitCode)) {\n            log(g.stderr);\n            log(g.stdout);\n            throw new AbortError(chalk`Failed to run git ${args} {red ${g.exitCode}}`);\n        }\n\n        return [g.stdout, g.stderr]\n    },\n\n    filterwith(list) {\n        return async (sofar, input) => {\n            return list.filter(x => input ? (x.name || x).toLowerCase().includes(input.toLowerCase()) : true);\n        }\n    },\n\n    //finite state machine for inputting branch changes\n    async editFSM(allBranches, newStagedBranches) {\n\n        let q;\n\n        let opts = [\n            {name: \"Add a branch to the stage\", value: \"add\"},\n            {name: \"Remove a branch from the stage\", value: \"rem\"},\n            {name: \"Finalize stage\", value: \"done\"},\n            {name: \"Quit without saving\", value: \"quit\"},\n        ];\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let qqs = allBranches.slice(0); //copy the branches\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to add?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.add(q.branch);\n                }\n            }else if(q.type === \"rem\") {\n                let qqs = Array.from(newStagedBranches);\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to remove?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.delete(q.branch);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n    },\n\n\n\n    async $edit(){\n        let needsInput = !this.args.a && !this.args.r && !this.args.add && !this.args.remove;\n        let clean = this.args.clean;\n\n        let [branches, stage, _] = await Promise.all([\n            this.getBranches(),\n            this.downloadStage(),\n            !needsInput || addAutoCompletePrompt()\n        ]);\n\n        if(stage) return;\n\n        if(!branches) return;\n\n        //copy the branches we started with\n        let newStagedBranches = new Set();\n        let oldStagedBranches = new Set();\n        for(let {branch} of this.stageData.stage){\n            if(!clean) {\n                newStagedBranches.add(branch);\n            }\n            oldStagedBranches.add(branch);\n        }\n\n        if(needsInput) {\n            await this.editFSM(branches, newStagedBranches);\n        } else {\n            let asarray = arg => {\n                if(!arg) return [];\n                return Array.isArray(arg) ? arg : [arg];\n            }\n\n            for(let branch of [...asarray(this.args.a), ...asarray(this.args.add)]) {\n                if(!branches.includes(branch)){\n                    throw new AbortError(`Invalid branch ${branch}`);\n                }\n                newStagedBranches.add(branch);\n            }\n            for(let branch of [...asarray(this.args.r), ...asarray(this.args.remove)]) {\n                if(!branches.includes(branch)){\n                    throw new AbortError(`Invalid branch ${branch}`);\n                }\n                newStagedBranches.delete(branch);\n            }\n        }\n\n        const difference = (s1, s2) => new Set([...s1].filter(x => !s2.has(x)));\n        const intersect = (s1, s2) => new Set([...s1].filter(x => s2.has(x)));\n\n        log(\"Proposed stage changes:\");\n        for(let branch of intersect(newStagedBranches, oldStagedBranches)){\n            log(chalk`   ${branch}`);\n        }\n        for(let branch of difference(newStagedBranches, oldStagedBranches)){\n            log(chalk`  {green +${branch}}`);\n        }\n        for(let branch of difference(oldStagedBranches, newStagedBranches)){\n            log(chalk`  {red -${branch}}`);\n        }\n\n        let ok = this.args.y || await askQuestion(\"Prepare these branches for deployment?\");\n        if(!ok) return;\n\n        //just to make sure commits/branches don't get out of order\n        newStagedBranches = Array.from(newStagedBranches);\n\n        try {\n            let [diffText, newStagedCommits] = await this.doGit(newStagedBranches, this.stageData.stage.map(x => x.commit));\n\n            await this.runRally(diffText);\n\n            this.stageData.stage = Array.from(zip(newStagedBranches, newStagedCommits)).map(([branch, commit]) => ({branch, commit}));\n\n             await this.uploadStage();\n        }catch(e){\n            if(e instanceof AbortError) {\n                await this.runGit([0], \"reset\", \"--hard\", \"HEAD\");\n                await this.runGit([0], \"checkout\", \"staging\");\n                throw e;\n            }\n\n            throw e; //TODO \n        }finally{\n            await this.runGit([0], \"checkout\", \"staging\");\n        }\n\n    },\n\n    async $pull() {\n        if(await this.downloadStage()) return;\n        await this.makeOldStage(this.stageData.stage.map(x => x.commit), `rallystage-${this.env}`);\n    },\n\n\n    async makeNewStage(newStagedBranches) {\n        let newStagedCommits = [];\n\n        await this.runGit([0, 1], \"branch\", \"-D\", \"RALLYNEWSTAGE\");\n        await this.runGit([0], \"checkout\", \"-b\", \"RALLYNEWSTAGE\");\n        for(let branch of newStagedBranches) {\n            let originName = `origin/${branch}`\n            let [_, merge] = await this.runGit([0], \"merge\", \"--squash\", originName);\n            let [commit, _2] = await this.runGit([0, 1], \"commit\", \"-m\", `autostaging: commit ${branch}`);\n\n            if(commit.includes(\"working tree clean\")){\n                log(chalk`{yellow Warning:} working tree clean after merging {green ${branch}}, please remove this from the stage`);\n            }\n\n            let hash = await spawn({noecho: true}, \"git\", [\"log\", \"--format=oneline\", \"--color=never\", \"-n\", \"1\", originName]);\n            if(hash.exitCode !== 0) {\n                throw new AbortError(`Failed to get commit hash for branch, ${branch}`);\n            }\n            newStagedCommits.push(hash.stdout.split(\" \")[0]);\n        }\n\n        return newStagedCommits;\n    },\n\n    async makeOldStage(oldStagedCommits, name) {\n        await this.runGit([0], \"checkout\", \"staging\");\n        await this.runGit([0, 1], \"branch\", \"-D\", name);\n        await this.runGit([0], \"checkout\", \"-b\", name);\n        for(let branch of oldStagedCommits) {\n            let [err, _] = await this.runGit([0, 1], \"merge\", branch);\n            if(err.includes(\"Automatic merge failed\")){\n                log(chalk`{red Error:} ${branch} failed to merge during auto-commit`)\n                if(this.args.force){\n                    await this.runGit([0], \"merge\", \"--abort\");\n                }else{\n                    throw new AbortError(\"Not trying to merge other branches\");\n                }\n            }\n        }\n    },\n\n    async checkCurrentBranch() {\n        let expected = `On branch staging\nYour branch is up to date with 'origin/staging'.\n\nnothing to commit, working tree clean`;\n\n        let status = await spawn({noecho: true}, \"git\", [\"status\"]);\n        let trimmed = status.stdout.trim();\n\n        if(configObject.verbose){\n            log(\"expected:\");\n            log(chalk`{green ${expected}}`);\n            log(\"got:\");\n            log(chalk`{red ${trimmed}}`);\n        }\n\n        return trimmed === expected;\n    },\n\n    async doGit(newStagedBranches, oldStagedCommits) {\n        if(!await this.checkCurrentBranch()) {\n            log(stagingEmsg);\n            return;\n        }\n\n        let newStagedCommits = await this.makeNewStage(newStagedBranches);\n        await this.makeOldStage(oldStagedCommits, \"RALLYOLDSTAGE\");\n\n        await this.runGit([0], \"checkout\", \"RALLYNEWSTAGE\");\n        let diff = await spawn({noecho: true}, \"git\", [\"diff\", \"RALLYOLDSTAGE..HEAD\", \"--name-only\"]);\n        if(diff.exitCode !== 0) { \n            log(diff);\n            throw new Error(\"diff failed\");\n        }\n\n        let diffText = diff.stdout;\n\n        return [diffText, newStagedCommits];\n    },\n\n    async $testrr() {\n        let diff = `silo-presets/Super Movie Data Collector.py\n        silo-presets/Super Movie Post Work Order.py\n        silo-presets/Super Movie Task Handler.py`;\n\n\n        await this.runRally(diff);\n    },\n\n    async runRally(diffText) {\n        let set = new Set();\n        for(let file of diffText.trim().split(\"\\n\")){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n\n        let chain = new SupplyChain();\n\n        chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        chain.notifications = new Collection([]);\n\n        if(chain.rules.arr.length + chain.presets.arr.length === 0){\n            log(chalk`{blue Info:} No changed prests, nothing to deploy`);\n            return\n        }\n\n        chain.log();\n\n        let hasClaimed = false;\n        for(let preset of chain.presets) {\n            for(let claim of this.stageData.claimedPresets){\n                if(preset.name == claim.name) {\n                    hasClaimed = true;\n                    log(chalk`{yellow Claimed preset}: {blue ${claim.name}} (owner {green ${claim.owner}})`);\n                }\n            }\n        }\n\n        if(hasClaimed){\n            throw new AbortError(\"Someone has a claimed preset in the deploy\");\n        }\n\n\n        let ok = this.args.y || await askQuestion(\"Deploy now?\");\n        if(!ok) throw new AbortError(\"Not deploying\");\n\n        await chain.syncTo(this.env);\n    },\n\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help stage}'`);\n    },\n}\n\nexport default Stage;\n","require(\"source-map-support\").install();\n\nimport {lib, UnconfiguredEnvError, IndexObject} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\nimport {default as Preset} from \"./preset.js\";\nimport {default as Rule} from \"./rule.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\nexport {default as Stage} from \"./stage.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nimport fs from \"fs\";\nimport {configObject} from \"./config.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            let repodir = configObject.repodir;\n            if(repodir){\n                try{\n                    fs.lstatSync(repodir).isDirectory();\n                    return [true, 0];\n                }catch(e){\n                    return [false, 0];\n                }\n            }else{\n                throw new UnconfiguredEnvError();\n            }\n        }\n        let start = new Date();\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 2000});\n        let timed = new Date() - start;\n        return [result.statusCode, timed];\n    },\n}\n\nexport async function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"copy\" | \"move\" | \"delete\",\n\n            \"source\": {\n                \"optional\": true | false,\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"labels\": [\"<label>\" | \"*\", ],\n                    \"tags\": [\"<tag>\", ],\n                    \"storageSet\": [\"<storage location name>\" | \"*\", ],    # only valid for move & delete tasks\n                    \"expandCollections\": true | false\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>/<path>/<file>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            },\n\n            \"destination\": {\n                \"name\": \"<path within the storage location>/<filename>\",\n                \"overwrite\": \"never\" | \"notInAnyAsset\" | \"notInOtherAsset\" | \"always\",\n                \"storageMetadata\": {\"<key>\": \"<value>\",...} | \"<sourceStorageMetadata>\",\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"storage\": \"<storage location name>\",\n                    \"newLabel\": \"<fileLabel>\",\n                    \"newTags\": [\"<tag>\", \"<tag>\"],\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            }\n        },\n\n        {\n            <another task>\n        },\n\n        {\n            <another task>\n        },\n\n        ...\n\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here\n\nif ({{DYNAMIC_PRESET_DATA}}).get(\"uploadPresetName\") == \"{name}\":\n    # Unit test code here: This will run every time this preset is uploaded.\n\n    print(\"Unit tests for {name}\"\n\n`, SdviEvalPro: `'''\nname: {name}\n'''\n\nimport rally\n\ndef eval_main(context):\n    # code here`,\n};\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag, Stage,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n    IndexObject,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig, loadConfigFromArgs} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace, findLineInFile, getInfo as getTraceInfo} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        if(!args[\"only-metadata\"]) preset.saveLocalFile();\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $deleteRemote(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n\n        log(chalk`Deleting ${preset2.chalkPrint(true)}.`);\n\n        log(await preset2.delete());\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async $info(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let file = this.files[0];\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        await preset.getInfo(args.env);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset({canSelectNone: false});\n        let passNext = await configHelpers.selectRule({purpose: \"'On Exit OK'\"});\n        let errorNext = await configHelpers.selectRule({purpose: \"'On Exit Error'\"});\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule({purpose: \"dynamic next\"})){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, args._.shift());\n    },\n\n    async $curate(args){\n        let tag = await Tag.getByName(this.env, args._.shift())\n        await tag.curate();\n    },\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n\n        }else if(args[\"delete\"]){\n            if(Array.isArray(args[\"delete\"])){\n                for(let to of args[\"delete\"]){\n                    await this.chain.deleteTo(to);\n                }\n            }else{\n                await this.chain.deleteTo(args[\"delete\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            let anyDifferent = false;\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                preset.code      = preset.code.replace(/[\\r\\n ]/, \"\");\n                otherPreset.code = (otherPreset.code || \"\").replace(/[\\r\\n ]/, \"\");\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n\n                    anyDifferent = true\n                }\n            }\n\n            if(!anyDifferent) {\n                log(\"All presets are the same\");\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await allIndexBundle.categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    @helpText(\"Prepare an environment to hold specific branches\")\n    @usage(\"rally help stage\")\n    async stage(args){\n        return subCommand(Stage)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list, deleteRemote\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment] [post actions]`)\n    @param(\"action\", \"The action to perform. Can be calc or make.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain. If this is make, then supply '-' to read from stdin\")\n    @param(\"post actions\", \"The action to perform on the created supply chain. See commands below\")\n    @arg(\"-e\", \"--env\", \"(calc only) environment to do the calculation on\")\n    @arg(\"~\", \"--diff\", \"(post action) Use as `--diff [env]`. List all files with differences on the given env.\")\n    @arg(\"~\", \"--to\", \"(post action) Use as `--to [env]`. Upload all objects.\")\n    @arg(\"~\", \"--delete\", \"(post action) Use as `--delete [env]`. The reverse of uploading. Only presets are supported right now.\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list, create, or curate.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n        let ln = args._.shift();\n        if(!ln){\n            log(\"is trace\");\n            let traceInfo = await parseTrace(args.env, jobId);\n\n            for(let line of traceInfo){\n                if(typeof(line) == \"string\"){\n                    log(chalk.red(line));\n                }else{\n                    printOutLine(line);\n                }\n            }\n        }else{\n            log(\"is ln\");\n            let {renderedPreset} = await getTraceInfo(args.env, jobId);\n            return findLineInFile(renderedPreset, Number(ln));\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        await configHelpers.saveConfig(newConfigObject, {ask: !args.y && !args.set});\n    },\n\n    async silo(){\n        let s = new Silo(\"UAT\");\n\n        await s.grep();\n    },\n\n    @helpText(`create/modify asset or files inside asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Actions are create, delete, launch, addfile, metadata, show, patchMetadata, and launchEvalute, deleteFile, downloadFile, grep, analyze. You can supply multiple actions to chain them.`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`~`,  `--anon`,       chalk`Supply this if no asset is needed (used to lauch anonymous workflows)`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch and launchEvalute)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    @arg(`~`,  `--metadata`,   chalk`Metadata to use with patchMetadata. Can be string, or {white @path/to/file} for a file. Data must contain a top level key Metadata, or Workflow. Metadata will be pached into METADATA. Workflow will be patched into WORKFLOW_METADATA(not currently available)`)\n    @arg(`~`,  `--priority`,   chalk`set the priority of all launched jobs`)\n    @arg(`~`,  `--new-name`,   chalk`set the new name`)\n    @arg(`~`,  `--target-env`, chalk`migrate to the env (when using migrate)`)\n    @arg(`~`,  `--to-folder`,  chalk`Folder to download to when using downloadFile. If no folder is given, writes to stdout.`)\n    @arg(`~`,  `--artifact`,   chalk`This is the artifact to grep on. Defaults to trace. Values are \"trace\", \"preset\", \"result\", \"error\", \"output\"`)\n    @arg(`~`,  `--on`,         chalk`alias for artifact`)\n    @arg(`~`,  `--name-only`,  chalk`Only show preset name and number of matches when greping`)\n    //@arg(`~`,  `--any`,        chalk`allows grep to grep for any preset/provider, not just sdviEval`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        function getInitData(args, launchArg){\n            let initData = arrayify(args[\"init-data\"], launchArg);\n            if(initData && initData.startsWith(\"@\")){\n                let initDataFile = initData.slice(1);\n                if(initDataFile === \"-\"){\n                    log(chalk`Reading init data from {grey stdin}`);\n                    initData = readFileSync(0, \"utf-8\");\n                }else{\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initDataFile, \"utf-8\");\n                }\n            }\n\n            return initData\n        }\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, {initData, priority: args.priority})\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, {initData, priority: args.priority})\n                }\n                launchArg++;\n            }else if(arg === \"launchEvaluate\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n\n                let jobData;\n                let ephemeralEval = false;\n                let p;\n                if(jobName.startsWith(\"@\")){\n                    ephemeralEval = true;\n                    jobData = readFileSync(jobName.slice(1));\n                }else{\n                    p = await Preset.getByName(env, jobName);\n                    if(!p){\n                        throw new AbortError(`Cannot launch preset ${jobName}, does not exist (?)`);\n                    }else{\n                        log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                    }\n                }\n\n\n                if(ephemeralEval){\n                    throw new AbortError(\"could not start\");\n                    await Asset.startEphemeralEvaluateIdeal(env, p.id, initData)\n                }else{\n                    await asset.startEvaluate(p.id, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\" || arg == \"load\"){\n                if(asset.lite) asset = await Asset.getById(env, asset.id);\n                if(arg == \"show\") log(asset);\n            }else if(arg === \"metadata\" || arg === \"md\"){\n                log(await asset.getMetadata(true));\n            }else if(arg === \"migrate\"){\n                await asset.migrate(args[\"target-env\"]);\n            }else if(arg === \"patchMetadata\"){\n                let initData = arrayify(args[\"metadata\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                initData = JSON.parse(initData);\n\n                await asset.patchMetadata(initData);\n            }else if(arg === \"rename\"){\n                let newName = args[\"new-name\"];\n                let oldName = asset.name;\n                await asset.rename(newName);\n                log(chalk`Rename: {green ${oldName}} -> {green ${newName}}`);\n            }else if(arg === \"downloadfile\" || arg === \"downloadFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                await asset.downloadFile(label, args[\"to-folder\"]);\n            }else if(arg === \"deletefile\" || arg === \"deleteFile\" || arg === \"removefile\" || arg === \"removeFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                let result = await asset.deleteFile(label);\n                if(!result) {\n                    log(`Failed to delete file ${label}`);\n                }\n            }else if(arg === \"grep\") {\n                await asset.grep(args._.pop(), {\n                    artifact: args.on || args.artifact || \"trace\",\n                    nameOnly: args[\"name-only\"],\n                    ordering: null,\n                });\n            }else if (arg === \"viewapi\") {\n                await asset.replay();\n            }else if(arg === \"analyze\") {\n                await asset.analyze();\n            }else if(arg === \"listJobs\") {\n                await asset.listJobs();\n            }else{\n                log(`No usage found for ${arg}`);\n            }\n        }\n        if(configObject.rawOutput && !configObject.script) return asset;\n    },\n\n    async pullList(args){\n        let list = await getFilesFromArgs(args);\n\n        let chain = new SupplyChain();\n\n        chain.rules = new Collection([]);\n        chain.presets = new Collection([]);\n        chain.notifications = new Collection([]);\n\n        let files = await spawn({noecho: true}, \"git\", [\"ls-files\"]);\n        files = files.stdout.split(\"\\n\");\n        log(files);\n\n        let parse = /(\\w+) (.+)/;\n        for(let item of list) {\n            let [_, type, name] = parse.exec(item);\n\n            if(type == \"Rule\"){\n                let rule = await Rule.getByName(\"UAT\", name);\n                rule._localpath = files.filter(x => x.includes(name) && x.includes(\"rules\"))[0];\n                rule.path = rule._localpath;\n                log(rule._localpath);\n                chain.rules.arr.push(rule);\n            }else if(type == \"Preset\"){\n                let preset = await Preset.getByName(\"UAT\", name);\n                preset._localpath = files.filter(x => x.includes(name) && x.includes(\"presets\"))[0];\n                preset.path = preset._localpath;\n                log(preset._localpath);\n                chain.presets.arr.push(preset);\n            }\n        }\n\n        await chain.log();\n\n        //let maybeFile = files.filter(\n\n        await chain.syncTo(\"LOCAL\");\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async getJobs(args){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: \"presetName=DCTC Add Element US Checkin\",\n            },\n        });\n\n        log(req.map(x => x.relationships.asset.data.id).join(\"\\n\"))\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test4(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                filter: `createdBefore=${Date.now() - 1000 * 160 * 24 * 60 * 60},createdSince=${Date.now() - 1000 * 170 * 24 * 60 * 60}`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n\n    async test5(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: `state=Queued,presetName=E2 P4101 - DNE Compliance Edit - US Output Deal - Edit WorkOrder`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async deleteOmneons(args){\n        let id = args._.shift();\n\n        let asset;\n        if(Number(id)) {\n            asset = await Asset.getById(\"PROD\", Number(id));\n        }else{\n            asset = await Asset.getByName(\"PROD\", id);\n        }\n\n        log(asset);\n        let f = await asset.getFiles();\n\n        for(let file of f){\n            if(file.label.includes(\"Omneon\")){\n                log(`removing ${file.label}`);\n                await file.delete();\n            }\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset({canSelectNone: false});\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule({canSelectNone: false});\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => (ev.resource == \"Rule\" || ev.resource == \"WorkflowRule\");\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        elog(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n\n    async gf(args){\n        let a = await Asset.getById(args.env, args._.shift());\n        let f = await a.getFiles();\n        log(f);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        for await (let object of ParIter.keepalive().generator()){\n            log(object);\n        };\n    },\n\n    async test2(){\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`Rally Tools {yellow v${packageVersion}} CLI\\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    let envs = new Set([\"LOCAL\", \"UAT\", \"DEV\", \"PROD\", \"QA\", ...Object.keys(configObject.api)]);\n\n    let proms = [];\n    for(let env of envs){\n        proms.push({env, prom: funcs.testAccess(env)});\n    }\n\n    //API Access tests\n    for(let {env, prom} of proms){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let [result, timer] = await prom;\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK} {gray ${timer} ms}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (???)}`;\n                }\n            }else if(e.error?.code === \"ETIMEDOUT\"){\n                resultStr = chalk`{red Timeout (>2s)}`;\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error}}`;\n            }else{\n                resultStr = chalk`{red Internal Error: (oh no!)}`;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(typeof(argv.config) === \"string\"){\n        loadConfig(argv.config);\n    }else if(typeof(argv.config) === \"object\") {\n        loadConfigFromArgs(argv);\n    }else{\n        loadConfig();\n    }\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"script\"]){\n        configObject.script = true;\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    if(argv[\"update-immutable\"]){\n        configObject.updateImmutable = true;\n    }\n\n    if(argv[\"skip-header\"]){\n        configObject.skipHeader = true;\n    }\n\n    configObject.globalProgress = argv[\"show-progress\"] || false;\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n                process.exit(1);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n\n    process.exit(0);\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n        process.exit(1);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    loadConfig();\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","write","global","noecho","on","chunk","stdin","end","time","timestr","exitCode","log","console","process","elog","error","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","trim","AbortError","indexPath","opts","maxParallelRequests","index","IndexObject","fullResults","clearProgress","size","globalProgress","repeat","drawProgress","i","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","funcs","f","indexPathFast","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","ResoultionError","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","length","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","item","remote","metastring","data","endpoint","included","push","getByName","filter","getAllPreCollect","getAll","datas","pageSize","sort","all","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","links","organization","sleep","setTimeout","zip","items","iters","r","next","done","value","unordered","proms","encapsulatedPromises","ind","result","race","undefined","range","linkToPage","page","baselink","initializeFirstRequest","initOpts","allResults","observe","noCollect","first","currentPageRequest","hasHit404","getNextRequestLink","getNextRequestPromise","promiseID","cancel","willCancel","chunksize","currentPromises","requestResult","orderedObjectKeys","keys","newDict","Array","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Notification","notifications","home","colon","siloLike","pathTransform","slice","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","Rule","subProject","pathResolve","ignoreMissing","missing","subproject","newShell","transitions","updatedAt","createdAt","isGeneric","acclimatize","preset","Preset","pNext","eNext","proType","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","localpath","uploadRemote","immutable","idMap","res","patchStrip","starred","passMetadata","errorMetadata","_localpath","join","repodir","sub","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","require","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","provider","loadLocals","Class","basePath","objs","basename","selectLocal","typeName","canSelectNone","objsMap","selectLocalMenu","none","selectPreset","purpose","selectRule","question","def","ok","saveConfig","newConfigObject","ask","print","newConfig","mode","File","parent","sizeHR","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","values","instances","round","units","unitIdx","instancesList","n","assign","rslURL","instance","storageLocationName","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","match","exec","includeFilename","printOutLine","eLine","getArtifact","artifact","jobid","art","catch","_","getInfo","trace","output","tracelineRegex","parseTraceLine","info","full","parsed","content","absoluteTime","presetName","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","Asset","lite","metadata","normalizeMetadata","newMetadata","md","getMetadata","forceRefresh","req","patchMetadata","Workflow","fakePreset","startEphemeralEvaluateIdeal","Metadata","createNew","getFiles","refresh","_files","addFile","label","fileuris","startWorkflow","jobName","initData","priority","startAnonWorkflow","dynamicPresetData","isBinary","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","dots","self","state","startEvaluate","presetid","rename","newName","migrate","targetEnv","_mdPromise","targetAsset","fileCreations","possibleInstances","inst","addFileInstance","tagList","newInst","lastModified","random","asset","fileData","newFile","script","downloadFile","destFolder","files","c","filePath","deleteFile","listJobs","jobs","rule","workflowRule","artifactsList","reorderPromises","p","k","e1","_a","e2","_b","completedAt","evals","zipped","grep","nameOnly","ordering","highlight","parts","parseLine","lines","matching","rawOutput","moment","replay","colorRequest","worstRegexEver","matchAll","groups","analyze","exists","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","localmetadatapath","systemManaged","fromMetadata","providerType","realpath","getLocalPath","ptype","test","regex","matches","runTest","saveLocal","saveLocalMetadata","saveLocalFile","shouldTest","uploadCodeToEnv","save","saved","downloadCode","headerRegex","hasHeader","header","substring","_code","v","endsWith","name_regex","findStringsInCode","strings","str","RegExp","_path","_nameOuter","_nameInner","updateImmutable","convertImports","convertIncludes","isEval","providerName","uploadPresetData","skipHeader","headerText","Date","format","grabMetadata","deleteRemoteVersion","includeMetadata","uploadResult","dt","ptid","oldName","providerDataFilename","parseHeaderInfo","abs","built","author","build","version","branch","commit","local","tryFormats","isUTC","date","utc","isValid","offset","fromNow","printRemoteInfo","importName","printDepends","indent","locals","seen","includeRegex","inc","include","SupplyChain","startingRule","stopRule","downloadPresetCode","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","add","neededPresets","neededRules","notif","verbose","deleteTo","syncTo","fails","finalErrors","stage","User","Tag","prefix","curated","create","notCurated","curate","stagingEmsg","Stage","before","setStageId","stageid","downloadStage","stageData","stagePreset","uploadStage","$init","$info","claimedPresets","owner","$claim","newClaimed","ownerName","filterwith","newClaim","getBranches","branches","branchList","lastSlash","lastIndexOf","checkCurrentBranch","runGit","oks","g","list","editFSM","allBranches","newStagedBranches","qqs","$edit","needsInput","clean","oldStagedBranches","asarray","difference","s1","s2","has","intersect","y","diffText","newStagedCommits","doGit","runRally","$pull","makeOldStage","makeNewStage","originName","merge","_2","hash","oldStagedCommits","err","expected","status","trimmed","diff","$testrr","categorizeString","chain","hasClaimed","claim","unknown","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","lstatSync","isDirectory","timed","defaultSubproject","ret","SdviContentMover","SdviEvaluate","SdviEvalPro","argv","argparse","string","boolean","protect","alias","printHelp","help","getFilesFromArgs","lastArg","shift","getStdin","presetsub","$grab","remo","$create","configHelpers","baseCode","$list","attach","$upload","$deleteRemote","preset2","$diff","tempfile","temp","extension","ptr","command","stdio","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","tagsub","tags","tag","$curate","supplysub","$calc","stopName","stop","postAction","to","otherPresets","printPresets","otherPreset","anyDifferent","$make","hints","hint","allIndexBundle","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","ln","traceInfo","getTraceInfo","ident","pro","econfig","raw","completions","prop","helperName","silo","s","Silo","uuid","digits","pow","anon","launchArg","fileArg","arrayify","getInitData","initDataFile","jobData","ephemeralEval","pullList","checkSegments","segments","userMetaData","reduce","lastSegment","curSegment","startTime","endTime","getJobs","listAssets","noRelationships","listSegments","segs","test4","things","test5","test2","wfr","wfrm","test3","deleteOmneons","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","timedist","audit2","findIDs","getAssets","callid","lastResult","lastCall","assets","gf","ParIter","generator","noop","unknownCommand","noCommand","packageVersion","prom","resultStr","timer","$main","enabled","level","defaultEnv","_old","white","exit","main","stack","module","exports"],"mappings":"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"}