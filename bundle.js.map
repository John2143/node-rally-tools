{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/file.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/index.js","src/trace.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.log(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) await opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    static async keepalive(func, inputData, {chunksize, observe = async _=>_} = {}){\n        let total = inputData ? inputData.length : func.length;\n        let i = 0;\n        let createPromise = () => {\n            let ret;\n            if(i >= total) return [];\n            if(inputData){\n                ret = [i, func(inputData[i])];\n            }else{\n                ret = [i, func[i]()];\n            }\n\n            i++;\n            return ret;\n        }\n\n        let values = [];\n        let finished = 0;\n        process.stderr.write(\"\\n\")\n        let threads = [...this.range(20)].map(async (whichThread) => {\n            while(true){\n                let [i, currentPromise] = createPromise();\n                if(i == undefined) break;\n                values[i] = await observe(await currentPromise);\n                this.drawProgress(++finished, total);\n            }\n        });\n        await Promise.all(threads);\n        process.stderr.write(\"\\n\")\n\n\n        return values;\n    }\n\n    static *range(start, end){\n        if(end === undefined){\n            end = start;\n            start = 0;\n        }\n        while(start < end) yield start++;\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        //Create a copy of the options in case we need to have a special first request\n        let start = opts.start || 1;\n        let initOpts = {...opts};\n        if(opts.pageSize){\n            initOpts.qs = {...opts.qs};\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\n        }\n\n        let json = await this.makeAPIRequest(initOpts);\n\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = await this.keepalive(\n            this.makeAPIRequest,\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\n                .map(i => ({...opts, path_full: linkToPage(i)})),\n            {chunksize: opts.chunksize, observe: opts.observe},\n        );\n        if(start == 1){\n            allResults.unshift(json);\n        }\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(){\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        providerData: Buffer.from(preset.code, \"binary\").toString(\"base64\"),\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\");\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(\".\");\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(300);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() !== \"NOUPLOAD\"){\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets/${id}/providerData`,\n                body: this.code, method: \"PUT\", fullResponse: true, timeout: 5000\n            });\n            write(chalk`code up {yellow ${res.statusCode}}, `);\n        }else{\n            write(chalk`code skipped {yellow :)}, `);\n        }\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\n//TODO fix export from index\n//export {default as Trace} from \"./trace.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nasync function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function parseTrace(env, jobid){\n\n    let trace = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/trace`,\n    }).catch(x => null);\n\n    let renderedPreset = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/preset`,\n    }).catch(x => null);\n\n    let result = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/result`,\n    }).catch(x => null);\n\n    let error = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/error`,\n    }).catch(x => null);\n\n    let output = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/output`,\n    }).catch(x => null);\n\n\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error])\n\n    let fileName = '';\n    let lineNumber = -1;\n\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        lineNumber = /^[\\w ]+:(\\d+):/g.exec(errLine);\n        if(lineNumber && lineNumber[1]){\n            errorList.push(await findLineInFile(renderedPreset, lineNumber[1]));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine};\nexport default Trace;\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"move\",\n            \"source\": {\n                \"labels\": [ \"MyLabel\" ],\n                \"tags\": [ \"segmented\" ]\n                \"storageSet\": [ \"*\", \"-OtherStorageBucket\" ],\n\n            },\n            \"destination\": {\n                \"storage\": \"Archive\",\n                \"newLabel\": \"myNewLabel\",\n                \"overwrite\": \"always\"\n            }\n        }\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`,\n};\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class){\n    addAutoCompletePrompt();\n    let basePath = configObject.repodir;\n    let f = await readdir(basePath);\n    let objs = f.filter(name => name.includes(path)).map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset(purpose = \"preset\"){\n    return selectLocal(\"silo-presets\", purpose, Preset);\n}\nexport async function selectRule(purpose = \"rule\"){\n    return selectLocal(\"silo-rules\", purpose, Rule);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset();\n        let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\n        let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule(\"dynamic next\")){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, \"testTag\");\n    }\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n                }\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list or create.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n\n        let traceInfo = await parseTrace(args.env, jobId);\n\n        for(let line of traceInfo){\n            if(typeof(line) == \"string\"){\n                log(chalk.red(line));\n            }else{\n                printOutLine(line);\n            }\n        }\n\n        return true;\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    @helpText(`create/modify asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Options are create, delete, launch, addfile. You can supply multiple actions to chain them`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = arrayify(args[\"init-data\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, initData)\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\"){\n                log(asset);\n            }\n        }\n        if(configObject.rawOutput) return asset;\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset();\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule();\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Rule\";\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        log(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        let asset = await Asset.getByName(\"UAT\", args.name);\n        log(asset);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"LOCAL\", \"DEV\", \"UAT\", \"QA\", \"PROD\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error.errno}}`;\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","sleep","setTimeout","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","canBeDownloaded","getContent","force","contentLink","instances","round","Asset","metadata","normalizeMetadata","newMetadata","md","lite","createNew","req","delete","getFiles","addFile","label","fileuris","Array","startWorkflow","jobName","initData","startAnonWorkflow","startEphemeralEvaluateIdeal","preset","provider","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","self","state","startEvaluate","presetid","home","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","asset","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","uploadPresetData","trim","grabMetadata","includeMetadata","shouldTest","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rawOutput","syncTo","rule","User","Tag","prefix","curated","create","notCurated","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","index","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","includeFilename","printOutLine","eLine","parseTrace","jobid","trace","catch","error","output","errorLines","shouldBreak","tr","errorList","errLine","SdviContentMover","SdviEvaluate","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","basePath","objsMap","none","selectPreset","purpose","selectRule","question","def","ok","argv","argparse","string","boolean","protect","alias","printHelp","help","substring","getFilesFromArgs","lastArg","shift","files","getStdin","stdin","presetsub","before","$grab","full","remo","$create","configHelpers","baseCode","$list","attach","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","categorizeString","defaultSubproject","tagsub","tags","tag","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","traceInfo","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","anon","launchArg","fileArg","arrayify","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","listAssets","noRelationships","listSegments","segs","test2","wfr","wfrm","test3","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","moment","date","format","timedist","fromNow","audit2","findIDs","getAssets","callid","lastResult","lastCall","Date","content","assets","noop","unknownCommand","noCommand","packageVersion","resultStr","errno","$main","enabled","level","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}