{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/preset.js","src/rule.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject = null;\ntry{\n    let json = readFileSync(configFile);\n    configObject = JSON.parse(json);\n}catch(e){\n    if(e.code == \"ENOENT\"){\n        //ok, they should probably make a config\n    }else{\n        throw e;\n    }\n}\n\nexport {configObject};\n","import rp from \"request-promise\";\nimport chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    static async makeAPIRequest({env, path, path_full, payload, body, json = true, method = \"GET\", qs, headers = {}, fullResponse = false}){\n        //Keys are defined in enviornment variables\n        let config = configObject.api[env];\n        if(!config) {\n            return false;\n        };\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n\n        path = path_full || rally_api + path;\n        body = body || payload && JSON.stringify(payload);\n\n        if(global.logAPI){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            auth: {bearer: rally_api_key},\n            headers: {\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n        let response = await rp(requestOptions);\n\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions);\n        }\n        if(fullResponse){\n            return response;\n        }else if(json){\n            return JSON.parse(response.body);\n        }else{\n            return response.body;\n        }\n    }\n    //Index a json endpoint that returns a {links} field.\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}\n{green ${JSON.stringify(opts)}}\n{reset ${response.body}}\n        `);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n","\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n","import fs from \"fs\";\nimport {lib, AbortError} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\n\nlet envs = {};\nexport default class Preset{\n    constructor({path, remote, data}){\n        this.remote = remote\n        if(!this.remote){\n            this.path = path;\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} e.message`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            this.name = this.parseFilenameForName() || this.parseCodeForName();\n        }else{\n            this.name = data.attributes.name;\n            this.id = data.id;\n            this.rawData = data;\n        }\n    }\n    chalkPrint(){\n        let id = String(this.remote && this.remote + \"-\" + this.id || \"Local\").padStart(8);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \");\n        }\n    }\n    parseCodeForName(){\n        const name_regex = /name:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new Regexp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    getPath(){\n        return `${process.env.rally_repo_path}/silo-presets/${this.name}.${this.ext}`;\n    }\n    getMetadataPath(){\n        return `${process.env.rally_repo_path}/silo-metadata/${this.name}.json`;\n    }\n    codeBinary(){\n        if(this.code.startsWith(\"=BASE64=\")){\n            return bota(this.code.substring(8));\n        }else{\n            return this.code;\n        }\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}}`);\n    }\n    async uploadCodeToEnv(env, createFunction){\n        write(chalk`Uploading {green ${this.name}} to {green ${env}}: `);\n\n        //First query the api to see if this already exists.\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets`,\n            qs: {filter: `name=${this.name}`},\n        });\n        let remote = res.data[0];\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            //If it needs to be created then we need to ask the user for metadata\n            write(\"create, \");\n            let metadata = await createFunction(this);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: {data: metadata},\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log();\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getMetadata(){}\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n\n    static envs(env){\n        return envs[env] = envs[env] || Preset.cache_envs(env);\n    }\n    static cache_env(env){\n\n    }\n}\n","export default class Rule{\n    constructor(data, remote){\n        this.rawData = data;\n        this.remote = remote;\n    }\n    chalkPrint(){\n        let D = this.rawData;\n        let id = String(this.remote + \"-\" + D.id).padStart(8);\n        return chalk`{green ${id}}: {blue ${D.attributes.name}}`;\n    }\n}\n","import {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    @cached async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return providers;\n    },\n    async getEditorConfig(env, provider){\n        let config = await lib.makeAPIRequest({env, path_full: provider.links.editorConfig});\n        let helpText = config.helpText;\n        config.helpText = () => helpText;\n        return config\n    },\n    @cached async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return rules;\n    },\n    @cached async getPresets(env){\n        let rules = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return rules;\n    },\n    //Dummy test access\n    async testAccess(env){\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true});\n        if(!result) return 401;\n        return result.statusCode;\n    },\n}\n","import inquirer from \"inquirer\";\nimport {configObject} from \"./config.js\";\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (for coloring)?\")};\n}\n\n//Internal usage/testing\nexport async function selectProvider(env, providers){\n    let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n    if(args.defaultSelect){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.map(x => ({\n                name: prettyPrintProvider(x),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport {rallyFunctions as funcs, Preset, Rule, AbortError} from \"./index.js\";\nimport inquirer from \"inquirer\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject} from \"./config.js\";\nimport {writeFileSync, chmodSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\nfunction prettyPrintProvider(pro){\n    let id = String(pro.id).padStart(4);\n    return chalk`{green ${id}}: {blue ${pro.attributes.category}} - {green ${pro.attributes.name}}`;\n}\n\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(){\n        let arg = argv._[1];\n        if(arg){\n            log(printHelp(helpEntries[arg]));\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload or list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    async preset(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let arg = argv._[1];\n        if(arg === \"upload\"){\n            let files = args.file;\n            if(!files){\n                throw new AbortError(\"No files provided to upload (use --file argument)\");\n            }\n            if(typeof files === \"string\") files = [files];\n            log(chalk`Uploading {green ${files.length}} preset(s) to {green ${env}}.`);\n\n            let presets = files.map(path => new Preset({path, remote: false}));\n            await funcs.uploadPresets(args.env, presets, async preset => {\n                log(\"asking... \");\n                let providers = await funcs.getProviders(env);\n                let provider = await configHelpers.selectProvider(env, providers);\n                return preset.constructMetadata(provider.id);\n            });\n        }else if(arg === \"list\"){\n            log(\"Loading...\");\n            let presets = await funcs.getPresets(env);\n            log(chalk`{yellow ${presets.length}} presets on {green ${env}}.`);\n            for(let data of presets) log(new Preset({data, remote: env}).chalkPrint());\n        }else{\n            log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n        }\n        //log(presets);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let arg = argv._[1];\n\n        if(arg === \"list\"){\n            log(\"Loading...\");\n            let rules = await funcs.getRules(env);\n            log(chalk`{yellow ${rules.length}} rules on {green ${env}}.`);\n            for(let data of rules) log(new Rule(data, env).chalkPrint());\n        }else{\n            log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env]`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = argv._[1];\n\n        let providers = await funcs.getProviders(env);\n\n        if(ident){\n            let pro = providers.find(x => x.id == ident || x.attributes.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(prettyPrintProvider(pro));\n                log(await funcs.getEditorConfig(env, pro));\n            }\n        }else{\n            for(let pro of providers) log(prettyPrintProvider(pro));\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key]\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    async config(args){\n        let prop = argv._[1];\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            let ident = \"$\" + propArray[0];\n\n            if(configHelpers[ident]){\n                newConfigObject = {\n                    ...configObject,\n                    ...(await configHelpers[ident](propArray))\n                };\n            }else{\n                log(chalk`No helper for {red ${ident}}`);\n                return;\n            }\n        }\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        if(!await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig);\n        log(chalk`Created file {green ${configFile}}.`);\n\n        if(!await configHelpers.askQuestion(\"Chmod to 600\")) return;\n        chmodSync(configFile, \"600\");\n        log(chalk`Changed file to user r/w only`);\n    },\n};\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion}} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n    if(!configObject){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n    for(let env of [\"UAT\", \"DEV\", \"PROD\"]){\n        //Test access. Returns HTTP response code\n        let result = await funcs.testAccess(env);\n\n        //Create a colored display and response\n        let resultStr = \"{yellow ${result} <unknown>\";\n             if(result === 200) resultStr = chalk`{green 200 OK}`;\n        else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n        else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    chalk.enabled = configObject ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    let func = argv._[0];\n    if(cli[func]){\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                log(ret);\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\nmain();\n"],"names":["configFile","homedir","configObject","json","readFileSync","JSON","parse","e","code","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","env","path","path_full","payload","body","method","qs","headers","fullResponse","config","api","rally_api_key","key","rally_api","url","stringify","logAPI","requestOptions","uri","bearer","resolveWithFullResponse","response","rp","includes","statusCode","APIError","indexPath","all","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","AbortError","Error","message","captureStackTrace","constructor","name","opts","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","length","found","cached","target","oldFunc","cachedValues","newFunc","clearCache","envs","Preset","remote","getLocalCode","parseFilenameForName","parseCodeForName","attributes","id","rawData","String","padStart","endsWith","basename","name_regex","match","strings","filter","regex","Regexp","rally_repo_path","ext","startsWith","bota","substring","uploadPresetData","res","uploadCodeToEnv","createFunction","metadata","providerID","fs","cache_envs","cache_env","Rule","D","rallyFunctions","bestPagintation","silentAPI","time","dl","timeEnd","uploadPresets","presets","createFunc","preset","getProviders","providers","sort","a","b","category","localeCompare","getEditorConfig","provider","editorConfig","getRules","rules","getPresets","testAccess","result","$api","propArray","defaults","q","inquirer","prompt","Object","keys","map","checked","questions","defaultKey","concat","$chalk","askQuestion","selectProvider","defaultProvider","find","x","defaultSelect","prettyPrintProvider","question","ok","require","install","argv","argparse","pro","printHelp","help","cli","_","helpArg","printArgs","files","file","funcs","configHelpers","constructMetadata","chalkPrint","rule","ident","prop","split","newConfigObject","helperName","newConfig","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","ret","white","main","stack"],"mappings":"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"}