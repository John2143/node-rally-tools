{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/notification.js","src/fswrap.js","src/rule.js","src/config-create.js","src/file.js","src/trace.js","src/asset.js","src/preset.js","src/supply-chain.js","src/user.js","src/tag.js","src/stage.js","src/index.js","src/baseCode.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        let write = global.write;\n        if(options.noecho){\n            write = () => {};\n        }\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n\n        if(options.stdin) {\n            options.stdin(cp.stdin);\n        }\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.error(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if([200, 201, 202, 203, 204].includes(response.statusCode) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        opts.maxParallelRequests = 1;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n    static async keepalive(funcs){\n        for(let f of funcs){\n            await f();\n        }\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${!response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        //Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class ResoultionError extends Error{\n    constructor(name, env){\n        super(chalk`Error during name resolution: '{blue ${name}}' is not mapped on {green ${env}}`);\n        this.name = \"Name Resoultion Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }else{\n                throw new ResoultionError(`(id = ${dataObj.id})`, this.remote);\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }else{\n                throw new ResoultionError(dataObj.name, this.remote);\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function* zip(...items){\n    let iters = items.map(x => x[Symbol.iterator]());\n\n    for(;;){\n        let r = [];\n        for(let i of iters){\n            let next = i.next()\n            if(next.done) return;\n            r.push(next.value);\n        }\n        yield r;\n    }\n}\n\nexport async function* unordered(proms){\n    let encapsulatedPromises = proms.map(async (x, i) => [i, await x]);\n    while(encapsulatedPromises.length > 0){\n        let [ind, result] = await Promise.race(encapsulatedPromises.filter(x => x));\n        yield result;\n\n        encapsulatedPromises[ind] = undefined;\n    }\n}\n\nexport function* range(start, end){\n    if(end === undefined){\n        end = start;\n        start = 0;\n    }\n    while(start < end) yield start++;\n}\n\nexport class IndexObject {\n    //normal opts from any makeAPIRequest\n    //Note that full_response and pages won't work.\n    //\n    //if you want to start from another page, use `opts.start`\n    //opts.observe: async function(jsonData) => jsonData. Transform the data from the api\n    //opts.maxParallelRequests: number of max api requests to do at once\n    //opts.noCollect: return [] instead of the full data\n    constructor(opts){\n        this.opts = opts;\n    }\n\n    linkToPage(page) {\n        return this.baselink.replace(`page=1p`, `page=${page}p`);\n    }\n\n    async initializeFirstRequest(){\n        //Create a copy of the options in case we need to have a special first request\n        this.start = this.opts.start || 1;\n        let initOpts = {...this.opts};\n        if(this.opts.pageSize){\n            initOpts.qs = {...this.opts.qs};\n            initOpts.qs.page = `${this.start}p${this.opts.pageSize}`;\n        }\n\n        this.allResults = [];\n\n        //we make 1 non-parallel request to the first page so we know how to\n        //format the next requests\n        let json = await lib.makeAPIRequest(initOpts);\n\n        if(this.opts.observe) json = await this.opts.observe(json);\n        if(!this.opts.noCollect) this.allResults.push(json);\n\n        this.baselink = json.links.first;\n        this.currentPageRequest = this.start;\n\n        this.hasHit404 = false;\n    }\n\n    getNextRequestLink(){\n        this.currentPageRequest++;\n        return [this.currentPageRequest, this.linkToPage(this.currentPageRequest)];\n    }\n\n    ///promiseID is the id in `currentPromises`, so that it can be marked as\n    ///done inside the promise array. promiseID is a number from 0 to\n    ///maxparallel-1\n    async getNextRequestPromise(promiseID){\n        let [page, path_full] = this.getNextRequestLink();\n        return [promiseID, page, await lib.makeAPIRequest({\n            ...this.opts,\n            path_full,\n            fullResponse: true,\n        })];\n    }\n\n    cancel(){\n        this.willCancel = true;\n    }\n\n    async fullResults(){\n        await this.initializeFirstRequest();\n        let maxParallelRequests = this.opts.maxParallelRequests || this.opts.chunksize || 20;\n\n        let currentPromises = [];\n\n        //generate the first set of requests. Everything after this will re-use these i promiseIDs\n        for(let i = 0; i < maxParallelRequests; i++){\n            currentPromises.push(this.getNextRequestPromise(currentPromises.length));\n        }\n\n        for(;;){\n            let [promiseID, page, requestResult] = await Promise.race(currentPromises.filter(x => x));\n\n            if(this.willCancel){\n                return null;\n            }\n\n            if(requestResult.statusCode === 404){\n                this.hasHit404 = true;\n            }else if(requestResult.statusCode === 200){\n                let json = JSON.parse(requestResult.body);\n                if(this.opts.observe) json = await this.opts.observe(json);\n                if(!this.opts.noCollect) this.allResults.push(json);\n\n                if(json.data.length === 0) this.hasHit404 = true;\n            }else{\n                throw new APIError(requestResult, `(unknown args) page ${page}`, null);\n            }\n\n            if(this.hasHit404){\n                currentPromises[promiseID] = null;\n            }else{\n                currentPromises[promiseID] = this.getNextRequestPromise(promiseID);\n            }\n\n            if(currentPromises.filter(x => x).length === 0) break;\n        }\n\n        let all = [];\n        for(let result of this.allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n}\n\nexport function orderedObjectKeys(obj) {\n    let keys = Object.keys(obj).sort();\n\n    let newDict = {};\n    for(let key of keys) {\n        if(Array.isArray(obj[key])){\n            newDict[key] = obj[key].map(x => orderedObjectKeys(x));\n        }else if(typeof obj[key] === \"object\" && obj[key]) {\n            newDict[key] = orderedObjectKeys(obj[key]);\n        }else{\n            newDict[key] = obj[key];\n        }\n    }\n\n    return newDict;\n};\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError, orderedObjectKeys} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        delete this.data.relationships.transitions;\n        delete this.data.meta;\n        delete this.data.attributes.updatedAt;\n        delete this.data.attributes.createdAt;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n\n            writeFileSync(this.localpath, JSON.stringify(orderedObjectKeys(this.data), null, 4));\n        }else{\n            await this.acclimatize(env);\n            return await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PUT\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode > 210){\n                return `Failed to upload: ${res.body}`;\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return this._localpath || join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import {configFile, configObject} from \"./config.js\";\nimport {join, basename} from \"path\";\nimport {writeFileSync} from \"fs\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository (empty for N/A)?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function loadLocals(path, Class){\n    let basePath = configObject.repodir;\n    let objs = (await readdir(basePath))\n        .filter(name => name.includes(path))\n        .filter(name => !basename(name).startsWith(\".\"))\n        .map(name => new Class({path: name}));\n    return objs;\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let objs = await loadLocals(path, Class);\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n\n    return await selectLocalMenu(objsMap, typeName, canSelectNone);\n}\n\nexport async function selectLocalMenu(objs, typeName, canSelectNone = true){\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    if(canSelectNone) objs.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objs.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n\nexport async function saveConfig(newConfigObject, {ask = true, print = true} = {}){\n    //Create readable json and make sure the user is ok with it\n    let newConfig = JSON.stringify(newConfigObject, null, 4);\n    if(print) log(newConfig);\n\n    //-y or --set will make this not prompt\n    if(ask && !await askQuestion(\"Write config to disk?\")) return;\n    writeFileSync(configFile, newConfig, {mode: 0o600});\n    log(chalk`Created file {green ${configFile}}.`);\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite file)\"}} {red ${this.sizeHR}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n\n    get sizeHR(){\n        let units = [\"B\", \"K\", \"M\", \"G\", \"T\"];\n\n        let unitIdx = 0;\n\n        let size = this.size;\n        while(size > 1000){\n            size /= 1024;\n            unitIdx++;\n        }\n\n        if(size > 100){\n            size = Math.round(size);\n        }else{\n            size = Math.round(size * 10) / 10;\n        }\n\n        return size + units[unitIdx];\n    }\n\n    get instancesList() {\n        let instances = [];\n        for(let [key, val] of Object.entries(this.instances)){\n            let n = {id: key};\n            Object.assign(n, val);\n            instances.push(n);\n        }\n        return instances;\n    }\n\n    static rslURL(instance){\n        return `rsl://${instance.storageLocationName}/${instance.name}`;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getArtifact(env, artifact, jobid){\n    let path = `/jobs/${jobid}/artifacts/${artifact}`;\n    let art = lib.makeAPIRequest({\n        env, path,\n    }).catch(_ => null);\n\n    return await art;\n}\n\nexport async function getInfo(env, jobid){\n    let trace          = getArtifact(env, \"trace\", jobid);\n    let renderedPreset = getArtifact(env, \"preset\", jobid);\n    let result         = getArtifact(env, \"result\", jobid);\n    let error          = getArtifact(env, \"error\", jobid);\n    let output         = getArtifact(env, \"output\", jobid);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport const tracelineRegex = /^(?:[\\d.]+) ([\\w ]+):(\\d+): (.+)/;\nexport function parseTraceLine(line){\n    let info = tracelineRegex.exec(line);\n\n    if(!info) {\n        return {\n            full: line,\n            parsed: false,\n            content: line,\n        };\n    }\n\n    return {\n        absoluteTime: info[0],\n        presetName: info[1],\n        lineNumber: info[2],\n        text: info[3],\n        content: info[3],\n        full: line,\n        parsed: true,\n    }\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        let info = parseTraceLine(errLine);\n        if(!info.parsed){\n            errorList.push(await findLineInFile(renderedPreset, info.lineNumber));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile, getArtifact};\nexport default Trace;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nimport {getArtifact, parseTraceLine} from \"./trace.js\";\nimport moment from \"moment\"\n\nimport path from \"path\";\nimport fs from \"fs\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata?page=1p100`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow){\n            //FIXME\n            //Currently, WORKFLOW_METADATA cannot be patched via api: we need to\n            //start a ephemeral eval to upload it\n            let md = JSON.stringify(JSON.stringify(metadata.Workflow));\n            let fakePreset = {\n                code: `WORKFLOW_METADATA.update(json.loads(${md}))`\n            }\n            await this.startEphemeralEvaluateIdeal(fakePreset);\n            log(\"WFMD Patched using ephemeralEval\")\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n            log(\"MD Patched\")\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(refresh = false){\n        if(this._files && !refresh) return this._files;\n\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return this._files = new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData, isBinary=false){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        //we need to strip invalid utf8 characters from the\n                        //buffer before we encode it or the sdvi backend dies\n                        providerData: Buffer.from(preset.code, isBinary && \"binary\" || \"utf8\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\\n\");\n        let dots = 0;\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(`\\r${res.data.attributes.state}${\".\".repeat(dots++)}         `);\n            if(dots === 5){ dots = 1; }\n\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(500);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n\n    async migrate(targetEnv){\n        configObject.globalProgress = false;\n        log(`Creating paired file in ${targetEnv}`);\n\n        //Fetch metadata in parallel, we await it later\n        let _mdPromise = this.getMetadata();\n\n        let targetAsset = await Asset.getByName(targetEnv, this.name);\n        if(targetAsset){\n            log(`Asset already exists ${targetAsset.chalkPrint()}`);\n            //if(configObject.script) process.exit(10);\n        }else{\n            targetAsset = await Asset.createNew(this.name, targetEnv);\n            log(`Asset created ${targetAsset.chalkPrint()}`);\n        }\n\n        //wait for metadata to be ready before patching\n        await _mdPromise;\n        log(\"Adding asset metadata\");\n        await targetAsset.patchMetadata(this.md);\n\n        let fileCreations = [];\n        for(let file of await this.getFiles()){\n\n            let possibleInstances = {};\n            //Check for any valid copy-able instances\n            for(let inst of file.instancesList){\n                //We need to skip internal files\n                if(inst.storageLocationName === \"Rally Platform Bucket\") continue;\n\n                log(`Adding file: ${file.chalkPrint()}`);\n                possibleInstances[inst.storageLocationName] = () => targetAsset.addFileInstance(file, inst);\n            }\n\n            if(Object.values(possibleInstances).length > 1){\n                //prioritize archive is possible\n                if(possibleInstances[\"Archive\"]){\n                    log(\"Hit archive prioritizer\");\n                    fileCreations.push(possibleInstances[\"Archive\"]);\n                }else{\n                    fileCreations.push(...Object.values(possibleInstances));\n                }\n            }else{\n                fileCreations.push(...Object.values(possibleInstances));\n            }\n\n        }\n        await Promise.all(fileCreations.map(x => x()));\n    }\n\n    async addFileInstance(file, inst, tagList = []){\n        let newInst = {\n            uri: File.rslURL(inst),\n            name: inst.name,\n            size: inst.size,\n            lastModified: inst.lastModified,\n            storageLocationName: inst.storageLocationName,\n        };\n\n        let instances = {};\n\n        instances[String(Math.floor(Math.random() * 100000 + 1))] = newInst;\n\n\n        let request = lib.makeAPIRequest({\n            env: this.remote, path: `/files`, method: \"POST\",\n\n            payload: {\n                data: {\n                    type: \"files\",\n                    attributes: {\n                        label: file.label,\n                        tagList,\n                        instances,\n                    },\n                    relationships: {\n                        asset: {\n                            data: {\n                                id: this.id,\n                                type: \"assets\"\n                            },\n                        },\n                    },\n                }\n            }\n        });\n\n\n        try{\n            let fileData = await request;\n            let newFile = new File({data: fileData.data, remote: this.remote, parent: this})\n            if(configObject.script) console.log(inst.uri, newFile.instancesList[0].uri);\n        }catch(e){\n            log(chalk`{red Failed file: ${file.chalkPrint()}}`)\n        }\n    }\n\n    async downloadFile(label, destFolder){\n        let files = await this.getFiles();\n\n        let file = files.findByName(label)\n\n        let c = await file.getContent();\n\n        if(destFolder){\n            let filePath = path.join(destFolder, file.instancesList[0].name);\n            fs.writeFileSync(filePath, c);\n        }else{\n            console.log(c);\n        }\n    }\n    async deleteFile(label){\n        let files = await this.getFiles();\n        let file = files.findByName(label);\n        if(!file) return false;\n        await file.delete(false);//mode=forget\n        return true;\n    }\n\n    async listJobs() {\n        let jobs = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n\n        for(let e of jobs) {\n            if(!e.relationships.preset.data) continue;\n            let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n            let rule = await Rule.getById(this.remote, e.relationships.workflowRule.data.id);\n            log(\"Preset\", preset.name);\n            log(\"Rule\", rule.name);\n        }\n    }\n\n    //get all artifacts of type `artifact` from this asset\n    async *artifactsList(artifact) {\n        async function* reorderPromises(p){\n            ////yield in order we got it\n            //yield* p[Symbol.iterator]();\n            ////yield in order of first to finish\n            //yield* unordered(p);\n\n            //yield in chronological order\n            let k = await Promise.all(p);\n            yield* k.sort((\n                [e1, _a],\n                [e2, _b]\n            ) => {\n                return e1.attributes.completedAt - e2.attributes.completedAt;\n            });\n        }\n\n\n        elog(\"Reading jobs...\");\n        let r = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n        elog(\"Getting job artifacts...\");\n\n\n        //let evals = r.filter(x => x.attributes.providerTypeName === \"SdviEvaluate\");\n        let evals = r;\n        let zipped = evals.map(async x => [x, await getArtifact(this.remote, artifact, x.id)]);\n\n        for await(let x of reorderPromises(zipped)) {\n            yield x;\n        }\n    }\n\n    async grep(text, {artifact = \"trace\", nameOnly = false, ordering = null}){\n        function highlight(line, text){\n            let parts = line.split(text);\n            return parts.join(chalk`{blue ${text}}`);\n        }\n\n        function parseLine(x){\n            if(artifact === \"trace\"){\n                return parseTraceLine(x);\n            }else{\n                //fake the output from parseTraceLine to make it look right\n                return {content: x};\n            }\n        }\n\n        for await(let [e, trace] of this.artifactsList(artifact)){\n            if(!trace) continue;\n\n            let lines = trace.split(\"\\n\").map(parseLine);\n            let matching = lines.filter(x => x.content.includes(text));\n            if(matching.length > 0){\n                let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n                if(nameOnly){\n                    log(chalk`{red ${preset.name}} ${e.id} {blue ${matching.length}} matche(s) ${e.attributes.completedAt}`);\n                }else if(configObject.rawOutput){\n                    console.log(matching.map(x => chalk`{red ${preset.name}}:${highlight(x.content, text)}`).join(\"\\n\"));\n                }else{\n                    log(chalk`{red ${preset.name}} ${e.id} ${moment(e.attributes.completedAt)}`);\n                    log(matching.map(x => `  ${highlight(x.content, text)}`).join(\"\\n\"));\n                }\n            }\n        }\n    }\n\n    async replay() {\n\n        function colorRequest(id) {\n            if(id <= 299) {\n                return chalk`{green ${id}}`;\n            }else if(id <= 399) {\n                return chalk`{blue ${id}}`;\n            }else if(id <= 499) {\n                return chalk`{red ${id}}`;\n            }else if(id <= 599) {\n                return chalk`{cyan ${id}}`;\n            }else {\n                throw new Error(\"failed to create color from id\");\n            }\n        }\n        let worstRegexEver = /^@Request (?<type>\\w+) (?<url>.+)$[\\n\\r]+^(?<time>.+)$[\\S\\s]+?^(?<request>\\{[\\S\\s]+?^\\})?[\\S\\s]+?^@Response (?<statusCode>\\d+)$[\\S\\s]+?^(?<response>\\{[\\S\\s]+?^\\})?[\\S\\s]+?={61}/gm;\n        for await(let [e, trace] of this.artifactsList(\"output\")){\n            if(!trace) continue;\n\n            let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n            log(chalk`{red ${preset.name}}`);\n            for(let request of trace.matchAll(worstRegexEver)) {\n                //log(request);\n                if(true){\n                    let r = request.groups;\n                    log(chalk`Request: ${r.type} ${r.url} returned ${colorRequest(r.statusCode)}`);\n                }\n            }\n        }\n    }\n\n    async analyze(){\n        await lib.makeAPIRequest({\n            env: this.remote, path: \"/v1.0/analysis\",\n            method: \"POST\",\n            payload: {\n                \"movieId\": this.id,\n                \"latestVersion\": true,\n            },\n        });\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import {RallyBase, lib, AbortError, Collection, orderedObjectKeys} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {loadLocals} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        delete this.data.attributes.rallyConfiguration;\n        delete this.data.attributes.systemManaged;\n        delete this.data.meta;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env, shouldTest = true){\n        await this.uploadCodeToEnv(env, true, shouldTest);\n    }\n    async save(env, shouldTest = true){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env, shouldTest);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        let code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n\n        //match header like \n        // # c: d\n        // # b\n        // # a\n        // ##################\n        let headerRegex = /(^# .+[\\r\\n]+)+#+[\\r\\n]+/gim;\n        let hasHeader = headerRegex.exec(code);\n\n        if(hasHeader){\n            this.header = code.substring(0, hasHeader[0].length - 1);\n            code = code.substring(hasHeader[0].length);\n        }\n\n        return this.code = code;\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s*:\\s*([\\w\\d. \\/_]+)\\s*$/gim;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return this._localpath || path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n\n    async convertImports() { \n    }\n\n    async convertIncludes() { \n    }\n\n    isEval() {\n        return this.providerName === \"SdviEvaluate\" || this.providerName === \"SdviEvalPro\";\n    }\n\n    async uploadPresetData(env, id){\n        if(this.code.trim() === \"NOUPLOAD\"){\n            write(chalk`code skipped {yellow :)}, `);\n            // Not an error, so return null\n            return null;\n        }\n\n        let code = this.code;\n        let headers = {};\n\n        //if(this.isEval()){\n            //let crt = 0;\n            //code = code.split(\"\\n\").map(line => {\n                //crt += 1\n\n                //if(line.trim().endsWith(\"\\\\\")) return line;\n\n                //return [\n                    //line,\n                    //`# this ^^ is ${this.name}:${crt}`,\n                //]\n            //}).flat().join(\"\\n\");\n        //}\n\n        if(!configObject.skipHeader && this.isEval()){\n            write(chalk`generate header, `);\n            let repodir = configObject.repodir;\n            let localpath;\n            if(this.path){\n                localpath = this.path.replace(repodir, \"\");\n                if(localpath.startsWith(\"/\")) localpath = localpath.substring(1);\n            }else{\n                localpath = \"Other Silo\"\n            }\n\n            try{\n                let {stdout: headerText} = await spawn(\n                    {noecho: true},\n                    \"sh\",\n                    [\n                        path.join(configObject.repodir, `bin/header.sh`),\n                        moment(Date.now()).format(\"ddd YYYY/MM/DD hh:mm:ssa\"),\n                        localpath,\n                    ]\n                );\n                code = headerText + code;\n                write(chalk`header ok, `);\n            }catch(e){\n                write(chalk`missing unix, `);\n            }\n        }\n\n        //binary presets\n        if(this.providerName == \"Vantage\"){\n            code = Buffer.from(code).toString(\"base64\");\n            headers[\"Content-Transfer-Encoding\"] = \"base64\";\n        }\n\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: code, method: \"PUT\", fullResponse: true, timeout: 10000,\n            headers,\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async deleteRemoteVersion(env, id=null){\n        if(lib.isLocalEnv(env)) return false;\n        if(!id){\n            let remote = await Preset.getByName(env, this.name);\n            id = remote.id;\n        }\n\n        return await lib.makeAPIRequest({\n            env, path: `/presets/${id}`,\n            method: \"DELETE\",\n        });\n    }\n\n    async delete(){\n        if(lib.isLocalEnv(this.remote)) return false;\n\n        return await this.deleteRemoteVersion(this.remote, this.id);\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return \"Missing Name\";\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return \"Immutable Preset\";\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        let uploadResult = null;\n        if(remote){\n            //If it exists we can replace it\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                payload.data.relationships = {};\n                if (this.relationships.providerType) {\n                    payload.data.relationships.providerType = this.relationships.providerType;\n                    let dt = payload.data.relationships.providerType;\n                    write(chalk`query type, `);\n                    let ptid = await Provider.getByName(env, dt.data.name);\n                    write(chalk`({gray ${ptid.name}}) ok, `);\n                    dt.data.id = ptid.data.id;\n                }else{\n                    write(\"replace (simple), \");\n                }\n\n                if(this.providerName === \"SdviEvalPro\"){\n                    log(\"givin it a name,\");\n                    let oldName = this.attributes.providerDataFilename;\n                    if(!oldName){\n                        this.attributes.providerDataFilename = this.name + \".py\";\n                    }\n                }\n\n\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PUT\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode >= 400){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return \"Metadata Upload Failed\";\n                }\n            }\n\n            uploadResult = await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            uploadResult = await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n\n        return uploadResult;\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n\n    parseHeaderInfo(){\n        if(!this.header) return null;\n        let abs = {\n            built:   /Built On:(.+)/.exec(this.header)[1]?.trim(),\n            author:  /Author:(.+)/.exec(this.header)[1]?.trim(),\n            build:   /Build:(.+)/.exec(this.header)[1]?.trim(),\n            version: /Version:(.+)/.exec(this.header)[1]?.trim(),\n            branch:  /Branch:(.+)/.exec(this.header)[1]?.trim(),\n            commit:  /Commit:(.+)/.exec(this.header)[1]?.trim(),\n            local:   /Local File:(.+)/.exec(this.header)[1]?.trim(),\n        }\n\n        let tryFormats = [\n            [true,  \"ddd MMM DD HH:mm:ss YYYY\"],\n            [false, \"ddd YYYY/MM/DD LTS\"],\n        ];\n\n        for(let [isUTC, format] of tryFormats){\n            let date;\n            if(isUTC){\n                date = moment.utc(abs.built, format)\n            }else{\n                date = moment(abs.built, format)\n            }\n\n            if(!date.isValid()) continue;\n\n            abs.offset = date.fromNow();\n\n            break;\n        }\n\n        return abs;\n    }\n\n    async printRemoteInfo(env){\n        let remote = await Preset.getByName(env, this.name);\n        if(!remote) {\n            log(chalk`Not found on {red ${env}}`);\n            return;\n        }\n        await remote.downloadCode();\n        let i = remote.parseHeaderInfo();\n\n        if(i){\n            log(chalk`\n                ENV: {red ${env}}, updated {yellow ~${i.offset}}\n                Built on {blue ${i.built}} by {green ${i.author}}\n                From ${i.build || \"(unknown)\"} on ${i.branch} ({yellow ${i.commit}})\n                Remote Data Filename \"${this.importName}\"\n            `.replace(/^[ \\t]+/gim, \"\").trim());\n        }else{\n            log(chalk`No header on {red ${env}}`);\n        }\n    }\n\n    async getInfo(envs){\n        await this.printDepends();\n        for(let env of envs.split(\",\")){\n            await this.printRemoteInfo(env);\n        }\n    }\n\n    async printDepends(indent=0, locals=null, seen={}){\n        let includeRegex = /@include [\"'](.+)['\"]/gim;\n        //let includeRegex = /@include/g;\n\n        let includes = [];\n\n        let inc;\n        while(inc = includeRegex.exec(this.code)){\n            includes.push(inc[1]);\n        }\n\n        //let includes = this.code\n            //.split(\"\\n\")\n            //.map(x => includeRegex.exec(x))\n            //.filter(x => x)\n            //.map(x => x[1]);\n        //log(includes);\n\n        if(!locals){\n            locals = new Collection(await loadLocals(\"silo-presets\", Preset));\n        }\n\n        log(Array(indent + 1).join(\" \") + \"- \" + this.name);\n\n        for(let include of includes){\n            if(seen[include]){\n                log(Array(indent + 1).join(\" \") + \"  - (seen) \" + include);\n            }else{\n                seen[include] = true\n                let file = await locals.findByName(include);\n                if(file){\n                    await file.printDepends(indent + 2, locals, seen);\n                }else{\n                    log(Array(indent + 1).join(\" \") + \"  - (miss) \" + include);\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"_nameE2\", \"data.attributes.providerDataFilename\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"importName\", \"data.attributes.providerDataFilename\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\ndefineAssoc(Preset, \"providerName\", \"relationships.providerType.data.name\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async deleteTo(env){\n         for(let preset of this.presets){\n            try{\n                await preset.deleteRemoteVersion(env);\n            }catch(e){log(e);}\n         }\n    }\n    async syncTo(env){\n        let fails = [];\n        for(let preset of this.presets){\n            try{\n                fails.push([preset, await preset.save(env), \"preset\"]);\n            }catch(e){\n                log(chalk`{red Error}`);\n                fails.push([preset, e]);\n            }\n        }\n\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    fails.push([rule, await rule.saveA(env), \"rule create\"]);\n                }catch(e){\n                    log(chalk`{red Error}`);\n                    fails.push([rule, e, \"rule create\"]);\n                }\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    fails.push([rule, await rule.saveB(env), \"rule link\"]);\n                }catch(e){\n                    log(chalk`{red Error}`);\n                    fails.push([rule, e, \"rule link\"]);\n                }\n            }\n        }\n\n        let finalErrors = [];\n        for(let [item, error, stage] of fails){\n            if(!error) continue;\n            log(chalk`Error during {blue ${stage}}: ${item.chalkPrint(false)} {red ${error}}`);\n            finalErrors.push([item, error, stage]);\n        }\n\n        return finalErrors;\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n    async curate(){\n        this.curated = !this.curated;\n\n        return await lib.makeAPIRequest({\n            env: this.remote, path: `/tagNames/${this.id}`, method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        curated: this.curated,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        });\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","import {RallyBase, lib, AbortError, Collection, sleep, zip} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {saveConfig, loadLocals, inquirer, addAutoCompletePrompt, askQuestion, selectPreset, selectLocalMenu, askInput} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nimport SupplyChain from \"./supply-chain.js\";\nimport {categorizeString} from \"./index.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nlet Stage = {\n    async before(args){\n        this.env = args.env;\n        this.args = args;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n\n    setStageId() {\n        let api = configObject.api[this.env];\n        if(!api) return null;\n        return this.stageid = api.stage;\n    },\n\n    // This returns true if the stage failed to load\n    async downloadStage() {\n        this.setStageId();\n\n        if(!this.stageid) {\n            log(chalk`No stage ID found for {green ${this.env}}. Run \"{red rally stage init -e ${this.env} (stage name)}\" or select a different env.`);\n            return true;\n        }\n\n        let preset = await Preset.getById(this.env, this.stageid);\n        await preset.downloadCode();\n\n        this.stageData = JSON.parse(preset.code);\n        this.stagePreset = preset;\n\n        log(chalk`Stage loaded: {green ${this.stagePreset.name}}`);\n    },\n\n    async uploadStage() {\n        if(!this.stagePreset || !this.stageData) {\n            throw \"Assert fail: no existing prestage (you shouldn't see this)\";\n        }\n\n        this.stagePreset.code = JSON.stringify(this.stageData, null, 4);\n\n        await this.stagePreset.uploadCodeToEnv(this.env, false, false);\n    },\n\n    async $init(){\n        let presetName = this.args._.pop();\n\n        let preset = await Preset.getByName(this.env, presetName);\n\n        if(!preset) {\n            log(\"Existing preset stage not found.\");\n            return;\n        }\n\n        log(chalk`Found stage target to init: ${preset.chalkPrint(false)}`);\n\n        configObject.api[this.env].stage = preset.id;\n        configObject[\"ownerName\"] = await askInput(\"What is your name\");\n\n        await saveConfig(configObject, {print: false});\n    },\n\n    async $info(){\n        if(await this.downloadStage()) return;\n\n        if(configObject.rawOutput) return this.stageData;\n\n        log(chalk`Currently Staged Branches: ${this.stageData.stage.length}`);\n        for(let {branch, commit} of this.stageData.stage){\n            log(chalk`    ${branch} {gray ${commit}}`);\n        }\n\n        log(chalk`Currently Claimed Presets: ${this.stageData.claimedPresets.length}`);\n        for(let preset of this.stageData.claimedPresets){\n            log(chalk`    {blue ${preset.name}} {gray ${preset.owner}}`);\n        }\n    },\n\n    async $claim(){\n        await Promise.all([this.downloadStage(), addAutoCompletePrompt()]);\n        let q;\n\n        let opts = [\n            {name: \"Claim a preset\", value: \"add\"},\n            {name: \"Remove a claimed preset\", value: \"rem\"},\n            {name: \"Apply changes\", value: \"done\"},\n            {name: \"Quit without saving\", value: \"quit\"},\n        ];\n\n        //slice to copy\n        let newClaimed = [];\n        let ownerName = configObject[\"ownerName\"]\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let p = await selectPreset({});\n\n                if(!p) continue;\n\n                newClaimed.push(p);\n            }else if(q.type === \"rem\") {\n                let objsMap = newClaimed.map(x => ({\n                    name: x.chalkPrint(true),\n                    value: x,\n                }));\n\n                for(let obj of this.stageData.claimedPresets) {\n                    objsMap.push({\n                        name: obj.name,\n                        value: obj.name,\n                    });\n                }\n\n                let p = await selectLocalMenu(objsMap, \"preset\", true);\n\n                if(!p) continue;\n                if(typeof(p) == \"string\") {\n                    this.stageData.claimedPresets = this.stageData.claimedPresets.filter(x => x.name != p);\n                }else{\n                    newClaimed = newClaimed.filter(x => x !== p);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n\n        for(let newClaim of newClaimed) {\n            this.stageData.claimedPresets.push({\n                name: newClaim.name,\n                owner: ownerName,\n            });\n        }\n\n        await this.uploadStage();\n    },\n\n    async getBranches(){\n        let branches = await spawn({noecho: true}, \"git\", [\"branch\", \"-la\", \"--color=never\"]);\n        if(branches.exitCode !== 0) {\n            log(\"Error in loading branches\", branches);\n        }\n\n        let branchList = branches.stdout\n            .split(\"\\n\")\n            .map(x => x.trim())\n            .filter(x => x.startsWith(\"remotes/origin\"))\n            .map(x => {\n                let lastSlash = x.lastIndexOf(\"/\");\n                if(lastSlash !== -1){\n                    x = x.slice(lastSlash + 1);\n                }\n\n                return x;\n            });\n\n        if(!await this.checkCurrentBranch()) {\n            log(\"Not currently on staging\");\n            return;\n        }\n\n        log(\"Finished retreiving branches.\");\n\n        return branchList;\n    },\n\n    async runGit(oks, ...args) {\n        if(typeof(oks) === \"number\") {\n            oks = [oks];\n        }else if(typeof(oks) === \"undefined\") {\n            oks = [0];\n        }\n\n        let g = await spawn({noecho: true}, \"git\", args);\n        if(configObject.verbose) log(`git ${args.join(\" \")}`);\n\n        if(!oks.includes(g.exitCode)) {\n            log(g.stderr);\n            log(g.stdout);\n            throw new AbortError(chalk`Failed to run git ${args} {red ${g.exitCode}}`);\n        }\n\n        return [g.stdout, g.stderr]\n    },\n\n    filterwith(list) {\n        return async (sofar, input) => {\n            return list.filter(x => input ? (x.name || x).toLowerCase().includes(input.toLowerCase()) : true);\n        }\n    },\n\n    //finite state machine for inputting branch changes\n    async editFSM(allBranches, newStagedBranches) {\n\n        let q;\n\n        let opts = [\n            {name: \"Add a branch to the stage\", value: \"add\"},\n            {name: \"Remove a branch from the stage\", value: \"rem\"},\n            {name: \"Finalize stage\", value: \"done\"},\n            {name: \"Quit without saving\", value: \"quit\"},\n        ];\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let qqs = allBranches.slice(0); //copy the branches\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to add?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.add(q.branch);\n                }\n            }else if(q.type === \"rem\") {\n                let qqs = Array.from(newStagedBranches);\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to remove?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.delete(q.branch);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n    },\n\n\n\n    async $edit(){\n        let needsInput = !this.args.a && !this.args.r && !this.args.add && !this.args.remove;\n        let clean = this.args.clean;\n\n        let [branches, stage, _] = await Promise.all([\n            this.getBranches(),\n            this.downloadStage(),\n            !needsInput || addAutoCompletePrompt()\n        ]);\n\n        if(stage) return;\n\n        if(!branches) return;\n\n        //copy the branches we started with\n        let newStagedBranches = new Set();\n        let oldStagedBranches = new Set();\n        for(let {branch} of this.stageData.stage){\n            if(!clean) {\n                newStagedBranches.add(branch);\n            }\n            oldStagedBranches.add(branch);\n        }\n\n        if(needsInput) {\n            await this.editFSM(branches, newStagedBranches);\n        } else {\n            let asarray = arg => {\n                if(!arg) return [];\n                return Array.isArray(arg) ? arg : [arg];\n            }\n\n            for(let branch of [...asarray(this.args.a), ...asarray(this.args.add)]) {\n                if(!branches.includes(branch)){\n                    throw new AbortError(`Invalid branch ${branch}`);\n                }\n                newStagedBranches.add(branch);\n            }\n            for(let branch of [...asarray(this.args.r), ...asarray(this.args.remove)]) {\n                if(!branches.includes(branch)){\n                    throw new AbortError(`Invalid branch ${branch}`);\n                }\n                newStagedBranches.delete(branch);\n            }\n        }\n\n        const difference = (s1, s2) => new Set([...s1].filter(x => !s2.has(x)));\n        const intersect = (s1, s2) => new Set([...s1].filter(x => s2.has(x)));\n\n        log(\"Proposed stage changes:\");\n        for(let branch of intersect(newStagedBranches, oldStagedBranches)){\n            log(chalk`   ${branch}`);\n        }\n        for(let branch of difference(newStagedBranches, oldStagedBranches)){\n            log(chalk`  {green +${branch}}`);\n        }\n        for(let branch of difference(oldStagedBranches, newStagedBranches)){\n            log(chalk`  {red -${branch}}`);\n        }\n\n        let ok = this.args.y || await askQuestion(\"Prepare these branches for deployment?\");\n        if(!ok) return;\n\n        //just to make sure commits/branches don't get out of order\n        newStagedBranches = Array.from(newStagedBranches);\n\n        try {\n            let [diffText, newStagedCommits] = await this.doGit(newStagedBranches, this.stageData.stage.map(x => x.commit));\n\n            await this.runRally(diffText);\n\n            this.stageData.stage = Array.from(zip(newStagedBranches, newStagedCommits)).map(([branch, commit]) => ({branch, commit}));\n\n             await this.uploadStage();\n        }catch(e){\n            if(e instanceof AbortError) {\n                await this.runGit([0], \"reset\", \"--hard\", \"HEAD\");\n                await this.runGit([0], \"checkout\", \"staging\");\n                throw e;\n            }\n\n            throw e; //TODO \n        }finally{\n            await this.runGit([0], \"checkout\", \"staging\");\n        }\n\n    },\n\n    async $pull() {\n        if(await this.downloadStage()) return;\n        await this.makeOldStage(this.stageData.stage.map(x => x.commit), `rallystage-${this.env}`);\n    },\n\n\n    async makeNewStage(newStagedBranches) {\n        let newStagedCommits = [];\n\n        await this.runGit([0, 1], \"branch\", \"-D\", \"RALLYNEWSTAGE\");\n        await this.runGit([0], \"checkout\", \"-b\", \"RALLYNEWSTAGE\");\n        for(let branch of newStagedBranches) {\n            let originName = `origin/${branch}`\n            let [_, merge] = await this.runGit([0], \"merge\", \"--squash\", originName);\n            let [commit, _2] = await this.runGit([0, 1], \"commit\", \"-m\", `autostaging: commit ${branch}`);\n\n            if(commit.includes(\"working tree clean\")){\n                log(chalk`{yellow Warning:} working tree clean after merging {green ${branch}}, please remove this from the stage`);\n            }\n\n            let hash = await spawn({noecho: true}, \"git\", [\"log\", \"--format=oneline\", \"--color=never\", \"-n\", \"1\", originName]);\n            if(hash.exitCode !== 0) {\n                throw new AbortError(`Failed to get commit hash for branch, ${branch}`);\n            }\n            newStagedCommits.push(hash.stdout.split(\" \")[0]);\n        }\n\n        return newStagedCommits;\n    },\n\n    async makeOldStage(oldStagedCommits, name) {\n        await this.runGit([0], \"checkout\", \"staging\");\n        await this.runGit([0, 1], \"branch\", \"-D\", name);\n        await this.runGit([0], \"checkout\", \"-b\", name);\n        for(let branch of oldStagedCommits) {\n            let [err, _] = await this.runGit([0, 1], \"merge\", branch);\n            if(err.includes(\"Automatic merge failed\")){\n                log(chalk`{red Error:} ${branch} failed to merge during auto-commit`)\n                if(this.args.force){\n                    await this.runGit([0], \"merge\", \"--abort\");\n                }else{\n                    throw new AbortError(\"Not trying to merge other branches\");\n                }\n            }\n        }\n    },\n\n    async checkCurrentBranch() {\n        let expected = `On branch staging\nYour branch is up to date with 'origin/staging'.\n\nnothing to commit, working tree clean`;\n\n        let status = await spawn({noecho: true}, \"git\", [\"status\"]);\n        return status.stdout.trim() === expected;\n    },\n\n    async doGit(newStagedBranches, oldStagedCommits) {\n        if(!await this.checkCurrentBranch()) {\n            log(\"Not currently on staging\");\n            return;\n        }\n\n        let newStagedCommits = await this.makeNewStage(newStagedBranches);\n        await this.makeOldStage(oldStagedCommits, \"RALLYOLDSTAGE\");\n\n        await this.runGit([0], \"checkout\", \"RALLYNEWSTAGE\");\n        let diff = await spawn({noecho: true}, \"git\", [\"diff\", \"RALLYOLDSTAGE..HEAD\", \"--name-only\"]);\n        if(diff.exitCode !== 0) { \n            log(diff);\n            throw new Error(\"diff failed\");\n        }\n\n        let diffText = diff.stdout;\n\n        return [diffText, newStagedCommits];\n    },\n\n    async $testrr() {\n        let diff = `silo-presets/Super Movie Data Collector.py\n        silo-presets/Super Movie Post Work Order.py\n        silo-presets/Super Movie Task Handler.py`;\n\n\n        await this.runRally(diff);\n    },\n\n    async runRally(diffText) {\n        let set = new Set();\n        for(let file of diffText.trim().split(\"\\n\")){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n\n        let chain = new SupplyChain();\n\n        chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        chain.notifications = new Collection([]);\n\n        if(chain.rules.arr.length + chain.presets.arr.length === 0){\n            log(chalk`{blue Info:} No changed prests, nothing to deploy`);\n            return\n        }\n\n        chain.log();\n\n        let hasClaimed = false;\n        for(let preset of chain.presets) {\n            for(let claim of this.stageData.claimedPresets){\n                if(preset.name == claim.name) {\n                    hasClaimed = true;\n                    log(chalk`{yellow Claimed preset}: {blue ${claim.name}} (owner {green ${claim.owner}})`);\n                }\n            }\n        }\n\n        if(hasClaimed){\n            throw new AbortError(\"Someone has a claimed preset in the deploy\");\n        }\n\n\n        let ok = this.args.y || await askQuestion(\"Deploy now?\");\n        if(!ok) throw new AbortError(\"Not deploying\");\n\n        await chain.syncTo(this.env);\n    },\n\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help stage}'`);\n    },\n}\n\nexport default Stage;\n","require(\"source-map-support\").install();\n\nimport {lib, UnconfiguredEnvError, IndexObject} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\nimport {default as Preset} from \"./preset.js\";\nimport {default as Rule} from \"./rule.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\nexport {default as Stage} from \"./stage.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nimport fs from \"fs\";\nimport {configObject} from \"./config.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            let repodir = configObject.repodir;\n            if(repodir){\n                try{\n                    fs.lstatSync(repodir).isDirectory();\n                    return [true, 0];\n                }catch(e){\n                    return [false, 0];\n                }\n            }else{\n                throw new UnconfiguredEnvError();\n            }\n        }\n        let start = new Date();\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 2000});\n        let timed = new Date() - start;\n        return [result.statusCode, timed];\n    },\n}\n\nexport async function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"copy\" | \"move\" | \"delete\",\n\n            \"source\": {\n                \"optional\": true | false,\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"labels\": [\"<label>\" | \"*\", ],\n                    \"tags\": [\"<tag>\", ],\n                    \"storageSet\": [\"<storage location name>\" | \"*\", ],    # only valid for move & delete tasks\n                    \"expandCollections\": true | false\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>/<path>/<file>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            },\n\n            \"destination\": {\n                \"name\": \"<path within the storage location>/<filename>\",\n                \"overwrite\": \"never\" | \"notInAnyAsset\" | \"notInOtherAsset\" | \"always\",\n                \"storageMetadata\": {\"<key>\": \"<value>\",...} | \"<sourceStorageMetadata>\",\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"storage\": \"<storage location name>\",\n                    \"newLabel\": \"<fileLabel>\",\n                    \"newTags\": [\"<tag>\", \"<tag>\"],\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            }\n        },\n\n        {\n            <another task>\n        },\n\n        {\n            <another task>\n        },\n\n        ...\n\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`, SdviEvalPro: `'''\nname: {name}\n'''\n\nimport rally\n\ndef eval_main(context):\n    # code here`,\n};\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag, Stage,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n    IndexObject,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig, loadConfigFromArgs} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace, findLineInFile, getInfo as getTraceInfo} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        if(!args[\"only-metadata\"]) preset.saveLocalFile();\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $deleteRemote(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n\n        log(chalk`Deleting ${preset2.chalkPrint(true)}.`);\n\n        log(await preset2.delete());\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async $info(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let file = this.files[0];\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        await preset.getInfo(args.env);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset({canSelectNone: false});\n        let passNext = await configHelpers.selectRule({purpose: \"'On Exit OK'\"});\n        let errorNext = await configHelpers.selectRule({purpose: \"'On Exit Error'\"});\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule({purpose: \"dynamic next\"})){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, args._.shift());\n    },\n\n    async $curate(args){\n        let tag = await Tag.getByName(this.env, args._.shift())\n        await tag.curate();\n    },\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n\n        }else if(args[\"delete\"]){\n            if(Array.isArray(args[\"delete\"])){\n                for(let to of args[\"delete\"]){\n                    await this.chain.deleteTo(to);\n                }\n            }else{\n                await this.chain.deleteTo(args[\"delete\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            let anyDifferent = false;\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                preset.code      = preset.code.replace(/[\\r\\n ]/, \"\");\n                otherPreset.code = (otherPreset.code || \"\").replace(/[\\r\\n ]/, \"\");\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n\n                    anyDifferent = true\n                }\n            }\n\n            if(!anyDifferent) {\n                log(\"All presets are the same\");\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await allIndexBundle.categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    @helpText(\"Prepare an environment to hold specific branches\")\n    @usage(\"rally help stage\")\n    async stage(args){\n        return subCommand(Stage)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list, deleteRemote\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment] [post actions]`)\n    @param(\"action\", \"The action to perform. Can be calc or make.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain. If this is make, then supply '-' to read from stdin\")\n    @param(\"post actions\", \"The action to perform on the created supply chain. See commands below\")\n    @arg(\"-e\", \"--env\", \"(calc only) environment to do the calculation on\")\n    @arg(\"~\", \"--diff\", \"(post action) Use as `--diff [env]`. List all files with differences on the given env.\")\n    @arg(\"~\", \"--to\", \"(post action) Use as `--to [env]`. Upload all objects.\")\n    @arg(\"~\", \"--delete\", \"(post action) Use as `--delete [env]`. The reverse of uploading. Only presets are supported right now.\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list, create, or curate.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n        let ln = args._.shift();\n        if(!ln){\n            log(\"is trace\");\n            let traceInfo = await parseTrace(args.env, jobId);\n\n            for(let line of traceInfo){\n                if(typeof(line) == \"string\"){\n                    log(chalk.red(line));\n                }else{\n                    printOutLine(line);\n                }\n            }\n        }else{\n            log(\"is ln\");\n            let {renderedPreset} = await getTraceInfo(args.env, jobId);\n            return findLineInFile(renderedPreset, Number(ln));\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        await configHelpers.saveConfig(newConfigObject, {ask: !args.y && !args.set});\n    },\n\n    async silo(){\n        let s = new Silo(\"UAT\");\n\n        await s.grep();\n    },\n\n    @helpText(`create/modify asset or files inside asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Actions are create, delete, launch, addfile, metadata, show, patchMetadata, and launchEvalute, deleteFile, downloadFile, grep, analyze. You can supply multiple actions to chain them.`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`~`,  `--anon`,       chalk`Supply this if no asset is needed (used to lauch anonymous workflows)`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch and launchEvalute)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    @arg(`~`,  `--metadata`,   chalk`Metadata to use with patchMetadata. Can be string, or {white @path/to/file} for a file. Data must contain a top level key Metadata, or Workflow. Metadata will be pached into METADATA. Workflow will be patched into WORKFLOW_METADATA(not currently available)`)\n    @arg(`~`,  `--priority`,   chalk`set the priority of all launched jobs`)\n    @arg(`~`,  `--new-name`,   chalk`set the new name`)\n    @arg(`~`,  `--target-env`, chalk`migrate to the env (when using migrate)`)\n    @arg(`~`,  `--to-folder`,  chalk`Folder to download to when using downloadFile. If no folder is given, writes to stdout.`)\n    @arg(`~`,  `--artifact`,   chalk`This is the artifact to grep on. Defaults to trace. Values are \"trace\", \"preset\", \"result\", \"error\", \"output\"`)\n    @arg(`~`,  `--on`,         chalk`alias for artifact`)\n    @arg(`~`,  `--name-only`,  chalk`Only show preset name and number of matches when greping`)\n    //@arg(`~`,  `--any`,        chalk`allows grep to grep for any preset/provider, not just sdviEval`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        function getInitData(args, launchArg){\n            let initData = arrayify(args[\"init-data\"], launchArg);\n            if(initData && initData.startsWith(\"@\")){\n                let initDataFile = initData.slice(1);\n                if(initDataFile === \"-\"){\n                    log(chalk`Reading init data from {grey stdin}`);\n                    initData = readFileSync(0, \"utf-8\");\n                }else{\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initDataFile, \"utf-8\");\n                }\n            }\n\n            return initData\n        }\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, {initData, priority: args.priority})\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, {initData, priority: args.priority})\n                }\n                launchArg++;\n            }else if(arg === \"launchEvaluate\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n\n                let jobData;\n                let ephemeralEval = false;\n                let p;\n                if(jobName.startsWith(\"@\")){\n                    ephemeralEval = true;\n                    jobData = readFileSync(jobName.slice(1));\n                }else{\n                    p = await Preset.getByName(env, jobName);\n                    if(!p){\n                        throw new AbortError(`Cannot launch preset ${jobName}, does not exist (?)`);\n                    }else{\n                        log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                    }\n                }\n\n\n                if(ephemeralEval){\n                    throw new AbortError(\"could not start\");\n                    await Asset.startEphemeralEvaluateIdeal(env, p.id, initData)\n                }else{\n                    await asset.startEvaluate(p.id, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\" || arg == \"load\"){\n                if(asset.lite) asset = await Asset.getById(env, asset.id);\n                if(arg == \"show\") log(asset);\n            }else if(arg === \"metadata\" || arg === \"md\"){\n                log(await asset.getMetadata(true));\n            }else if(arg === \"migrate\"){\n                await asset.migrate(args[\"target-env\"]);\n            }else if(arg === \"patchMetadata\"){\n                let initData = arrayify(args[\"metadata\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                initData = JSON.parse(initData);\n\n                await asset.patchMetadata(initData);\n            }else if(arg === \"rename\"){\n                let newName = args[\"new-name\"];\n                let oldName = asset.name;\n                await asset.rename(newName);\n                log(chalk`Rename: {green ${oldName}} -> {green ${newName}}`);\n            }else if(arg === \"downloadfile\" || arg === \"downloadFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                await asset.downloadFile(label, args[\"to-folder\"]);\n            }else if(arg === \"deletefile\" || arg === \"deleteFile\" || arg === \"removefile\" || arg === \"removeFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                let result = await asset.deleteFile(label);\n                if(!result) {\n                    log(`Failed to delete file ${label}`);\n                }\n            }else if(arg === \"grep\") {\n                await asset.grep(args._.pop(), {\n                    artifact: args.on || args.artifact || \"trace\",\n                    nameOnly: args[\"name-only\"],\n                    ordering: null,\n                });\n            }else if (arg === \"viewapi\") {\n                await asset.replay();\n            }else if(arg === \"analyze\") {\n                await asset.analyze();\n            }else if(arg === \"listJobs\") {\n                await asset.listJobs();\n            }else{\n                log(`No usage found for ${arg}`);\n            }\n        }\n        if(configObject.rawOutput && !configObject.script) return asset;\n    },\n\n    async pullList(args){\n        let list = await getFilesFromArgs(args);\n\n        let chain = new SupplyChain();\n\n        chain.rules = new Collection([]);\n        chain.presets = new Collection([]);\n        chain.notifications = new Collection([]);\n\n        let files = await spawn({noecho: true}, \"git\", [\"ls-files\"]);\n        files = files.stdout.split(\"\\n\");\n        log(files);\n\n        let parse = /(\\w+) (.+)/;\n        for(let item of list) {\n            let [_, type, name] = parse.exec(item);\n\n            if(type == \"Rule\"){\n                let rule = await Rule.getByName(\"UAT\", name);\n                rule._localpath = files.filter(x => x.includes(name) && x.includes(\"rules\"))[0];\n                rule.path = rule._localpath;\n                log(rule._localpath);\n                chain.rules.arr.push(rule);\n            }else if(type == \"Preset\"){\n                let preset = await Preset.getByName(\"UAT\", name);\n                preset._localpath = files.filter(x => x.includes(name) && x.includes(\"presets\"))[0];\n                preset.path = preset._localpath;\n                log(preset._localpath);\n                chain.presets.arr.push(preset);\n            }\n        }\n\n        await chain.log();\n\n        //let maybeFile = files.filter(\n\n        await chain.syncTo(\"LOCAL\");\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async getJobs(args){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: \"presetName=DCTC Add Element US Checkin\",\n            },\n        });\n\n        log(req.map(x => x.relationships.asset.data.id).join(\"\\n\"))\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test4(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                filter: `createdBefore=${Date.now() - 1000 * 160 * 24 * 60 * 60},createdSince=${Date.now() - 1000 * 170 * 24 * 60 * 60}`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n\n    async test5(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: `state=Queued,presetName=E2 P4101 - DNE Compliance Edit - US Output Deal - Edit WorkOrder`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async deleteOmneons(args){\n        let id = args._.shift();\n\n        let asset;\n        if(Number(id)) {\n            asset = await Asset.getById(\"PROD\", Number(id));\n        }else{\n            asset = await Asset.getByName(\"PROD\", id);\n        }\n\n        log(asset);\n        let f = await asset.getFiles();\n\n        for(let file of f){\n            if(file.label.includes(\"Omneon\")){\n                log(`removing ${file.label}`);\n                await file.delete();\n            }\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset({canSelectNone: false});\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule({canSelectNone: false});\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => (ev.resource == \"Rule\" || ev.resource == \"WorkflowRule\");\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        elog(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n\n    async gf(args){\n        let a = await Asset.getById(args.env, args._.shift());\n        let f = await a.getFiles();\n        log(f);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        for await (let object of ParIter.keepalive().generator()){\n            log(object);\n        };\n    },\n\n    async test2(){\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`Rally Tools {yellow v${packageVersion}} CLI\\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    let envs = new Set([\"LOCAL\", \"UAT\", \"DEV\", \"PROD\", \"QA\", ...Object.keys(configObject.api)]);\n\n    let proms = [];\n    for(let env of envs){\n        proms.push({env, prom: funcs.testAccess(env)});\n    }\n\n    //API Access tests\n    for(let {env, prom} of proms){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let [result, timer] = await prom;\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK} {gray ${timer} ms}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (???)}`;\n                }\n            }else if(e.error?.code === \"ETIMEDOUT\"){\n                resultStr = chalk`{red Timeout (>2s)}`;\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error}}`;\n            }else{\n                resultStr = chalk`{red Internal Error: (oh no!)}`;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(typeof(argv.config) === \"string\"){\n        loadConfig(argv.config);\n    }else if(typeof(argv.config) === \"object\") {\n        loadConfigFromArgs(argv);\n    }else{\n        loadConfig();\n    }\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"script\"]){\n        configObject.script = true;\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    if(argv[\"update-immutable\"]){\n        configObject.updateImmutable = true;\n    }\n\n    if(argv[\"skip-header\"]){\n        configObject.skipHeader = true;\n    }\n\n    configObject.globalProgress = argv[\"show-progress\"] || false;\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n                process.exit(1);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n\n    process.exit(0);\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n        process.exit(1);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    loadConfig();\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","write","global","noecho","on","chunk","stdin","end","time","timestr","exitCode","log","console","process","elog","error","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","trim","AbortError","indexPath","opts","maxParallelRequests","index","IndexObject","fullResults","clearProgress","size","globalProgress","repeat","drawProgress","i","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","funcs","f","indexPathFast","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","ResoultionError","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","length","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","item","remote","metastring","data","endpoint","included","push","getByName","filter","getAllPreCollect","getAll","datas","pageSize","sort","all","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","links","organization","sleep","setTimeout","zip","items","iters","r","next","done","value","unordered","proms","encapsulatedPromises","ind","result","race","undefined","range","linkToPage","page","baselink","initializeFirstRequest","initOpts","allResults","observe","noCollect","first","currentPageRequest","hasHit404","getNextRequestLink","getNextRequestPromise","promiseID","cancel","willCancel","chunksize","currentPromises","requestResult","orderedObjectKeys","keys","newDict","Array","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Notification","notifications","home","colon","siloLike","pathTransform","slice","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","Rule","subProject","pathResolve","ignoreMissing","missing","subproject","newShell","transitions","updatedAt","createdAt","isGeneric","acclimatize","Preset","saveA","createIfNotExist","saveB","localpath","uploadRemote","immutable","idMap","res","patchStrip","starred","passMetadata","errorMetadata","_localpath","join","repodir","preset","pNext","eNext","proType","dynamicNexts","enterNotif","errorNotif","passNotif","sub","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","require","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","provider","loadLocals","Class","basePath","objs","basename","selectLocal","typeName","canSelectNone","objsMap","selectLocalMenu","none","selectPreset","purpose","selectRule","question","def","ok","saveConfig","newConfigObject","ask","print","newConfig","mode","File","parent","sizeHR","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","values","instances","round","units","unitIdx","instancesList","n","assign","rslURL","instance","storageLocationName","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","match","exec","includeFilename","printOutLine","eLine","getArtifact","artifact","jobid","art","catch","_","getInfo","trace","output","tracelineRegex","parseTraceLine","info","full","parsed","content","absoluteTime","presetName","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","Asset","lite","metadata","normalizeMetadata","newMetadata","md","getMetadata","forceRefresh","req","patchMetadata","Workflow","fakePreset","startEphemeralEvaluateIdeal","Metadata","createNew","getFiles","refresh","_files","addFile","label","fileuris","startWorkflow","jobName","initData","priority","startAnonWorkflow","dynamicPresetData","isBinary","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","dots","self","state","startEvaluate","presetid","rename","newName","migrate","targetEnv","_mdPromise","targetAsset","fileCreations","possibleInstances","inst","addFileInstance","tagList","newInst","lastModified","random","asset","fileData","newFile","script","downloadFile","destFolder","files","c","filePath","deleteFile","listJobs","jobs","rule","workflowRule","artifactsList","reorderPromises","p","k","e1","_a","e2","_b","completedAt","evals","zipped","grep","nameOnly","ordering","highlight","parts","parseLine","lines","matching","rawOutput","moment","replay","colorRequest","worstRegexEver","matchAll","groups","analyze","exists","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","localmetadatapath","systemManaged","fromMetadata","providerType","realpath","getLocalPath","ptype","test","regex","matches","runTest","saveLocal","saveLocalMetadata","saveLocalFile","shouldTest","uploadCodeToEnv","save","saved","downloadCode","headerRegex","hasHeader","header","substring","_code","v","endsWith","name_regex","findStringsInCode","strings","str","RegExp","_path","_nameOuter","_nameInner","updateImmutable","convertImports","convertIncludes","isEval","providerName","uploadPresetData","skipHeader","headerText","Date","format","grabMetadata","deleteRemoteVersion","includeMetadata","uploadResult","dt","ptid","oldName","providerDataFilename","parseHeaderInfo","abs","built","author","build","version","branch","commit","local","tryFormats","isUTC","date","utc","isValid","offset","fromNow","printRemoteInfo","importName","printDepends","indent","locals","seen","includeRegex","inc","include","SupplyChain","startingRule","stopRule","downloadPresetCode","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","add","neededPresets","neededRules","notif","verbose","deleteTo","syncTo","fails","finalErrors","stage","User","Tag","prefix","curated","create","notCurated","curate","Stage","before","setStageId","stageid","downloadStage","stageData","stagePreset","uploadStage","$init","$info","claimedPresets","owner","$claim","newClaimed","ownerName","filterwith","newClaim","getBranches","branches","branchList","lastSlash","lastIndexOf","checkCurrentBranch","runGit","oks","g","list","editFSM","allBranches","newStagedBranches","qqs","$edit","needsInput","clean","oldStagedBranches","asarray","difference","s1","s2","has","intersect","y","diffText","newStagedCommits","doGit","runRally","$pull","makeOldStage","makeNewStage","originName","_2","hash","oldStagedCommits","err","expected","status","diff","$testrr","categorizeString","chain","hasClaimed","claim","unknown","install","rallyFunctions","bestPagintation","silentAPI","timeEnd","uploadPresets","createFunc","testAccess","lstatSync","isDirectory","timed","defaultSubproject","ret","SdviContentMover","SdviEvaluate","SdviEvalPro","argv","argparse","string","boolean","protect","alias","printHelp","help","getFilesFromArgs","lastArg","shift","getStdin","presetsub","$grab","remo","$create","configHelpers","baseCode","$list","attach","$upload","$deleteRemote","preset2","$diff","tempfile","temp","extension","ptr","command","stdio","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","tagsub","tags","tag","$curate","supplysub","$calc","stopName","stop","postAction","to","otherPresets","printPresets","otherPreset","anyDifferent","$make","hints","hint","allIndexBundle","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","ln","traceInfo","getTraceInfo","ident","pro","econfig","raw","completions","prop","helperName","silo","s","Silo","uuid","digits","pow","anon","launchArg","fileArg","arrayify","getInitData","initDataFile","ephemeralEval","jobData","pullList","checkSegments","segments","userMetaData","reduce","lastSegment","curSegment","startTime","endTime","getJobs","listAssets","noRelationships","listSegments","segs","test4","things","test5","test2","wfr","wfrm","test3","deleteOmneons","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","timedist","audit2","findIDs","getAssets","callid","lastResult","lastCall","assets","gf","ParIter","generator","noop","unknownCommand","noCommand","packageVersion","prom","resultStr","timer","$main","enabled","level","defaultEnv","_old","white","exit","main","stack","module","exports"],"mappings":"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"}