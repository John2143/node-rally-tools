{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/file.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/trace.js","src/index.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.log(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if((response.stateCode === 202 || response.statusCode === 201) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) await opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    static async keepalive(func, inputData, {chunksize = 20, observe = async _=>_, progress = configObject.globalProgress} = {}){\n        let total = inputData ? inputData.length : func.length;\n        let i = 0;\n        let createPromise = () => {\n            let ret;\n            if(i >= total) return [];\n            if(inputData){\n                ret = [i, func(inputData[i])];\n            }else{\n                ret = [i, func[i]()];\n            }\n\n            i++;\n            return ret;\n        }\n\n        let values = [];\n        let finished = 0;\n        if(progress) process.stderr.write(\"\\n\");\n        let threads = [...this.range(chunksize)].map(async whichThread => {\n            while(true){\n                let [i, currentPromise] = createPromise();\n                if(i == undefined) break;\n                values[i] = await observe(await currentPromise);\n                if(progress) this.drawProgress(++finished, total);\n            }\n        });\n        await Promise.all(threads);\n        if(progress) process.stderr.write(\"\\n\");\n\n\n        return values;\n    }\n\n    static *range(start, end){\n        if(end === undefined){\n            end = start;\n            start = 0;\n        }\n        while(start < end) yield start++;\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        //Create a copy of the options in case we need to have a special first request\n        let start = opts.start || 1;\n        let initOpts = {...opts};\n        if(opts.pageSize){\n            initOpts.qs = {...opts.qs};\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\n        }\n\n        let json = await this.makeAPIRequest(initOpts);\n\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = await this.keepalive(\n            this.makeAPIRequest,\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\n                .map(i => ({...opts, path_full: linkToPage(i)})),\n            {chunksize: opts.chunksize, observe: opts.observe},\n        );\n        if(start == 1){\n            allResults.unshift(json);\n        }\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow && false){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Workflow`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Workflow\n                        },\n                    }\n                }\n            });\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(){\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        providerData: Buffer.from(preset.code, \"binary\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\");\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(\".\");\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(300);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() !== \"NOUPLOAD\"){\n            let headers = {};\n            //binary presets\n            if(this.relationships?.providerType?.data?.name == \"Vantage\"){\n                this.code = Buffer.from(this.code, \"utf8\");\n                this.code = this.code.toString(\"base64\");\n                headers[\"Content-Transfer-Encoding\"] = \"base64\";\n            }\n\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets/${id}/providerData`,\n                body: this.code, method: \"PUT\", fullResponse: true, timeout: 10000,\n                headers,\n            });\n            write(chalk`code up {yellow ${res.statusCode}}, `);\n        }else{\n            write(chalk`code skipped {yellow :)}, `);\n        }\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                if(this.relationships.tagNames){\n                    payload.relationships = {tagNames: this.relationships.tagNames};\n                }\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode == 500){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return;\n                }\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getInfo(env, jobid){\n    log(env, jobid);\n    let trace = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/trace`,\n    }).catch(x => null);\n\n    let renderedPreset = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/preset`,\n    }).catch(x => null);\n\n    let result = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/result`,\n    }).catch(x => null);\n\n    let error = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/error`,\n    }).catch(x => null);\n\n    let output = lib.makeAPIRequest({\n        env, path: `/jobs/${jobid}/artifacts/output`,\n    }).catch(x => null);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        lineNumber = /^[\\w ]+:(\\d+):/g.exec(errLine);\n        if(lineNumber && lineNumber[1]){\n            errorList.push(await findLineInFile(renderedPreset, lineNumber[1]));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile};\nexport default Trace;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"copy\" | \"move\" | \"delete\",\n\n            \"source\": {\n                \"optional\": true | false,\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"labels\": [\"<label>\" | \"*\", ],\n                    \"tags\": [\"<tag>\", ],\n                    \"storageSet\": [\"<storage location name>\" | \"*\", ],    # only valid for move & delete tasks\n                    \"expandCollections\": true | false\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>/<path>/<file>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            },\n\n            \"destination\": {\n                \"name\": \"<path within the storage location>/<filename>\",\n                \"overwrite\": \"never\" | \"notInAnyAsset\" | \"notInOtherAsset\" | \"always\",\n                \"storageMetadata\": {\"<key>\": \"<value>\",...} | \"<sourceStorageMetadata>\",\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"storage\": \"<storage location name>\",\n                    \"newLabel\": \"<fileLabel>\",\n                    \"newTags\": [\"<tag>\", \"<tag>\"],\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            }\n        },\n\n        {\n            <another task>\n        },\n\n        {\n            <another task>\n        },\n\n        ...\n\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`, SdviEvalPro: `'''\nname: {name}\n'''\n\nimport rally\n\ndef evalMain(context):\n    # code here`,\n};\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let basePath = configObject.repodir;\n    let f = await readdir(basePath);\n    let objs = f.filter(name => name.includes(path)).map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n\n    if(canSelectNone) objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig, loadConfigFromArgs} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace, findLineInFile, getInfo as getTraceInfo} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        if(!args[\"only-metadata\"]) preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset({canSelectNone: false});\n        let passNext = await configHelpers.selectRule({purpose: \"'On Exit OK'\"});\n        let errorNext = await configHelpers.selectRule({purpose: \"'On Exit Error'\"});\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule({purpose: \"dynamic next\"})){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, args._.shift());\n    }\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                preset.code      = preset.code.replace(/[\\r\\n ]/, \"\");\n                otherPreset.code = otherPreset.code.replace(/[\\r\\n ]/, \"\");\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n                }\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list or create.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n        let ln = args._.shift();\n        if(!ln){\n            log(\"is trace\");\n            let traceInfo = await parseTrace(args.env, jobId);\n\n            for(let line of traceInfo){\n                if(typeof(line) == \"string\"){\n                    log(chalk.red(line));\n                }else{\n                    printOutLine(line);\n                }\n            }\n        }else{\n            log(\"is ln\");\n            let {renderedPreset} = await getTraceInfo(args.env, jobId);\n            return findLineInFile(renderedPreset, Number(ln));\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    @helpText(`create/modify asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Options are create, delete, launch, addfile, metadata, show, patchMetadata, and launchEvalute. You can supply multiple actions to chain them`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`~`,  `--anon`,       chalk`Supply this if no asset is needed (used to lauch anonymous workflows)`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch and launchEvalute)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    @arg(`~`,  `--metadata`,   chalk`Metadata to use with patchMetadata. Can be string, or {white @path/to/file} for a file. Data must contain a top level key Metadata, or Workflow. Metadata will be pached into METADATA. Workflow will be patched into WORKFLOW_METADATA(not currently available)`)\n    @arg(`~`,  `--priority`,   chalk`set the priority of all launched jobs`)\n    @arg(`~`,  `--new-name`,    chalk`set the new name`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        while(arg = args._.shift()){\n\n            if(arg === \"launch\"){\n                let initData = arrayify(args[\"init-data\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, {initData, priority: args.priority})\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, {initData, priority: args.priority})\n                }\n                launchArg++;\n            }else if(arg === \"launchEvaluate\"){\n                let initData = arrayify(args[\"init-data\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let jobData;\n                let ephemeralEval = false;\n                let p;\n                if(jobName.startsWith(\"@\")){\n                    ephemeralEval = true;\n                    jobData = readFileSync(jobName.slice(1));\n                }else{\n                    p = await Preset.getByName(env, jobName);\n                    if(!p){\n                        throw new AbortError(`Cannot launch preset ${jobName}, does not exist (?)`);\n                    }else{\n                        log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                    }\n                }\n\n\n                if(ephemeralEval){\n                    await Asset.startEphemeralEvaluateIdeal(env, p.id, initData)\n                }else{\n                    await asset.startEvaluate(p.id, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\" || arg == \"load\"){\n                if(asset.lite) asset = await Asset.getById(env, asset.id);\n                if(arg == \"show\") log(asset);\n            }else if(arg === \"metadata\" || arg === \"md\"){\n                log(await asset.getMetadata());\n            }else if(arg === \"patchMetadata\"){\n                let initData = arrayify(args[\"metadata\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                initData = JSON.parse(initData);\n\n                await asset.patchMetadata(initData);\n            }else if(arg === \"rename\"){\n                let newName = args[\"new-name\"];\n                let oldName = asset.name;\n                await asset.rename(newName);\n                log(chalk`Rename: {green ${oldName}} -> {green ${newName}}`);\n            }\n        }\n        if(configObject.rawOutput) return asset;\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async getJobs(args){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: \"presetName=DCTC Add Element US Checkin\",\n            },\n        });\n\n        log(req.map(x => x.relationships.asset.data.id).join(\"\\n\"))\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test4(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                filter: `createdBefore=${Date.now() - 1000 * 47 * 24 * 60 * 60},createdSince=${Date.now() - 1000 * 66 * 24 * 60 * 60}`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n\n    async test5(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: `state=Queued,presetName=E2 P4101 - DNE Compliance Edit - US Output Deal - Edit WorkOrder`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset({canSelectNone: false});\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule({canSelectNone: false});\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Rule\";\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        log(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        let asset = await Asset.getByName(\"UAT\", args.name);\n        log(asset);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    let envs = new Set([\"LOCAL\", \"UAT\", \"DEV\", \"PROD\", \"QA\", ...Object.keys(configObject.api)]);\n\n    let proms = [];\n    for(let env of envs){\n        proms.push({env, prom: funcs.testAccess(env)});\n    }\n\n    //API Access tests\n    for(let {env, prom} of proms){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n\n            let result = await prom;\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error.errno}}`;\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(typeof(argv.config) === \"string\"){\n        loadConfig(argv.config);\n    }else if(typeof(argv.config) === \"object\") {\n        loadConfigFromArgs(argv);\n    }else{\n        loadConfig();\n    }\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    if(argv[\"update-immutable\"]){\n        configObject.updateImmutable = true;\n    }\n\n    configObject.globalProgress = !argv[\"hide-progress\"];\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    loadConfig();\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","stateCode","trim","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","globalProgress","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","progress","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","sleep","setTimeout","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","instances","round","Asset","lite","metadata","normalizeMetadata","newMetadata","md","getMetadata","forceRefresh","req","patchMetadata","Workflow","Metadata","createNew","getFiles","addFile","label","fileuris","Array","startWorkflow","jobName","initData","priority","startAnonWorkflow","startEphemeralEvaluateIdeal","preset","dynamicPresetData","provider","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","self","state","startEvaluate","presetid","rename","newName","home","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","asset","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","updateImmutable","uploadPresetData","grabMetadata","includeMetadata","shouldTest","tagNames","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rawOutput","syncTo","rule","User","Tag","prefix","curated","create","notCurated","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","index","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","includeFilename","printOutLine","eLine","getInfo","jobid","trace","catch","error","output","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","SdviContentMover","SdviEvaluate","SdviEvalPro","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","canSelectNone","basePath","objsMap","none","selectPreset","purpose","selectRule","question","def","ok","argv","argparse","string","boolean","protect","alias","printHelp","help","substring","getFilesFromArgs","lastArg","shift","files","getStdin","stdin","presetsub","before","$grab","full","remo","$create","configHelpers","baseCode","$list","attach","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","categorizeString","defaultSubproject","tagsub","tags","tag","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","ln","traceInfo","getTraceInfo","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","anon","launchArg","fileArg","arrayify","jobData","ephemeralEval","oldName","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","getJobs","listAssets","noRelationships","listSegments","segs","test4","things","Date","test5","test2","wfr","wfrm","test3","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","moment","date","format","timedist","fromNow","audit2","findIDs","getAssets","callid","lastResult","lastCall","content","assets","noop","unknownCommand","noCommand","packageVersion","proms","prom","resultStr","errno","$main","enabled","level","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}