{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/index.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import { homedir } from \"os\";\r\nimport { readFileSync } from \"fs\";\r\n\r\nexport let configFile = homedir() + \"/.rallyconfig\";\r\n\r\nlet configObject;\r\nexport function loadConfig(file) {\r\n  if (file) configFile = file;\r\n\r\n  configObject = { hasConfig: true };\r\n  try {\r\n    let json = readFileSync(configFile);\r\n    configObject = JSON.parse(json);\r\n    configObject.hasConfig = true;\r\n  } catch (e) {\r\n    if (e.code == \"ENOENT\") {\r\n      configObject.hasConfig = false;\r\n      //ok, they should probably make a config\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport function setConfig(obj) {\r\n  configObject = obj;\r\n}\r\n\r\nexport function getPrefix() {\r\n  if (configObject.prefix) {\r\n    return configObject.prefix + \" - \";\r\n  }\r\n  return \"\";\r\n}\r\n\r\nloadConfig();\r\n\r\nexport { configObject };\r\n","//these are the help entries for each command\r\nexport let helpEntries = {};\r\nlet helpEntry = name =>\r\n  helpEntries[name] ? helpEntries[name] : (helpEntries[name] = { name });\r\n\r\n//short description\r\nexport function helpText(text) {\r\n  return function(func, name) {\r\n    helpEntry(name).text = text;\r\n    return func;\r\n  };\r\n}\r\n\r\n//flag type argument like -f or --file\r\nexport function arg(long, short, desc) {\r\n  return function(func, name) {\r\n    let args = (helpEntry(name).args = helpEntry(name).args || []);\r\n    args.unshift({ long, short, desc });\r\n    return func;\r\n  };\r\n}\r\n\r\n//normal argument\r\nexport function param(param, desc) {\r\n  return function(func, name) {\r\n    let params = (helpEntry(name).params = helpEntry(name).params || []);\r\n    params.unshift({ param, desc });\r\n    return func;\r\n  };\r\n}\r\n\r\n//usage string\r\nexport function usage(usage) {\r\n  return function(func, name) {\r\n    usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\r\n    helpEntry(name).usage = usage;\r\n    return func;\r\n  };\r\n}\r\n\r\nexport function cachedgetter(target, key, desc) {\r\n  let cachedVal;\r\n\r\n  let oldget = desc.get;\r\n  desc.get = function() {\r\n    if (cachedVal) return cachedVal;\r\n    return (cachedVal = oldget.call(this));\r\n  };\r\n  desc.set = function(val) {\r\n    cachedVal = val;\r\n  };\r\n}\r\n\r\nfunction findValueInCache(args, cache) {\r\n  for (let [argsKey, value] of cache) {\r\n    if (args.length !== argsKey.length) continue;\r\n    for (let i in argsKey) {\r\n      if (args[i] !== argsKey[i]) {\r\n        continue;\r\n      }\r\n    }\r\n    return { found: true, value };\r\n  }\r\n  return { found: false };\r\n}\r\n\r\n//This decorator takes a function and returns a function that remembers the\r\n//  value returned by given arguments\r\nexport function cached(target, key, desc) {\r\n  let oldFunc = desc.value;\r\n  let cachedValues = [];\r\n  function newFunc(...args) {\r\n    let { found, value } = findValueInCache(args, cachedValues);\r\n    if (!found) {\r\n      //Call the old function to find the value, then store it in the cache\r\n      value = oldFun(...args);\r\n      cachedValues.push([args, value]);\r\n    }\r\n    return value;\r\n  }\r\n  newFunc.clearCache = function() {\r\n    cachedValues = [];\r\n  };\r\n  newFunc.cachePush = function(args, value) {\r\n    cachedValues.push([args, value]);\r\n  };\r\n  newFunc.remove = function(...args) {\r\n    let { found, value } = findValueInCache(args, cachedValues);\r\n    if (found) {\r\n      cachedValues = cachedValues.filter(([arg, item]) => item !== value);\r\n    }\r\n  };\r\n\r\n  return {\r\n    ...desc,\r\n    value: newFunc\r\n  };\r\n}\r\n\r\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\r\n//function returns obj.a.b.c\r\nfunction deepAccess(obj, path) {\r\n  let o = obj;\r\n  for (let key of path) {\r\n    if (!o) return [];\r\n    o = o[key];\r\n  }\r\n  return o;\r\n}\r\n\r\n//This takes a class as the first argument, then adds a getter/setter pair that\r\n//corresponds to an object in this.data\r\nexport function defineAssoc(classname, shortname, path) {\r\n  path = path.split(\".\");\r\n  let lastKey = path.pop();\r\n\r\n  Object.defineProperty(classname.prototype, shortname, {\r\n    get() {\r\n      return deepAccess(this, path)[lastKey];\r\n    },\r\n    set(val) {\r\n      deepAccess(this, path)[lastKey] = val;\r\n    }\r\n  });\r\n}\r\n\r\nimport { spawn as cp_spawn } from \"child_process\";\r\nimport { performance } from \"perf_hooks\";\r\n\r\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\r\nexport function spawn(options, ...args) {\r\n  if (typeof options !== \"object\") {\r\n    args.unshift(options);\r\n    options = {};\r\n  }\r\n  //todo options\r\n  return new Promise((resolve, reject) => {\r\n    let start = performance.now();\r\n\r\n    let stdout = \"\";\r\n    let stderr = \"\";\r\n    let cp = cp_spawn(...args);\r\n\r\n    if (cp.stdout)\r\n      cp.stdout.on(\"data\", chunk => {\r\n        stdout += chunk;\r\n        write(chunk);\r\n      });\r\n    if (cp.stderr)\r\n      cp.stderr.on(\"data\", chunk => {\r\n        stderr += chunk;\r\n        write(chunk);\r\n      });\r\n\r\n    cp.on(\"error\", reject);\r\n    cp.on(\"close\", code => {\r\n      let end = performance.now();\r\n      let time = end - start;\r\n      let timestr =\r\n        time > 1000 ? ((time / 100) | 0) / 10 + \"s\" : (time | 0) + \"ms\";\r\n      resolve({ stdout, stderr, exitCode: code, time, timestr });\r\n    });\r\n  });\r\n}\r\n","import chalk from \"chalk\";\r\nimport { configObject, getPrefix } from \"./config.js\";\r\nimport { cached } from \"./decorators.js\";\r\nconst rp = importLazy(\"request-promise\");\r\n\r\nglobal.chalk = chalk;\r\nglobal.log = (...text) => console.log(...text);\r\nglobal.write = (...text) => process.stdout.write(...text);\r\nglobal.elog = (...text) => console.log(...text);\r\nglobal.ewrite = (...text) => process.stderr.write(...text);\r\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\r\n\r\nexport class lib {\r\n  //This function takes 2 required arguments:\r\n  // env: the environment you wish to use\r\n  // and either:\r\n  //  'path', the short path to the resource. ex '/presets/'\r\n  //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\r\n  //\r\n  // If the method is anything but GET, either payload or body should be set.\r\n  // payload should be a javascript object to be turned into json as the request body\r\n  // body should be a string that is passed as the body. for example: the python code of a preset.\r\n  //\r\n  // qs are the querystring parameters, in a key: value object.\r\n  // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\r\n  //\r\n  // headers are the headers of the request. \"Content-Type\" is already set if\r\n  //   payload is given as a parameter\r\n  //\r\n  // fullResponse should be true if you want to receive the request object,\r\n  //  not just the returned data.\r\n  static async makeAPIRequest({\r\n    env,\r\n    path,\r\n    path_full,\r\n    fullPath,\r\n    payload,\r\n    body,\r\n    method = \"GET\",\r\n    qs,\r\n    headers = {},\r\n    fullResponse = false,\r\n    timeout = configObject.timeout || 20000\r\n  }) {\r\n    //backwards compatability from ruby script\r\n    if (fullPath) path_full = fullPath;\r\n    //Keys are defined in environment variables\r\n    let config = configObject?.api?.[env];\r\n    if (!config) {\r\n      throw new UnconfiguredEnvError(env);\r\n    }\r\n    //Protect PROD and UAT(?) if the --no-protect flag was not set.\r\n    if (method !== \"GET\" && !configObject.dangerModify) {\r\n      if ((env === \"UAT\" && configObject.restrictUAT) || env === \"PROD\") {\r\n        throw new ProtectedEnvError(env);\r\n      }\r\n    }\r\n\r\n    let rally_api_key = config.key;\r\n    let rally_api = config.url;\r\n    if (path && path.startsWith(\"/v1.0/\")) {\r\n      rally_api = rally_api.replace(\"/api/v2\", \"/api\");\r\n    }\r\n\r\n    path = path_full || rally_api + path;\r\n    if (payload) {\r\n      body = JSON.stringify(payload, null, 4);\r\n    }\r\n    if (configObject.vvverbose) {\r\n      if (payload || body) {\r\n        log(payload || body);\r\n      }\r\n    }\r\n\r\n    if (payload) {\r\n      headers[\"Content-Type\"] = \"application/vnd.api+json\";\r\n    }\r\n\r\n    let requestOptions = {\r\n      method,\r\n      body,\r\n      qs,\r\n      uri: path,\r\n      timeout,\r\n      auth: { bearer: rally_api_key },\r\n      headers: {\r\n        //SDVI ignores this header sometimes.\r\n        Accept: \"application/vnd.api+json\",\r\n        ...headers\r\n      },\r\n      simple: false,\r\n      resolveWithFullResponse: true\r\n    };\r\n\r\n    let response;\r\n    try {\r\n      response = await rp(requestOptions);\r\n      if (configObject.vverbose || configObject.vvverbose) {\r\n        log(chalk`${method} @ ${response.request.uri.href}`);\r\n      }\r\n    } catch (e) {\r\n      if (e?.cause.code === \"ESOCKETTIMEDOUT\") {\r\n        throw new APIError(response || {}, requestOptions, body);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    //Throw an error for any 5xx or 4xx\r\n    if (\r\n      !fullResponse &&\r\n      ![200, 201, 202, 203, 204].includes(response.statusCode)\r\n    ) {\r\n      throw new APIError(response, requestOptions, body);\r\n    }\r\n    let contentType = response.headers[\"content-type\"];\r\n    let isJSONResponse =\r\n      contentType === \"application/vnd.api+json\" ||\r\n      contentType === \"application/json\";\r\n\r\n    if (configObject.vvverbose) {\r\n      log(response.body);\r\n    }\r\n\r\n    if (fullResponse) {\r\n      return response;\r\n    } else if (isJSONResponse) {\r\n      try {\r\n        return JSON.parse(response.body);\r\n      } catch (e) {\r\n        log(response.body);\r\n        throw new AbortError(\"Body is not valid json: \");\r\n      }\r\n    } else {\r\n      return response.body;\r\n    }\r\n  }\r\n\r\n  //Index a json endpoint that returns a {links} field.\r\n  //This function returns the merged data objects as an array\r\n  //\r\n  //Additional options (besides makeAPIRequest options):\r\n  // - Observe: function to be called for each set of data from the api\r\n  static async indexPath(env, path) {\r\n    let all = [];\r\n\r\n    let opts = typeof env === \"string\" ? { env, path } : env;\r\n    let json = await this.makeAPIRequest(opts);\r\n\r\n    let [numPages, pageSize] = this.numPages(json.links.last);\r\n    //log(`num pages: ${numPages} * ${pageSize}`);\r\n\r\n    all = [...json.data];\r\n    while (json.links.next) {\r\n      json = await this.makeAPIRequest({ ...opts, path_full: json.links.next });\r\n      if (opts.observe) await opts.observe(json.data);\r\n      all = [...all, ...json.data];\r\n    }\r\n\r\n    return all;\r\n  }\r\n\r\n  //Returns number of pages and pagination size\r\n  static numPages(str) {\r\n    return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\r\n  }\r\n\r\n  static arrayChunk(array, chunkSize) {\r\n    let newArr = [];\r\n    for (let i = 0; i < array.length; i += chunkSize) {\r\n      newArr.push(array.slice(i, i + chunkSize));\r\n    }\r\n    return newArr;\r\n  }\r\n\r\n  static async doPromises(promises, result = [], cb) {\r\n    for (let promise of promises) {\r\n      let res = await promise;\r\n      result.push(res);\r\n      if (cb) {\r\n        cb(res.data);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static clearProgress(size = 30) {\r\n    process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\r\n  }\r\n\r\n  static async drawProgress(i, max, size = process.stdout.columns - 15 || 15) {\r\n    if (size > 45) size = 45;\r\n    let pct = Number(i) / Number(max);\r\n    //clamp between 0 and 1\r\n    pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\r\n    let numFilled = Math.floor(pct * size);\r\n    let numEmpty = size - numFilled;\r\n\r\n    this.clearProgress(size);\r\n    process.stderr.write(\r\n      `[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`\r\n    );\r\n  }\r\n\r\n  static async keepalive(\r\n    func,\r\n    inputData,\r\n    { chunksize, observe = async _ => _ } = {}\r\n  ) {\r\n    let total = inputData ? inputData.length : func.length;\r\n    let i = 0;\r\n    let createPromise = () => {\r\n      let ret;\r\n      if (i >= total) return [];\r\n      if (inputData) {\r\n        ret = [i, func(inputData[i])];\r\n      } else {\r\n        ret = [i, func[i]()];\r\n      }\r\n\r\n      i++;\r\n      return ret;\r\n    };\r\n\r\n    let values = [];\r\n    let finished = 0;\r\n    process.stderr.write(\"\\n\");\r\n    let threads = [...this.range(20)].map(async whichThread => {\r\n      while (true) {\r\n        let [i, currentPromise] = createPromise();\r\n        if (i == undefined) break;\r\n        values[i] = await observe(await currentPromise);\r\n        this.drawProgress(++finished, total);\r\n      }\r\n    });\r\n    await Promise.all(threads);\r\n    process.stderr.write(\"\\n\");\r\n\r\n    return values;\r\n  }\r\n\r\n  static *range(start, end) {\r\n    if (end === undefined) {\r\n      end = start;\r\n      start = 0;\r\n    }\r\n    while (start < end) yield start++;\r\n  }\r\n\r\n  //Index a json endpoint that returns a {links} field.\r\n  //\r\n  //This function is faster than indexPath because it can guess the pages it\r\n  //needs to retrieve so that it can request all assets at once.\r\n  //\r\n  //This function assumes that the content from the initial request is the\r\n  //first page, so starting on another page may cause issues. Consider\r\n  //indexPath for that.\r\n  //\r\n  //Additional opts, besides default indexPath opts:\r\n  // - chunksize[10]: How often to break apart concurrent requests\r\n  static async indexPathFast(env, path) {\r\n    let opts = typeof env === \"string\" ? { env, path } : env;\r\n    //Create a copy of the options in case we need to have a special first request\r\n    let start = opts.start || 1;\r\n    let initOpts = { ...opts };\r\n    if (opts.pageSize) {\r\n      initOpts.qs = { ...opts.qs };\r\n      initOpts.qs.page = `${start}p${opts.pageSize}`;\r\n    }\r\n\r\n    let json = await this.makeAPIRequest(initOpts);\r\n\r\n    if (opts.observe && opts.start !== 1) json = await opts.observe(json);\r\n\r\n    let baselink = json.links.first;\r\n    const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\r\n\r\n    let [numPages, pageSize] = this.numPages(json.links.last);\r\n\r\n    //Construct an array of all the requests that are done simultanously.\r\n    //Assume that the content from the inital request is the first page.\r\n    let allResults = await this.keepalive(\r\n      this.makeAPIRequest,\r\n      [...this.range(start + 1, Number(numPages) + 1 || opts.limit + 1)].map(\r\n        i => ({ ...opts, path_full: linkToPage(i) })\r\n      ),\r\n      { chunksize: opts.chunksize, observe: opts.observe }\r\n    );\r\n    if (start == 1) {\r\n      allResults.unshift(json);\r\n    }\r\n    this.clearProgress();\r\n\r\n    let all = [];\r\n    for (let result of allResults) {\r\n      for (let item of result.data) {\r\n        all.push(item);\r\n      }\r\n    }\r\n\r\n    return all;\r\n  }\r\n  static isLocalEnv(env) {\r\n    return !env || env === \"LOCAL\" || env === \"LOC\";\r\n  }\r\n  static envName(env) {\r\n    if (this.isLocalEnv(env)) return \"LOCAL\";\r\n    return env;\r\n  }\r\n}\r\n\r\nexport class AbortError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.name = \"AbortError\";\r\n  }\r\n}\r\n\r\nexport class APIError extends Error {\r\n  constructor(response, opts, body) {\r\n    super(chalk`\r\n{reset Request returned} {yellow ${response?.statusCode}}{\r\n{green ${JSON.stringify(opts, null, 4)}}\r\n{green ${body}}\r\n{reset ${response.body}}\r\n===============================\r\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\r\n===============================\r\n        `);\r\n    this.response = response;\r\n    this.opts = opts;\r\n    this.body = body;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n    this.name = \"ApiError\";\r\n  }\r\n}\r\n\r\nexport class UnconfiguredEnvError extends AbortError {\r\n  constructor(env) {\r\n    super(\"Unconfigured environment: \" + env);\r\n    this.name = \"Unconfigured Env Error\";\r\n  }\r\n}\r\n\r\nexport class ProtectedEnvError extends AbortError {\r\n  constructor(env) {\r\n    super(\"Protected environment: \" + env);\r\n    this.name = \"Protected Env Error\";\r\n  }\r\n}\r\n\r\nexport class Collection {\r\n  constructor(arr) {\r\n    this.arr = arr;\r\n  }\r\n  [Symbol.iterator]() {\r\n    return this.arr[Symbol.iterator]();\r\n  }\r\n  findById(id) {\r\n    return this.arr.find(x => x.id == id);\r\n  }\r\n  findByName(name) {\r\n    return this.arr.find(x => x.name == name);\r\n  }\r\n  findByNameContains(name) {\r\n    return this.arr.find(x => x.name.includes(name));\r\n  }\r\n  log() {\r\n    for (let d of this) {\r\n      if (d) {\r\n        log(d.chalkPrint(true));\r\n      } else {\r\n        log(chalk`{red (None)}`);\r\n      }\r\n    }\r\n  }\r\n  get length() {\r\n    return this.arr.length;\r\n  }\r\n}\r\n\r\nexport class RallyBase {\r\n  static handleCaching() {\r\n    if (!this.cache) this.cache = [];\r\n  }\r\n  static isLoaded(env) {\r\n    if (!this.hasLoadedAll) return;\r\n    return this.hasLoadedAll[env];\r\n  }\r\n  static async getById(env, id, qs) {\r\n    this.handleCaching();\r\n    for (let item of this.cache) {\r\n      if (\r\n        (item.id == id && item.remote === env) ||\r\n        `${env}-${id}` === item.metastring\r\n      )\r\n        return item;\r\n    }\r\n\r\n    let data = await lib.makeAPIRequest({\r\n      env,\r\n      path: `/${this.endpoint}/${id}`,\r\n      qs\r\n    });\r\n    if (data.data) {\r\n      let o = new this({\r\n        data: data.data,\r\n        remote: env,\r\n        included: data.included\r\n      });\r\n      this.cache.push(o);\r\n      return o;\r\n    }\r\n  }\r\n\r\n  static async getByName(env, name, qs) {\r\n    this.handleCaching();\r\n    for (let item of this.cache) {\r\n      if (item.name === name && item.remote === env) return item;\r\n    }\r\n\r\n    let data = await lib.makeAPIRequest({\r\n      env,\r\n      path: `/${this.endpoint}`,\r\n      qs: { ...qs, filter: `name=${name}` + (qs ? qs.filter : \"\") }\r\n    });\r\n    //TODO included might not work correctly here\r\n    if (data.data[0]) {\r\n      let o = new this({\r\n        data: data.data[0],\r\n        remote: env,\r\n        included: data.included\r\n      });\r\n      this.cache.push(o);\r\n      return o;\r\n    }\r\n  }\r\n\r\n  static async getAllPreCollect(d) {\r\n    return d;\r\n  }\r\n  static async getAll(env) {\r\n    this.handleCaching();\r\n    let datas = await lib.indexPathFast({\r\n      env,\r\n      path: `/${this.endpoint}`,\r\n      pageSize: \"50\",\r\n      qs: { sort: \"id\" }\r\n    });\r\n    datas = await this.getAllPreCollect(datas);\r\n    let all = new Collection(\r\n      datas.map(data => new this({ data, remote: env }))\r\n    );\r\n    this.cache = [...this.cache, ...all.arr];\r\n    return all;\r\n  }\r\n  static async removeCache(env) {\r\n    this.handleCaching();\r\n    this.cache = this.cache.filter(x => x.remote !== env);\r\n  }\r\n\r\n  //Specific turns name into id based on env\r\n  //Generic turns ids into names\r\n  async resolveApply(type, dataObj, direction) {\r\n    let obj;\r\n    if (direction == \"generic\") {\r\n      obj = await type.getById(this.remote, dataObj.id);\r\n      if (obj) {\r\n        dataObj.name = obj.name;\r\n      }\r\n    } else if (direction == \"specific\") {\r\n      obj = await type.getByName(this.remote, getPrefix() + dataObj.name);\r\n      if (obj) {\r\n        dataObj.id = obj.id;\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  //Type is the baseclass you are looking for (should extend RallyBase)\r\n  //name is the name of the field\r\n  //isArray is true if it has multiple cardinailty, false if it is single\r\n  //direction gets passed directly to resolveApply\r\n  async resolveField(type, name, isArray = false, direction = \"generic\") {\r\n    // ignore empty fields\r\n    let field = this.relationships[name];\r\n    if (!field?.data) return;\r\n\r\n    if (isArray) {\r\n      return await Promise.all(\r\n        field.data.map(o => this.resolveApply(type, o, direction))\r\n      );\r\n    } else {\r\n      return await this.resolveApply(type, field.data, direction);\r\n    }\r\n  }\r\n\r\n  cleanup() {\r\n    for (let [key, val] of Object.entries(this.relationships)) {\r\n      //Remove ids from data\r\n      if (val.data) {\r\n        if (val.data.id) {\r\n          delete val.data.id;\r\n        } else if (val.data[0]) {\r\n          for (let x of val.data) delete x.id;\r\n        }\r\n      }\r\n      delete val.links;\r\n    }\r\n    // organization is unused (?)\r\n    delete this.relationships.organization;\r\n    // id is specific to envs\r\n    // but save source inside meta string in case we need it\r\n    this.metastring = this.remote + \"-\" + this.data.id;\r\n    delete this.data.id;\r\n    // links too\r\n    delete this.data.links;\r\n  }\r\n}\r\n","import { cached, defineAssoc } from \"./decorators.js\";\r\nimport { lib, Collection, RallyBase } from \"./rally-tools.js\";\r\n\r\nclass Provider extends RallyBase {\r\n  constructor({ data, remote }) {\r\n    super();\r\n    this.data = data;\r\n    this.meta = {};\r\n    this.remote = remote;\r\n  }\r\n  //cached\r\n  async getEditorConfig() {\r\n    if (this.editorConfig) return this.editorConfig;\r\n\r\n    this.editorConfig = await lib.makeAPIRequest({\r\n      env: this.remote,\r\n      path_full: this.data.links.editorConfig\r\n    });\r\n    this.editorConfig.fileExt = await this.getFileExtension();\r\n    return this.editorConfig;\r\n  }\r\n  static async getAllPreCollect(providers) {\r\n    return providers.sort((a, b) => {\r\n      return (\r\n        a.attributes.category.localeCompare(b.attributes.category) ||\r\n        a.attributes.name.localeCompare(b.attributes.name)\r\n      );\r\n    });\r\n  }\r\n\r\n  async getFileExtension() {\r\n    let config = await this.getEditorConfig();\r\n    let map = {\r\n      python: \"py\",\r\n      text: \"txt\",\r\n      getmap(key) {\r\n        if (this.name === \"Aurora\") return \"zip\";\r\n        if (this[key]) return this[key];\r\n        return key;\r\n      }\r\n    };\r\n    return map.getmap(config.lang);\r\n  }\r\n\r\n  chalkPrint(pad = true) {\r\n    let id = String(this.id);\r\n    if (pad) id = id.padStart(4);\r\n    return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\r\n  }\r\n}\r\n\r\ndefineAssoc(Provider, \"id\", \"data.id\");\r\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\r\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\r\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\r\nProvider.endpoint = \"providerTypes\";\r\n\r\nexport default Provider;\r\n","import { cached, defineAssoc } from \"./decorators.js\";\r\nimport { lib, Collection, RallyBase } from \"./rally-tools.js\";\r\n\r\nclass Asset extends RallyBase {\r\n  constructor({ data, remote, included }) {\r\n    super();\r\n    this.data = data;\r\n    this.meta = {};\r\n    this.remote = remote;\r\n    if (included) {\r\n      this.meta.metadata = Asset.normalizeMetadata(included);\r\n    }\r\n  }\r\n  static normalizeMetadata(payload) {\r\n    let newMetadata = {};\r\n    for (let md of payload) {\r\n      if (md.type !== \"metadata\") continue;\r\n      newMetadata[md.attributes.usage] = md.attributes.metadata;\r\n    }\r\n    return newMetadata;\r\n  }\r\n\r\n  static lite(id, remote) {\r\n    return new this({ data: { id }, remote });\r\n  }\r\n\r\n  chalkPrint(pad = false) {\r\n    let id = String(\r\n      \"A-\" + ((this.remote && this.remote + \"-\" + this.id) || \"LOCAL\")\r\n    );\r\n    if (pad) id = id.padStart(15);\r\n    return chalk`{green ${id}}: {blue ${\r\n      this.data.attributes ? this.name : \"(lite asset)\"\r\n    }}`;\r\n  }\r\n\r\n  static async createNew(name, env) {\r\n    let req = await lib.makeAPIRequest({\r\n      env,\r\n      path: \"/assets\",\r\n      method: \"POST\",\r\n      payload: {\r\n        data: {\r\n          attributes: { name },\r\n          type: \"assets\"\r\n        }\r\n      }\r\n    });\r\n    return new this({ data: req.data, remote: env });\r\n  }\r\n\r\n  async delete() {\r\n    let req = await lib.makeAPIRequest({\r\n      env: this.remote,\r\n      path: \"/assets/\" + this.id,\r\n      method: \"DELETE\"\r\n    });\r\n  }\r\n\r\n  async addFile(label, fileuris) {\r\n    if (!Array.isArray(fileuris)) fileuris = [fileuris];\r\n\r\n    let instances = {};\r\n    for (let i = 0; i < fileuris.length; i++) {\r\n      instances[String(i + 1)] = { uri: fileuris[i] };\r\n    }\r\n\r\n    let req = await lib.makeAPIRequest({\r\n      env: this.remote,\r\n      path: \"/files\",\r\n      method: \"POST\",\r\n      payload: {\r\n        data: {\r\n          attributes: {\r\n            label,\r\n            instances\r\n          },\r\n          relationships: {\r\n            asset: {\r\n              data: {\r\n                id: this.id,\r\n                type: \"assets\"\r\n              }\r\n            }\r\n          },\r\n          type: \"files\"\r\n        }\r\n      }\r\n    });\r\n    return req;\r\n  }\r\n  async startWorkflow(jobName, initData) {\r\n    let attributes;\r\n    if (initData) {\r\n      //Convert init data to string\r\n      initData =\r\n        typeof initData === \"string\" ? initData : JSON.stringify(initData);\r\n      attributes = { initData };\r\n    }\r\n\r\n    let req = await lib.makeAPIRequest({\r\n      env: this.remote,\r\n      path: \"/workflows\",\r\n      method: \"POST\",\r\n      payload: {\r\n        data: {\r\n          type: \"workflows\",\r\n          attributes,\r\n          relationships: {\r\n            movie: {\r\n              data: {\r\n                id: this.id,\r\n                type: \"movies\"\r\n              }\r\n            },\r\n            rule: {\r\n              data: {\r\n                attributes: {\r\n                  name: jobName\r\n                },\r\n                type: \"rules\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return req;\r\n  }\r\n  async startEvaluate(presetid) {\r\n    // Fire and forget.\r\n    let data = await lib.makeAPIRequest({\r\n      env: this.remote,\r\n      path: \"/jobs\",\r\n      method: \"POST\",\r\n      payload: {\r\n        data: {\r\n          type: \"jobs\",\r\n          relationships: {\r\n            movie: {\r\n              data: {\r\n                id: this.id,\r\n                type: \"movies\"\r\n              }\r\n            },\r\n            preset: {\r\n              data: {\r\n                id: presetid,\r\n                type: \"presets\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n}\r\n\r\ndefineAssoc(Asset, \"id\", \"data.id\");\r\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\r\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\r\nAsset.endpoint = \"movies\";\r\n\r\nexport default Asset;\r\n","import fs from \"fs\";\r\nimport { dirname } from \"path\";\r\n\r\nimport { configObject } from \"./config.js\";\r\nimport { homedir } from \"os\";\r\n\r\nconst home = homedir();\r\nconst colon = /:/g;\r\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\r\nexport function pathTransform(path) {\r\n  if (path.includes(\":\")) {\r\n    //Ignore the first colon in window-like filesystems\r\n    path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\r\n  }\r\n  if (configObject.invertedPath) {\r\n    path = path.replace(siloLike, \"$2-$1.$3\");\r\n  }\r\n  if (path.includes(\"\\\\342\\\\200\\\\220\")) {\r\n    path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\r\n  }\r\n  return path;\r\n}\r\n\r\nexport function readFileSync(path, options) {\r\n  return fs.readFileSync(pathTransform(path), options);\r\n}\r\n//Create writefilesync, with ability to create directory if it doesnt exist\r\nexport function writeFileSync(path, data, options, dircreated = false) {\r\n  path = pathTransform(path);\r\n  try {\r\n    return fs.writeFileSync(path, data, options);\r\n  } catch (e) {\r\n    if (dircreated) throw e;\r\n    let directory = dirname(path);\r\n    try {\r\n      fs.statSync(directory);\r\n      throw e;\r\n    } catch (nodir) {\r\n      fs.mkdirSync(directory);\r\n      return writeFileSync(path, data, options, true);\r\n    }\r\n  }\r\n}\r\n","import { RallyBase, lib, AbortError, Collection } from \"./rally-tools.js\";\r\nimport { basename, resolve as pathResolve, dirname } from \"path\";\r\nimport { cached, defineAssoc } from \"./decorators.js\";\r\nimport { configObject, getPrefix } from \"./config.js\";\r\nimport Provider from \"./providers.js\";\r\nimport Asset from \"./asset.js\";\r\n\r\nimport { writeFileSync, readFileSync } from \"./fswrap.js\";\r\nimport path from \"path\";\r\n\r\nlet exists = {};\r\n\r\nclass Preset extends RallyBase {\r\n  constructor({ path, remote, data, subProject } = {}) {\r\n    // Get full path if possible\r\n    if (path) {\r\n      path = pathResolve(path);\r\n      if (dirname(path).includes(\"silo-metadata\")) {\r\n        throw new AbortError(\"Constructing preset from metadata file\");\r\n      }\r\n    }\r\n\r\n    super();\r\n\r\n    // Cache by path\r\n    if (path) {\r\n      if (exists[path]) return exists[path];\r\n      exists[path] = this;\r\n    }\r\n\r\n    this.meta = {};\r\n    this.subproject = subProject;\r\n    this.remote = remote;\r\n    if (lib.isLocalEnv(this.remote)) {\r\n      if (path) {\r\n        this.path = path;\r\n        let pathspl = this.path.split(\".\");\r\n        this.ext = pathspl[pathspl.length - 1];\r\n        try {\r\n          this.code = this.getLocalCode();\r\n        } catch (e) {\r\n          if (e.code === \"ENOENT\" && configObject.ignoreMissing) {\r\n            this.missing = true;\r\n            return undefined;\r\n          } else {\r\n            log(chalk`{red Node Error} ${e.message}`);\r\n            throw new AbortError(\"Could not load code of local file\");\r\n          }\r\n        }\r\n        let name = this.parseFilenameForName() || this.parseCodeForName();\r\n        try {\r\n          this.data = this.getLocalMetadata();\r\n          this.isGeneric = true;\r\n          name = this.name;\r\n        } catch (e) {\r\n          log(\r\n            chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${\r\n              this.localmetadatapath\r\n            }`\r\n          );\r\n          this.data = Preset.newShell();\r\n          this.isGeneric = false;\r\n        }\r\n        this.name = name;\r\n      } else {\r\n        this.data = Preset.newShell();\r\n      }\r\n    } else {\r\n      this.data = data;\r\n      //this.name = data.attributes.name;\r\n      //this.id = data.id;\r\n      this.isGeneric = false;\r\n    }\r\n    this.data.attributes.rallyConfiguration = undefined;\r\n    this.data.attributes.systemManaged = undefined;\r\n  }\r\n  //Given a metadata file, get its actual file\r\n  static async fromMetadata(path, subproject) {\r\n    let data;\r\n    try {\r\n      data = JSON.parse(readFileSync(path));\r\n    } catch (e) {\r\n      if (e.code === \"ENOENT\" && configObject.ignoreMissing) {\r\n        return null;\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n    let providerType = data.relationships.providerType.data.name;\r\n    let provider = await Provider.getByName(\"DEV\", providerType);\r\n\r\n    if (!provider) {\r\n      log(\r\n        chalk`{red The provider type {green ${providerType}} does not exist}`\r\n      );\r\n      log(chalk`{red Skipping {green ${path}}.}`);\r\n      return null;\r\n    }\r\n\r\n    let ext = await provider.getFileExtension();\r\n    let name = data.attributes.name;\r\n\r\n    let realpath = Preset.getLocalPath(name, ext, subproject);\r\n    return new Preset({ path: realpath, subProject: subproject });\r\n  }\r\n\r\n  static newShell() {\r\n    return {\r\n      attributes: {\r\n        providerSettings: {}\r\n      },\r\n      relationships: {},\r\n      type: \"presets\"\r\n    };\r\n  }\r\n  cleanup() {\r\n    super.cleanup();\r\n    delete this.attributes[\"createdAt\"];\r\n    delete this.attributes[\"updatedAt\"];\r\n  }\r\n  async acclimatize(env) {\r\n    if (!this.isGeneric)\r\n      throw new AbortError(\"Cannot acclimatize non-generics or shells\");\r\n    let providers = await Provider.getAll(env);\r\n    let ptype = this.relationships[\"providerType\"];\r\n    ptype = ptype.data;\r\n\r\n    let provider = providers.findByName(ptype.name);\r\n    ptype.id = provider.id;\r\n  }\r\n  get test() {\r\n    if (!this.code) return;\r\n\r\n    const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\r\n    let match;\r\n    let matches = [];\r\n    while ((match = regex.exec(this.code))) {\r\n      matches.push(match[1]);\r\n    }\r\n    return matches;\r\n  }\r\n  async runTest(env) {\r\n    let remote = await Preset.getByName(env, this.name);\r\n    for (let test of this.test) {\r\n      log(\"Tests...\");\r\n      let asset;\r\n\r\n      if (test.startsWith(\"id\")) {\r\n        let match = /id:\\s*(\\d+)/g.exec(test);\r\n        if (!match) {\r\n          log(chalk`{red Could not parse autotest} ${test}.`);\r\n          throw new AbortError(\"Could not properly parse the preset header\");\r\n        }\r\n        asset = await Asset.getById(env, match[1]);\r\n      } else {\r\n        asset = await Asset.getByName(env, test);\r\n      }\r\n\r\n      if (!asset) {\r\n        log(chalk`{yellow No movie found}, skipping test.`);\r\n        continue;\r\n      }\r\n\r\n      log(\r\n        chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(\r\n          false\r\n        )}... `\r\n      );\r\n      await asset.startEvaluate(remote.id);\r\n    }\r\n  }\r\n  async resolve() {\r\n    if (this.isGeneric) return;\r\n\r\n    let proType = await this.resolveField(Provider, \"providerType\");\r\n\r\n    this.ext = await proType.getFileExtension();\r\n\r\n    this.isGeneric = true;\r\n\r\n    return { proType };\r\n  }\r\n  async saveLocal() {\r\n    await this.saveLocalMetadata();\r\n    await this.saveLocalFile();\r\n  }\r\n  async saveLocalMetadata() {\r\n    if (!this.isGeneric) {\r\n      await this.resolve();\r\n      this.cleanup();\r\n    }\r\n    writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\r\n  }\r\n  async saveLocalFile() {\r\n    writeFileSync(this.localpath, this.code);\r\n  }\r\n  async uploadRemote(env) {\r\n    await this.uploadCodeToEnv(env, true);\r\n  }\r\n  async save(env) {\r\n    this.saved = true;\r\n    if (!this.isGeneric) {\r\n      await this.resolve();\r\n    }\r\n\r\n    this.cleanup();\r\n    if (lib.isLocalEnv(env)) {\r\n      log(\r\n        chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`\r\n      );\r\n      await this.saveLocal();\r\n    } else {\r\n      await this.uploadRemote(env);\r\n    }\r\n  }\r\n\r\n  async downloadCode() {\r\n    if (!this.remote || this.code) return this.code;\r\n    return (this.code = await lib.makeAPIRequest({\r\n      env: this.remote,\r\n      path_full: this.data.links.providerData,\r\n      json: false\r\n    }));\r\n  }\r\n\r\n  get code() {\r\n    if (this._code) return this._code;\r\n  }\r\n  set code(v) {\r\n    this._code = v;\r\n  }\r\n\r\n  chalkPrint(pad = true) {\r\n    let id = String(\r\n      \"P-\" + ((this.remote && this.remote + \"-\" + this.id) || \"LOCAL\")\r\n    );\r\n    let sub = \"\";\r\n    if (this.subproject) {\r\n      sub = chalk`{yellow ${this.subproject}}`;\r\n    }\r\n    if (pad) id = id.padStart(10);\r\n    if (this.name == undefined) {\r\n      return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\r\n    } else if (this.meta.proType) {\r\n      return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${\r\n        this.name\r\n      }}`;\r\n    } else {\r\n      return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\r\n    }\r\n  }\r\n  parseFilenameForName() {\r\n    if (this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")) {\r\n      return basename(this.path)\r\n        .replace(\"_\", \" \")\r\n        .replace(\"-\", \" \")\r\n        .replace(\".json\", \"\")\r\n        .replace(\".jinja\", \"\");\r\n    }\r\n  }\r\n\r\n  parseCodeForName() {\r\n    const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\r\n    const match = name_regex.exec(this.code);\r\n    if (match) return match[1];\r\n  }\r\n\r\n  findStringsInCode(strings) {\r\n    if (!this.code) return [];\r\n\r\n    return strings.filter(str => {\r\n      let regex = new RegExp(str);\r\n      return !!this.code.match(regex);\r\n    });\r\n  }\r\n  static getLocalPath(name, ext, subproject) {\r\n    return path.join(\r\n      configObject.repodir,\r\n      subproject || \"\",\r\n      \"silo-presets\",\r\n      name + \".\" + ext\r\n    );\r\n  }\r\n  get localpath() {\r\n    return Preset.getLocalPath(this.name, this.ext, this.subproject);\r\n  }\r\n\r\n  get path() {\r\n    if (this._path) return this._path;\r\n  }\r\n  set path(val) {\r\n    this._path = val;\r\n  }\r\n  get name() {\r\n    return this._nameOuter;\r\n  }\r\n  set name(val) {\r\n    this._nameInner = val;\r\n    this._nameOuter = val;\r\n  }\r\n  set providerType(value) {\r\n    this.relationships[\"providerType\"] = {\r\n      data: {\r\n        ...value,\r\n        type: \"providerTypes\"\r\n      }\r\n    };\r\n  }\r\n  get localmetadatapath() {\r\n    if (this.path) {\r\n      return this.path\r\n        .replace(\"silo-presets\", \"silo-metadata\")\r\n        .replace(new RegExp(this.ext + \"$\"), \"json\");\r\n    }\r\n    return path.join(\r\n      configObject.repodir,\r\n      this.subproject || \"\",\r\n      \"silo-metadata\",\r\n      this.name + \".json\"\r\n    );\r\n  }\r\n  get immutable() {\r\n    return this.name.includes(\"Constant\");\r\n  }\r\n  async uploadPresetData(env, id) {\r\n    let res = await lib.makeAPIRequest({\r\n      env,\r\n      path: `/presets/${id}/providerData`,\r\n      body: this.code,\r\n      method: \"PUT\",\r\n      fullResponse: true,\r\n      timeout: 5000\r\n    });\r\n    write(chalk`code up {yellow ${res.statusCode}}, `);\r\n  }\r\n  async grabMetadata(env) {\r\n    let remote = await Preset.getByName(env, this.name);\r\n    this.isGeneric = false;\r\n    if (!remote) {\r\n      throw new AbortError(\r\n        `No file found on remote ${env} with name ${this.name}`\r\n      );\r\n    }\r\n    this.data = remote.data;\r\n    this.remote = env;\r\n  }\r\n  async uploadCodeToEnv(env, includeMetadata, shouldTest = true) {\r\n    if (!this.name) {\r\n      log(chalk`Failed uploading {red ${this.path}}. No name found.`);\r\n      return;\r\n    }\r\n\r\n    write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\r\n\r\n    if (this.immutable) {\r\n      log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\r\n      return;\r\n    }\r\n\r\n    //First query the api to see if this already exists.\r\n    let remote = await Preset.getByName(env, getPrefix() + this.name);\r\n\r\n    if (remote) {\r\n      //If it exists we can replace it\r\n      write(\"replace, \");\r\n      //check for env\r\n      if (includeMetadata) {\r\n        let metadata = {\r\n          data: { attributes: this.data.attributes, type: \"presets\" }\r\n        };\r\n        //changing metadata for replacement to include prefix\r\n        metadata.data.attributes.name = getPrefix() + this.name;\r\n        metadata.data.attributes.providerSettings.PresetName = this.name;\r\n        metadata.data.attributes.rallyConfiguration = this.name;\r\n        console.log(\"metadata\");\r\n        console.log(metadata);\r\n\r\n        let res = await lib.makeAPIRequest({\r\n          env,\r\n          path: `/presets/${remote.id}`,\r\n          method: \"PATCH\",\r\n          payload: metadata,\r\n          fullResponse: true\r\n        });\r\n        write(chalk`metadata {yellow ${res.statusCode}}, `);\r\n      }\r\n\r\n      await this.uploadPresetData(env, remote.id);\r\n    } else {\r\n      write(\"create, \");\r\n\r\n      let metadata = { data: this.data };\r\n      if (configObject.prefix) {\r\n        metadata.data.attributes.name = getPrefix() + this.name;\r\n        metadata.data.attributes.providerSettings.PresetName = this.name;\r\n        metadata.data.attributes.rallyConfiguration = {\r\n          OutputStorageName: null,\r\n          PresetName: this.name,\r\n          ProxyTypeName: null\r\n        };\r\n\r\n        await this.acclimatize(env);\r\n        write(\"Posting to create preset... \");\r\n        let res = await lib.makeAPIRequest({\r\n          env,\r\n          path: `/presets`,\r\n          method: \"POST\",\r\n          payload: metadata,\r\n          timeout: 5000\r\n        });\r\n        let id = res.data.id;\r\n        write(chalk`Created id {green ${id}}... Uploading Code... `);\r\n        await this.uploadPresetData(env, id);\r\n      }\r\n\r\n      if (!this.relationships[\"providerType\"]) {\r\n        throw new AbortError(\r\n          \"Cannot acclimatize shelled presets. (try creating it on the env first)\"\r\n        );\r\n      }\r\n    }\r\n    if (this.test[0] && shouldTest) {\r\n      await this.runTest(env);\r\n    } else {\r\n      log(\"No tests. Done.\");\r\n    }\r\n  }\r\n\r\n  getLocalMetadata() {\r\n    return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\r\n  }\r\n  getLocalCode() {\r\n    return readFileSync(this.path, \"utf-8\");\r\n  }\r\n}\r\n\r\ndefineAssoc(\r\n  Preset,\r\n  \"_nameInner\",\r\n  \"data.attributes.providerSettings.PresetName\"\r\n);\r\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\r\ndefineAssoc(Preset, \"id\", \"data.id\");\r\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\r\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\r\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\r\ndefineAssoc(Preset, \"_code\", \"meta.code\");\r\ndefineAssoc(Preset, \"_path\", \"meta.path\");\r\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\r\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\r\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\r\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\r\nPreset.endpoint = \"presets\";\r\n\r\nexport default Preset;\r\n","import { cached, defineAssoc } from \"./decorators.js\";\r\nimport { lib, Collection, RallyBase } from \"./rally-tools.js\";\r\n\r\nclass Notification extends RallyBase {\r\n  constructor({ data, remote }) {\r\n    super();\r\n    this.data = data;\r\n    this.meta = {};\r\n    this.remote = remote;\r\n  }\r\n\r\n  static async getAllPreCollect(notifications) {\r\n    return notifications.sort((a, b) => {\r\n      return (\r\n        a.attributes.type.localeCompare(b.attributes.type) ||\r\n        a.attributes.name.localeCompare(b.attributes.name)\r\n      );\r\n    });\r\n  }\r\n\r\n  chalkPrint(pad = false) {\r\n    let id = String(\"N-\" + this.id);\r\n    if (pad) id = id.padStart(4);\r\n    return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\r\n  }\r\n}\r\n\r\ndefineAssoc(Notification, \"id\", \"data.id\");\r\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\r\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\r\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\r\nNotification.endpoint = \"notificationPresets\";\r\n\r\nexport default Notification;\r\n","import { cached, defineAssoc } from \"./decorators.js\";\r\nimport { RallyBase, lib, Collection, AbortError } from \"./rally-tools.js\";\r\nimport { configObject, getPrefix } from \"./config.js\";\r\nimport Preset from \"./preset.js\";\r\nimport Provider from \"./providers.js\";\r\nimport Notification from \"./notification.js\";\r\n\r\nimport { writeFileSync, readFileSync } from \"./fswrap.js\";\r\nimport { join, resolve as pathResolve } from \"path\";\r\n\r\nclass Rule extends RallyBase {\r\n  constructor({ path, data, remote, subProject } = {}) {\r\n    super();\r\n    if (path) {\r\n      path = pathResolve(path);\r\n      try {\r\n        let f = readFileSync(path, \"utf-8\");\r\n        data = JSON.parse(readFileSync(path, \"utf-8\"));\r\n      } catch (e) {\r\n        if (e.code === \"ENOENT\") {\r\n          if (configObject.ignoreMissing) {\r\n            this.missing = true;\r\n            return undefined;\r\n          } else {\r\n            throw new AbortError(\"Could not load code of local file\");\r\n          }\r\n        } else {\r\n          throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\r\n        }\r\n      }\r\n    }\r\n    this.meta = {};\r\n    this.subproject = subProject;\r\n    if (!data) {\r\n      data = Rule.newShell();\r\n    }\r\n    this.data = data;\r\n    this.remote = remote;\r\n    this.isGeneric = !this.remote;\r\n  }\r\n\r\n  static newShell() {\r\n    return {\r\n      attributes: {\r\n        description: \"-\",\r\n        priority: \"PriorityNorm\",\r\n        starred: false\r\n      },\r\n      relationships: {},\r\n      type: \"workflowRules\"\r\n    };\r\n  }\r\n\r\n  async acclimatize(env) {\r\n    this.remote = env;\r\n\r\n    let preset = await this.resolveField(Preset, \"preset\", false, \"specific\");\r\n    let pNext = await this.resolveField(Rule, \"passNext\", false, \"specific\");\r\n    let eNext = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\r\n    let proType = await this.resolveField(\r\n      Provider,\r\n      \"providerType\",\r\n      false,\r\n      \"specific\"\r\n    );\r\n\r\n    let dynamicNexts = await this.resolveField(\r\n      Rule,\r\n      \"dynamicNexts\",\r\n      true,\r\n      \"specific\"\r\n    );\r\n\r\n    let enterNotif = await this.resolveField(\r\n      Notification,\r\n      \"enterNotifications\",\r\n      true,\r\n      \"specific\"\r\n    );\r\n    let errorNotif = await this.resolveField(\r\n      Notification,\r\n      \"errorNotifications\",\r\n      true,\r\n      \"specific\"\r\n    );\r\n    let passNotif = await this.resolveField(\r\n      Notification,\r\n      \"passNotifications\",\r\n      true,\r\n      \"specific\"\r\n    );\r\n  }\r\n  async saveA(env) {\r\n    if (lib.isLocalEnv(env)) return;\r\n    return await this.createIfNotExist(env);\r\n  }\r\n  async saveB(env) {\r\n    if (!this.isGeneric) {\r\n      await this.resolve();\r\n    }\r\n    this.cleanup();\r\n    if (lib.isLocalEnv(env)) {\r\n      log(\r\n        chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`\r\n      );\r\n      writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\r\n    } else {\r\n      await this.acclimatize(env);\r\n      await this.uploadRemote(env);\r\n    }\r\n  }\r\n  get immutable() {\r\n    return false;\r\n  }\r\n  async createIfNotExist(env) {\r\n    write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\r\n\r\n    if (this.immutable) {\r\n      log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\r\n      return;\r\n    }\r\n\r\n    //First query the api to see if this already exists.\r\n    if (configObject.prefixmode == true) {\r\n      var remote = await Rule.getByName(env, getPrefix() + this.name);\r\n    } else {\r\n      var remote = await Rule.getByName(env, this.name);\r\n    }\r\n\r\n    this.idMap = this.idMap || {};\r\n\r\n    if (remote) {\r\n      this.idMap[env] = remote.id;\r\n      log(chalk`exists ${remote.chalkPrint(false)}`);\r\n      return;\r\n    }\r\n\r\n    //If it exists we can replace it.\r\n    write(\"create, \");\r\n\r\n    if (configObject.prefixmode == true) {\r\n      var res = await lib.makeAPIRequest({\r\n        env,\r\n        path: `/workflowRules`,\r\n        method: \"POST\",\r\n        payload: {\r\n          data: {\r\n            attributes: { name: getPrefix() + this.name },\r\n            type: \"workflowRules\"\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      var res = await lib.makeAPIRequest({\r\n        env,\r\n        path: `/workflowRules`,\r\n        method: \"POST\",\r\n        payload: {\r\n          data: { attributes: { name: this.name }, type: \"workflowRules\" }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.idMap = this.idMap || {};\r\n    this.idMap[env] = res.data.id;\r\n    write(\"id \");\r\n    log(this.idMap[env]);\r\n  }\r\n\r\n  async patchStrip() {\r\n    delete this.data.attributes.createdAt;\r\n    delete this.data.attributes.starred;\r\n    delete this.data.attributes.updatedAt;\r\n\r\n    // TEMP FIX FOR BUG IN SDVI\r\n    if (this.relationships.passMetadata && this.relationships.passMetadata[0]) {\r\n      log(\"HAS PASS\");\r\n      log(this.name);\r\n      log(\"HAS PASS\");\r\n    }\r\n    delete this.relationships.passMetadata;\r\n\r\n    if (\r\n      this.relationships.errorMetadata &&\r\n      this.relationships.errorMetadata[0]\r\n    ) {\r\n      log(\"HAS PASS\");\r\n      log(this.name);\r\n      log(\"HAS PASS\");\r\n    }\r\n    delete this.relationships.errorMetadata;\r\n\r\n    // This is commented out because it was fixed.\r\n    //for(let key in this.relationships){\r\n    //let relationship = this.relationships[key];\r\n    //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\r\n    //delete this.relationships[key];\r\n    //}\r\n    //}\r\n  }\r\n\r\n  async uploadRemote(env) {\r\n    write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\r\n\r\n    if (this.immutable) {\r\n      log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\r\n      return;\r\n    }\r\n\r\n    if (this.idMap[env]) {\r\n      this.remote = env;\r\n\r\n      await this.patchStrip();\r\n      this.data.id = this.idMap[env];\r\n      //If it exists we can replace it\r\n      write(\"replace, \");\r\n      let metadata = { data: this.data };\r\n\r\n      metadata.data.attributes.name = this.name;\r\n      //checking for prefix mode for attribute name and then relationships name\r\n      if (configObject.prefixmode == true) {\r\n        metadata.data.relationships.name = getPrefix() + this.name;\r\n        log(chalk.yellow`PREFIX MODE IS ON`);\r\n      } else {\r\n        metadata.data.relationships.name = this.name;\r\n        log(chalk.yellow`PREFIX MODE IS OFF`);\r\n\r\n      }\r\n\r\n      let res = await lib.makeAPIRequest({\r\n        env,\r\n        path: `/workflowRules/${this.idMap[env]}`,\r\n        method: \"PATCH\",\r\n        payload: { data: this.data },\r\n        fullResponse: true\r\n      });\r\n\r\n      log(chalk`response {yellow ${res.statusCode}}`);\r\n      if (res.statusCode !== 200) {\r\n        log(res.body);\r\n        log(JSON.stringify(this.data, null, 4));\r\n      }\r\n    } else {\r\n      throw Error(\"Bad idmap!\");\r\n    }\r\n  }\r\n\r\n  get localpath() {\r\n    return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\r\n  }\r\n\r\n  async resolve() {\r\n    let preset = await this.resolveField(Preset, \"preset\", false);\r\n    //log(preset);\r\n    let pNext = await this.resolveField(Rule, \"passNext\", false);\r\n    let eNext = await this.resolveField(Rule, \"errorNext\", false);\r\n    let proType = await this.resolveField(Provider, \"providerType\", false);\r\n\r\n    //log(\"Dynamic nexts\")\r\n    let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\r\n    //log(dynamicNexts);\r\n\r\n    let enterNotif = await this.resolveField(\r\n      Notification,\r\n      \"enterNotifications\",\r\n      true\r\n    );\r\n    let errorNotif = await this.resolveField(\r\n      Notification,\r\n      \"errorNotifications\",\r\n      true\r\n    );\r\n    let passNotif = await this.resolveField(\r\n      Notification,\r\n      \"passNotifications\",\r\n      true\r\n    );\r\n\r\n    //TODO Unsupported\r\n    delete this.relationships[\"enterMetadata\"];\r\n    delete this.relationships[\"errorMetadata\"];\r\n\r\n    this.isGeneric = true;\r\n\r\n    return {\r\n      preset,\r\n      proType,\r\n      pNext,\r\n      eNext,\r\n      dynamicNexts,\r\n      errorNotif,\r\n      enterNotif,\r\n      passNotif\r\n    };\r\n  }\r\n\r\n  chalkPrint(pad = true) {\r\n    let id = String(\r\n      \"R-\" + ((this.remote && this.remote + \"-\" + this.id) || \"LOCAL\")\r\n    );\r\n    let sub = \"\";\r\n    if (this.subproject) {\r\n      sub = chalk`{yellow ${this.subproject}}`;\r\n    }\r\n    if (pad) id = id.padStart(10);\r\n    try {\r\n      return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\r\n    } catch (e) {\r\n      return this.data;\r\n    }\r\n  }\r\n}\r\n\r\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\r\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\r\ndefineAssoc(Rule, \"id\", \"data.id\");\r\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\r\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\r\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\r\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\r\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\r\nRule.endpoint = \"workflowRules\";\r\n\r\nexport default Rule;\r\n","import Rule from \"./rule.js\";\r\nimport Preset from \"./preset.js\";\r\nimport Provider from \"./providers.js\";\r\nimport Notification from \"./notification.js\";\r\nimport { Collection, lib } from \"./rally-tools.js\";\r\nimport { configObject } from \"./config.js\";\r\n\r\n//TODO\r\n//Move project into silo metadata\r\n//move autotest into silo metadata\r\n//\r\n\r\nexport default class SupplyChain {\r\n  constructor(startingRule, stopRule) {\r\n    if (startingRule) {\r\n      this.startingRule = startingRule;\r\n      this.stopRule = stopRule;\r\n      this.remote = startingRule.remote;\r\n    }\r\n  }\r\n  async downloadPresetCode(objs = this.allPresets) {\r\n    log(\"Downloading code... \");\r\n    await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\r\n  }\r\n  async calculate() {\r\n    log(\"Getting rules... \");\r\n    this.allRules = await Rule.getAll(this.remote);\r\n    log(this.allRules.length);\r\n\r\n    log(\"Getting presets... \");\r\n    this.allPresets = await Preset.getAll(this.remote);\r\n    log(this.allPresets.length);\r\n\r\n    log(\"Getting providers... \");\r\n    this.allProviders = await Provider.getAll(this.remote);\r\n    log(this.allProviders.length);\r\n\r\n    log(\"Getting notifications... \");\r\n    this.allNotifications = await Notification.getAll(this.remote);\r\n    log(this.allNotifications.length);\r\n\r\n    if (!this.startingRule) {\r\n      this.rules = this.allRules;\r\n      this.presets = this.allPresets;\r\n      this.notifications = new Collection([]);\r\n\r\n      await this.downloadPresetCode();\r\n      return;\r\n    } else {\r\n      await this.downloadPresetCode();\r\n    }\r\n\r\n    log(\"Done!\");\r\n\r\n    //Now we have everything we need to find a whole supply chain\r\n\r\n    write(\"Calculating Supply chain... \");\r\n    log(this.startingRule.chalkPrint());\r\n\r\n    let allRuleNames = this.allRules.arr\r\n      .map(x => x.name)\r\n      .filter(x => x.length >= 4);\r\n    let allPresetNames = this.allPresets.arr\r\n      .map(x => x.name)\r\n      .filter(x => x.length >= 4);\r\n    let allNotifNames = this.allNotifications.arr\r\n      .map(x => x.name)\r\n      .filter(x => x.length >= 4);\r\n    let requiredNotifications = new Set();\r\n\r\n    let ruleQueue = [this.startingRule];\r\n    let presetQueue = [];\r\n    for (let currentRule of ruleQueue) {\r\n      if (currentRule === this.stopRule) continue;\r\n      let {\r\n        eNext,\r\n        pNext,\r\n        preset,\r\n        passNotif,\r\n        errorNotif,\r\n        enterNotif\r\n      } = await currentRule.resolve();\r\n\r\n      passNotif.forEach(n => requiredNotifications.add(n));\r\n      enterNotif.forEach(n => requiredNotifications.add(n));\r\n      errorNotif.forEach(n => requiredNotifications.add(n));\r\n\r\n      if (eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\r\n      if (pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\r\n\r\n      let neededPresets = preset.findStringsInCode(allPresetNames);\r\n      neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\r\n\r\n      let neededRules = preset.findStringsInCode(allRuleNames);\r\n      neededRules = neededRules.map(x => this.allRules.findByName(x));\r\n\r\n      preset\r\n        .findStringsInCode(allNotifNames)\r\n        .map(str => this.allNotifications.findByName(str))\r\n        .forEach(notif => requiredNotifications.add(notif));\r\n\r\n      neededPresets.push(preset);\r\n\r\n      for (let p of neededPresets)\r\n        if (!presetQueue.includes(p)) presetQueue.push(p);\r\n      for (let p of neededRules) if (!ruleQueue.includes(p)) ruleQueue.push(p);\r\n\r\n      if (configObject.verbose) {\r\n        write(currentRule.chalkPrint(false));\r\n        log(\":\");\r\n        write(\"  \");\r\n        write(preset.chalkPrint(false));\r\n        log(\":\");\r\n        write(\"  Pass Next: \");\r\n        if (pNext) write(pNext.chalkPrint(false));\r\n        else write(\"None\");\r\n        log(\"\");\r\n        write(\"  Err  Next: \");\r\n        if (eNext) write(eNext.chalkPrint(false));\r\n        else write(\"None\");\r\n        log(\"\");\r\n        log(\"  Rules:\");\r\n\r\n        for (let p of neededRules) log(\"    \" + p.chalkPrint(true));\r\n\r\n        log(\"  Presets:\");\r\n        for (let p of neededPresets) log(\"    \" + p.chalkPrint(true));\r\n\r\n        log(\"\\n\");\r\n      }\r\n    }\r\n\r\n    log(\"Done!\");\r\n\r\n    this.rules = new Collection(ruleQueue);\r\n    this.presets = new Collection(presetQueue);\r\n    requiredNotifications.delete(undefined);\r\n    this.notifications = new Collection([...requiredNotifications]);\r\n  }\r\n  async log() {\r\n    if (this.notifications.arr.length > 0) {\r\n      log(\"Required notifications: \");\r\n      this.notifications.log();\r\n    }\r\n\r\n    if (this.rules.arr.length > 0) {\r\n      write(\"Required rules: \");\r\n      log(this.rules.arr.length);\r\n      this.rules.log();\r\n    }\r\n\r\n    if (this.presets.arr.length > 0) {\r\n      write(\"Required presets: \");\r\n      log(this.presets.arr.length);\r\n      this.presets.log();\r\n    }\r\n  }\r\n  async syncTo(env) {\r\n    for (let preset of this.presets) {\r\n      try {\r\n        await preset.save(env);\r\n      } catch (e) {\r\n        log(e);\r\n      }\r\n    }\r\n    if (this.rules.arr[0]) {\r\n      log(\"Starting create phase for rules\");\r\n      for (let rule of this.rules) {\r\n        try {\r\n          await rule.saveA(env);\r\n        } catch (e) {\r\n          log(e);\r\n        }\r\n      }\r\n\r\n      log(\"OK\");\r\n      log(\"Starting link phase for rules\");\r\n      Rule.removeCache(env);\r\n\r\n      for (let rule of this.rules) {\r\n        try {\r\n          await rule.saveB(env);\r\n        } catch (e) {\r\n          log(e);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { cached, defineAssoc } from \"./decorators.js\";\r\nimport { lib, Collection, RallyBase } from \"./rally-tools.js\";\r\n\r\nclass User extends RallyBase {\r\n  constructor({ data, remote }) {\r\n    super();\r\n    this.data = data;\r\n    this.meta = {};\r\n    this.remote = remote;\r\n  }\r\n  chalkPrint(pad = false) {\r\n    let id = String(\"U-\" + this.id);\r\n    if (pad) id = id.padStart(7);\r\n    return chalk`{green ${id}}: {blue ${this.name}}`;\r\n  }\r\n}\r\n\r\ndefineAssoc(User, \"id\", \"data.id\");\r\ndefineAssoc(User, \"name\", \"data.attributes.name\");\r\ndefineAssoc(User, \"email\", \"data.attributes.email\");\r\ndefineAssoc(User, \"remote\", \"meta.remote\");\r\nUser.endpoint = \"users\";\r\n\r\nexport default User;\r\n","require(\"source-map-support\").install();\r\n\r\nimport { lib } from \"./rally-tools.js\";\r\nimport { cached } from \"./decorators.js\";\r\n\r\nexport { default as SupplyChain } from \"./supply-chain.js\";\r\nexport { default as Preset } from \"./preset.js\";\r\nexport { default as Rule } from \"./rule.js\";\r\nexport { default as Provider } from \"./providers.js\";\r\nexport { default as Notification } from \"./notification.js\";\r\nexport { default as Asset } from \"./asset.js\";\r\nexport { default as User } from \"./user.js\";\r\n\r\nexport * from \"./config.js\";\r\n\r\nexport * from \"./rally-tools.js\";\r\n\r\nexport const rallyFunctions = {\r\n  async bestPagintation() {\r\n    global.silentAPI = true;\r\n    for (let i = 10; i <= 30; i += 5) {\r\n      console.time(\"test with \" + i);\r\n      let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\r\n      console.timeEnd(\"test with \" + i);\r\n    }\r\n  },\r\n  async uploadPresets(env, presets, createFunc = () => false) {\r\n    for (let preset of presets) {\r\n      await preset.uploadCodeToEnv(env, createFunc);\r\n    }\r\n  },\r\n  //Dummy test access\r\n  async testAccess(env) {\r\n    if (lib.isLocalEnv(env)) {\r\n      //TODO\r\n      return true;\r\n    }\r\n    let result = await lib.makeAPIRequest({\r\n      env,\r\n      path: \"/providers?page=1p1\",\r\n      fullResponse: true,\r\n      timeout: 1000\r\n    });\r\n    return result.statusCode;\r\n  }\r\n};\r\n","export default {\r\n  SdviContentMover: `{\r\n    \"tasks\": [\r\n        {\r\n            \"operation\": \"move\",\r\n            \"source\": {\r\n                \"labels\": [ \"MyLabel\" ],\r\n                \"tags\": [ \"segmented\" ]\r\n                \"storageSet\": [ \"*\", \"-OtherStorageBucket\" ],\r\n\r\n            },\r\n            \"destination\": {\r\n                \"storage\": \"Archive\",\r\n                \"newLabel\": \"myNewLabel\",\r\n                \"overwrite\": \"always\"\r\n            }\r\n        }\r\n    ]\r\n}`,\r\n  SdviEvaluate: `'''\r\nname: {name}\r\n'''\r\n\r\n# code here`\r\n};\r\n","import { configObject } from \"./config.js\";\r\nimport { join } from \"path\";\r\nimport Preset from \"./preset.js\";\r\nimport Rule from \"./rule.js\";\r\nexport const inquirer = importLazy(\"inquirer\");\r\nconst readdir = importLazy(\"recursive-readdir\");\r\n\r\nlet hasAutoCompletePrompt = false;\r\nexport function addAutoCompletePrompt() {\r\n  if (hasAutoCompletePrompt) return;\r\n  hasAutoCompletePrompt = true;\r\n  inquirer.registerPrompt(\r\n    \"autocomplete\",\r\n    require(\"inquirer-autocomplete-prompt\")\r\n  );\r\n}\r\n\r\nexport async function $api(propArray) {\r\n  let q;\r\n  q = await inquirer.prompt([\r\n    {\r\n      type: \"input\",\r\n      name: \"company\",\r\n      message: `What is your company?`,\r\n      default: `discovery`\r\n    }\r\n  ]);\r\n\r\n  let company = q.company;\r\n\r\n  const defaults = {\r\n    DEV: `https://${company}-dev.sdvi.com/api/v2`,\r\n    UAT: `https://${company}-uat.sdvi.com/api/v2`,\r\n    QA: `https://${company}-qa.sdvi.com/api/v2`,\r\n    PROD: `https://${company}.sdvi.com/api/v2`\r\n  };\r\n\r\n  if (propArray && propArray[1]) {\r\n    q = { envs: [propArray[1]] };\r\n  } else {\r\n    //Create a checkbox prompt to choose environments\r\n    q = await inquirer.prompt([\r\n      {\r\n        type: \"checkbox\",\r\n        name: \"envs\",\r\n        message: `What environments would you like to configure?`,\r\n        choices: Object.keys(defaults).map(name => ({ name, checked: true }))\r\n      }\r\n    ]);\r\n  }\r\n\r\n  //Each env should ask 2 for two things: The url and the key.\r\n  let questions = q.envs.map(env => {\r\n    let defaultKey = process.env[`rally_api_key_${env}`];\r\n    if (configObject && configObject.api && configObject.api[env]) {\r\n      defaultKey = configObject.api[env].key;\r\n    }\r\n\r\n    return [\r\n      {\r\n        type: \"input\",\r\n        name: `api.${env}.url`,\r\n        message: `What is the api endpoint for ${env}?`,\r\n        default: defaults[env]\r\n      },\r\n      {\r\n        type: \"input\",\r\n        name: `api.${env}.key`,\r\n        message: `What is your api key for ${env}?`,\r\n        default: defaultKey\r\n      }\r\n    ];\r\n  });\r\n\r\n  //flatten and ask\r\n  questions = [].concat(...questions);\r\n  q = await inquirer.prompt(questions);\r\n  if (propArray) {\r\n    q.api = { ...configObject.api, ...q.api };\r\n  }\r\n  return q;\r\n}\r\nexport async function $chalk(propArray) {\r\n  return {\r\n    chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")\r\n  };\r\n}\r\nexport async function $restrictUAT(propArray) {\r\n  return { restrictUAT: await askQuestion(\"Would you like to protect UAT?\") };\r\n}\r\nexport async function $repodir(propArray) {\r\n  return await inquirer.prompt([\r\n    {\r\n      type: \"input\",\r\n      name: `repodir`,\r\n      message: `Where is your rally repository?`,\r\n      default: process.env[\"rally_repo_path\"]\r\n    }\r\n  ]);\r\n}\r\n\r\nexport async function $prefixmode(propArray) {\r\n  return { prefixmode: await askQuestion(\"Would you like to use a prefix?\") };\r\n}\r\n\r\nexport async function $project(propArray) {\r\n  let project = await askInput(\"Subproject directory?\");\r\n  if (project === \"none\" || project === \"-\" || project === \"\" || !project) {\r\n    project = null;\r\n  }\r\n  return { project };\r\n}\r\n\r\nexport async function $defaultEnv(propArray) {\r\n  return await inquirer.prompt([\r\n    {\r\n      type: \"input\",\r\n      name: `defaultEnv`,\r\n      message: `Default environment?`,\r\n      default: \"DEV\"\r\n    }\r\n  ]);\r\n}\r\n\r\n//Internal usage/testing\r\nexport async function selectProvider(providers, autoDefault = false) {\r\n  addAutoCompletePrompt();\r\n  let defaultProvider = providers.findByName(\"SdviEvaluate\");\r\n  if (autoDefault) {\r\n    return defaultProvider;\r\n  } else {\r\n    let choices = providers.arr.map(x => ({\r\n      name: x.chalkPrint(true),\r\n      value: x\r\n    }));\r\n    let q = await inquirer.prompt([\r\n      {\r\n        type: \"autocomplete\",\r\n        name: \"provider\",\r\n        default: defaultProvider,\r\n        source: async (sofar, input) => {\r\n          return choices.filter(x =>\r\n            input\r\n              ? x.value.name.toLowerCase().includes(input.toLowerCase())\r\n              : true\r\n          );\r\n        }\r\n      }\r\n    ]);\r\n    return q.provider;\r\n  }\r\n}\r\n\r\nexport async function selectLocal(path, typeName, Class) {\r\n  addAutoCompletePrompt();\r\n  let basePath = join(configObject.repodir, path);\r\n  let f = await readdir(basePath);\r\n  let objs = f.map(name => new Class({ path: name }));\r\n  let objsMap = objs.map(x => ({\r\n    name: x.chalkPrint(true),\r\n    value: x\r\n  }));\r\n  let none = {\r\n    name: chalk`      {red None}: {red None}`,\r\n    value: null\r\n  };\r\n  objsMap.unshift(none);\r\n\r\n  let q = await inquirer.prompt([\r\n    {\r\n      type: \"autocomplete\",\r\n      name: \"obj\",\r\n      message: `What ${typeName} do you want?`,\r\n      source: async (sofar, input) => {\r\n        return objsMap.filter(x =>\r\n          input ? x.name.toLowerCase().includes(input.toLowerCase()) : true\r\n        );\r\n      }\r\n    }\r\n  ]);\r\n  return q.obj;\r\n}\r\n\r\nexport async function selectPreset(purpose = \"preset\") {\r\n  return selectLocal(\"silo-presets\", purpose, Preset);\r\n}\r\nexport async function selectRule(purpose = \"rule\") {\r\n  return selectLocal(\"silo-rules\", purpose, Rule);\r\n}\r\n\r\nexport async function askInput(name, question, def) {\r\n  return (await inquirer.prompt([\r\n    {\r\n      type: \"input\",\r\n      name: \"ok\",\r\n      message: question,\r\n      default: def\r\n    }\r\n  ])).ok;\r\n}\r\n\r\nexport async function askQuestion(question) {\r\n  return (await inquirer.prompt([\r\n    {\r\n      type: \"confirm\",\r\n      name: \"ok\",\r\n      message: question\r\n    }\r\n  ])).ok;\r\n}\r\n","import { getPrefix } from \"./index\";\r\nimport { join, resolve as pathResolve } from \"path\";\r\n\r\nrequire(\"source-map-support\").install();\r\n\r\nimport argparse from \"minimist\";\r\nimport * as allIndexBundle from \"./index.js\";\r\nimport {\r\n  rallyFunctions as funcs,\r\n  Preset,\r\n  Rule,\r\n  SupplyChain,\r\n  Provider,\r\n  Asset,\r\n  User,\r\n  AbortError,\r\n  UnconfiguredEnvError,\r\n  Collection,\r\n  APIError\r\n} from \"./index.js\";\r\n\r\nimport { version as packageVersion } from \"../package.json\";\r\nimport { configFile, configObject, loadConfig } from \"./config.js\";\r\nimport { readFile, readFileSync, writeFileSync } from \"fs\";\r\n\r\nimport {\r\n  helpText,\r\n  arg,\r\n  param,\r\n  usage,\r\n  helpEntries,\r\n  spawn\r\n} from \"./decorators.js\";\r\n\r\nimport baseCode from \"./baseCode.js\";\r\nimport { sep as pathSeperator } from \"path\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport * as configHelpers from \"./config-create.js\";\r\nimport { inquirer } from \"./config-create\";\r\nconst False = false;\r\nconst True = true;\r\nconst None = null;\r\n\r\nlet argv = argparse(process.argv.slice(2), {\r\n  string: [\"file\", \"env\", \"prefixmode\"],\r\n  //boolean: [\"no-protect\"],\r\n  default: { protect: true, prefixmode: true },\r\n  alias: {\r\n    f: \"file\",\r\n    e: \"env\",\r\n    p: \"prefixmode\"\r\n  }\r\n});\r\n\r\n//help menu helper\r\nfunction printHelp(help, short) {\r\n  let helpText = chalk`\r\n{white ${help.name}}: ${help.text}\r\n    Usage: ${help.usage || \"<unknown>\"}\r\n`;\r\n  //Trim newlines\r\n  helpText = helpText.substring(1, helpText.length - 1);\r\n\r\n  if (!short) {\r\n    for (let param of help.params || []) {\r\n      helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`;\r\n    }\r\n    for (let arg of help.args || []) {\r\n      helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${\r\n        arg.desc\r\n      }`;\r\n    }\r\n  }\r\n\r\n  return helpText;\r\n}\r\n\r\nasync function getFilesFromArgs(args) {\r\n  let lastArg = args._.shift();\r\n  if (args.file) {\r\n    let files = args.file;\r\n    if (typeof files === \"string\") files = [files];\r\n    return files;\r\n  }\r\n\r\n  if (lastArg == \"-\") {\r\n    log(\"Reading from stdin\");\r\n    let getStdin = require(\"get-stdin\");\r\n    let stdin = await getStdin();\r\n    let files = stdin.split(\"\\n\");\r\n    if (files[files.length - 1] === \"\") files.pop();\r\n    return files;\r\n  } else {\r\n    args._.push(lastArg);\r\n  }\r\n}\r\n\r\nasync function regwritetoEnv(args) {\r\n  log(\r\n    chalk.green`Searching in specified file for hardcoded Preset and Rule names...`\r\n  );\r\n\r\n  if (configObject.prefixmode == false) {\r\n    var elements = process.argv.slice(9);\r\n  } else {\r\n    var elements = process.argv.slice(7);\r\n  }\r\n\r\n  //inquire is this is the right file name.\r\n  let filename = elements.join(\" \");\r\n  async function filenameQ(filename) {\r\n    return await inquirer\r\n      .prompt([\r\n        {\r\n          type: \"confirm\",\r\n          name: \"filename\",\r\n          message: \"Is \" + filename + \" the correct filename?\"\r\n        }\r\n      ])\r\n      .then(answers => {\r\n        //writing time\r\n        if (answers.filename != true) {\r\n          log(\r\n            chalk.red`You indicated this was not the correct filename so the program exited`\r\n          );\r\n          process.exit(22);\r\n        }\r\n      });\r\n  }\r\n  await filenameQ(filename);\r\n\r\n  //reading time\r\n  let filetext = readFileSync(filename, \"utf-8\");\r\n\r\n  // Regex and Replace time\r\n  var regex = /(@include |: |=)[\"'][N][L]/g;\r\n  var strmatch = filetext.match(regex);\r\n  // Replaces the strings found with regex with a prefixed version conditionally.\r\n  var replacementtext = filetext.replace(regex, function(strmatch) {\r\n    var prefixedmatch = \"\";\r\n    var equalpattern = \"=\";\r\n    var includepattern = \"@include \";\r\n    if (strmatch.match(equalpattern)) {\r\n      prefixedmatch = (\"='\" + getPrefix() + \"NL\").toString();\r\n    } else if (strmatch.match(includepattern)) {\r\n      prefixedmatch = (\"@include \" + '\"' + getPrefix() + \"NL\").toString();\r\n    } else {\r\n      prefixedmatch = (\": '\" + getPrefix() + \"NL\").toString();\r\n    }\r\n    return prefixedmatch;\r\n  });\r\n  //inquire before writing to disk??\r\n  async function writetofileQ(filename) {\r\n    return await inquirer\r\n      .prompt([\r\n        {\r\n          type: \"confirm\",\r\n          name: \"writetofile\",\r\n          message:\r\n            \"Do you want to add your prefix to preset/rule names in \" +\r\n            filename +\r\n            \" to disk?\"\r\n        }\r\n      ])\r\n      .then(answers => {\r\n        //writing time\r\n        if (answers.writetofile == true) {\r\n          writeFileSync(filename, replacementtext, { encoding: \"utf8\" });\r\n          log(chalk.yellow`Writing is done!`);\r\n        } else {\r\n          log(\r\n            chalk.red(`You have indicated that you do not want to write `) +\r\n              chalk.blue(filename) +\r\n              chalk.red(` to disk.`)\r\n          );\r\n          process.exit(22);\r\n        }\r\n      });\r\n  }\r\n  await writetofileQ(filename);\r\n\r\n  return subCommand(regsub)(args);\r\n}\r\n\r\nlet presetsub = {\r\n  async before(args) {\r\n    this.env = args.env;\r\n    if (!this.env) throw new AbortError(\"No env supplied\");\r\n\r\n    this.files = await getFilesFromArgs(args);\r\n  },\r\n  async $grab(args) {\r\n    if (!this.files) {\r\n      throw new AbortError(\"No files provided to grab (use --file argument)\");\r\n    }\r\n\r\n    log(\r\n      chalk`Grabbing {green ${\r\n        this.files.length\r\n      }} preset(s) metadata from {green ${this.env}}.`\r\n    );\r\n\r\n    let presets = this.files.map(path => new Preset({ path, remote: false }));\r\n    for (let preset of presets) {\r\n      //TODO small refactor\r\n      await preset.grabMetadata(this.env);\r\n      await preset.saveLocalMetadata();\r\n\r\n      if (args.full) {\r\n        let remo = await Preset.getByName(this.env, preset.name);\r\n        await remo.resolve();\r\n        await remo.downloadCode();\r\n        await remo.saveLocalFile();\r\n      }\r\n    }\r\n  },\r\n  async $create(args) {\r\n    let provider, name, ext;\r\n    if (args.provider) {\r\n      provider = { name: args.provider };\r\n      ext = args.ext;\r\n    } else {\r\n      provider = await configHelpers.selectProvider(\r\n        await Provider.getAll(this.env)\r\n      );\r\n      ext = (await provider.getEditorConfig()).fileExt;\r\n    }\r\n    if (args.name) {\r\n      name = args.name;\r\n    } else {\r\n      name = await configHelpers.askInput(\r\n        \"Preset Name\",\r\n        \"What is the preset name?\"\r\n      );\r\n    }\r\n\r\n    let preset = new Preset({ subProject: configObject.project });\r\n\r\n    preset.providerType = { name: provider.name };\r\n    preset.isGeneric = true;\r\n    preset.name = name;\r\n    preset.ext = ext;\r\n    if (baseCode[provider.name]) {\r\n      preset._code = baseCode[provider.name].replace(\"{name}\", name);\r\n    } else {\r\n      preset._code = \" \";\r\n    }\r\n\r\n    preset.saveLocalMetadata();\r\n    preset.saveLocalFile();\r\n  },\r\n  async $list(args) {\r\n    log(\"Loading...\");\r\n    let presets = await Preset.getAll(this.env);\r\n    if (args.resolve) {\r\n      Provider.getAll(this.env);\r\n      for (let preset of presets) {\r\n        let resolve = await preset.resolve(this.env);\r\n        if (args.attach) {\r\n          let { proType } = resolve;\r\n          proType.editorConfig.helpText = \"\";\r\n          preset.meta = {\r\n            ...preset.meta,\r\n            proType\r\n          };\r\n        }\r\n      }\r\n    }\r\n    if (configObject.rawOutput) return presets;\r\n    log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\r\n    presets.arr.sort((a, b) => {\r\n      return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt);\r\n    });\r\n    for (let preset of presets) {\r\n      log(preset.chalkPrint());\r\n    }\r\n  },\r\n  async $upload(args) {\r\n    if (!this.files) {\r\n      throw new AbortError(\"No files provided to upload (use --file argument)\");\r\n    }\r\n    //rewriting files\r\n    if (configObject.prefixmode == false) {\r\n      log(chalk.yellow`PREFIX MODE IS OFF`);\r\n    } else {\r\n      log(chalk.yellow`PREFIX MODE IS ON`);\r\n    }\r\n\r\n    log(chalk.green`Rewriting file inplace with regex...`);\r\n    log(\r\n      chalk.green`The preset will be uploaded to the ` +\r\n        chalk.blue(this.env) +\r\n        chalk.green(` environment...`)\r\n    );\r\n\r\n    async function noprefixQ(env) {\r\n      return await inquirer\r\n        .prompt([\r\n          {\r\n            type: \"confirm\",\r\n            name: \"noprefixenv\",\r\n            message: \"Do you want to push this prefixless code to \" + env + \"?\"\r\n          }\r\n        ])\r\n        .then(answers => {\r\n          //writing time\r\n          if (answers.noprefixenv != true) {\r\n            log(\r\n              chalk.red(\r\n                `You have indicated that you need prefixes before pushing to `\r\n              ) +\r\n                chalk.blue(env) +\r\n                chalk.red(` so the program exited`)\r\n            );\r\n            process.exit(22);\r\n          } else {\r\n            regwritetoEnv(args);\r\n          }\r\n        });\r\n    }\r\n\r\n    if (this.env == \"DEV\") {\r\n      await regwritetoEnv(args);\r\n    }\r\n    //If prefixmode is false there will be no prefix added to the code body or upload.\r\n    else if (\r\n      configObject.prefixmode == false &&\r\n      (this.env == \"UAT\") | \"QA\" | \"PROD\"\r\n    ) {\r\n      await noprefixQ(this.env);\r\n    } else {\r\n      log(chalk`there is no environment specified`);\r\n    }\r\n\r\n    //changing the this.files object to be an array of the full file name.\r\n\r\n    if (configObject.prefixmode == false) {\r\n      this.files = [\r\n        process.argv\r\n          .slice(9)\r\n          .join(\" \")\r\n          .toString()\r\n      ];\r\n    } else {\r\n      this.files = [\r\n        process.argv\r\n          .slice(7)\r\n          .join(\" \")\r\n          .toString()\r\n      ];\r\n    }\r\n\r\n    log(\r\n      chalk`Uploading {green ${this.files.length}} preset(s) to {green ${\r\n        this.env\r\n      }}.`\r\n    );\r\n\r\n    let presets = this.files.map(path => new Preset({ path, remote: false }));\r\n    await funcs.uploadPresets(this.env, presets);\r\n  },\r\n  async $diff(args) {\r\n    let file = this.files[0];\r\n    if (!this.files) {\r\n      throw new AbortError(\"No files provided to diff (use --file argument)\");\r\n    }\r\n\r\n    let preset = new Preset({ path: file, remote: false });\r\n    if (!preset.name) {\r\n      throw new AbortError(chalk`No preset header found. Cannot get name.`);\r\n    }\r\n    let preset2 = await Preset.getByName(this.env, preset.name);\r\n    if (!preset2) {\r\n      throw new AbortError(\r\n        chalk`No preset found with name {red ${preset.name}} on {blue ${\r\n          this.env\r\n        }}`\r\n      );\r\n    }\r\n    await preset2.downloadCode();\r\n\r\n    let tempfile = require(\"tempy\").file;\r\n    let temp = tempfile({ extension: `${this.env}.${preset.ext}` });\r\n    writeFileSync(temp, preset2.code);\r\n\r\n    let ptr = `${file},${temp}`;\r\n\r\n    //raw output returns \"file1\" \"file2\"\r\n    if (configObject.rawOutput) {\r\n      if (args[\"only-new\"]) return temp;\r\n      else return ptr;\r\n    }\r\n\r\n    //standard diff\r\n    argv.command = argv.command || \"diff\";\r\n    await spawn(argv.command, [file, temp], { stdio: \"inherit\" });\r\n  },\r\n  async unknown(arg, args) {\r\n    log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\r\n  }\r\n};\r\n\r\nlet rulesub = {\r\n  async before(args) {\r\n    this.env = args.env;\r\n    if (!this.env) throw new AbortError(\"No env supplied\");\r\n  },\r\n  async $list(args) {\r\n    log(\"Loading...\");\r\n    let rules = await Rule.getAll(this.env);\r\n    if (configObject.rawOutput) return rules;\r\n\r\n    log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\r\n    rules.arr.sort((a, b) => {\r\n      return (\r\n        Number(a.data.attributes.updatedAt) -\r\n        Number(b.data.attributes.updatedAt)\r\n      );\r\n    });\r\n    for (let rule of rules) log(rule.chalkPrint());\r\n  },\r\n  async $create(args) {\r\n    let preset = await configHelpers.selectPreset();\r\n    let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\r\n    let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\r\n    let name = await configHelpers.askInput(\r\n      \"Rule Name\",\r\n      \"What is the rule name?\"\r\n    );\r\n    let desc = await configHelpers.askInput(\r\n      \"Description\",\r\n      \"Enter a description.\"\r\n    );\r\n\r\n    let dynamicNexts = [];\r\n    let next;\r\n    while ((next = await configHelpers.selectRule(\"dynamic next\"))) {\r\n      let name = await configHelpers.askInput(\r\n        \"Key\",\r\n        \"Key name for dynamic next\"\r\n      );\r\n      dynamicNexts.push({\r\n        meta: {\r\n          transition: name\r\n        },\r\n        type: \"workflowRules\",\r\n        name: next.name\r\n      });\r\n    }\r\n\r\n    let rule = new Rule();\r\n    rule.name = name;\r\n    rule.description = desc;\r\n    rule.relationships.preset = {\r\n      data: { name: preset.name, type: \"presets\" }\r\n    };\r\n    if (errorNext)\r\n      rule.relationships.errorNext = {\r\n        data: { name: errorNext.name, type: \"workflowRules\" }\r\n      };\r\n    if (passNext)\r\n      rule.relationships.passNext = {\r\n        data: { name: passNext.name, type: \"workflowRules\" }\r\n      };\r\n    if (dynamicNexts[0]) {\r\n      rule.relationships.dynamicNexts = {\r\n        data: dynamicNexts\r\n      };\r\n    }\r\n\r\n    rule.saveB();\r\n  },\r\n  async unknown(arg, args) {\r\n    log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\r\n  }\r\n};\r\n\r\nlet jupytersub = {\r\n  async before(args) {\r\n    this.input = args._.shift() || \"main.ipynb\";\r\n    this.output = args._.shift() || \"main.py\";\r\n  },\r\n  async $build(args) {\r\n    let cmd = `jupyter nbconvert --to python ${\r\n      this.input\r\n    } --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${\r\n      this.output\r\n    } --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\r\n      \" \"\r\n    );\r\n    log(\r\n      chalk`Compiling GCR file {green ${this.input}} into {green ${\r\n        this.output\r\n      }} using jupyter...`\r\n    );\r\n\r\n    try {\r\n      let { timestr } = await spawn(cmd[0], cmd.slice(1));\r\n      log(chalk`Complete in ~{green.bold ${timestr}}.`);\r\n    } catch (e) {\r\n      if (e.code !== \"ENOENT\") throw e;\r\n      log(\r\n        chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`\r\n      );\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nlet regsub = {\r\n  async before(args) {\r\n    this.files = await getFilesFromArgs(args);\r\n    if (!this.files) {\r\n      throw new AbortError(\"No files provided to upload (use --file argument)\");\r\n    }\r\n  }\r\n};\r\n\r\nasync function categorizeString(str, defaultSubproject = undefined) {\r\n  str = str.trim();\r\n  if (str.startsWith('\"')) {\r\n    str = str.slice(1, -1);\r\n  }\r\n  let match;\r\n  if ((match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str))) {\r\n    if (match[1] === \"P\") {\r\n      let ret = await Preset.getById(match[2], match[3]);\r\n      //TODO modify for subproject a bit\r\n      return ret;\r\n    } else if (match[1] === \"R\") {\r\n      return await Rule.getById(match[2], match[3]);\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if ((match = /^([\\w\\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str))) {\r\n    try {\r\n      switch (match[2]) {\r\n        case \"presets\":\r\n          return new Preset({ path: str, subProject: match[1] });\r\n        case \"rules\":\r\n          return new Rule({ path: str, subProject: match[1] });\r\n        case \"metadata\":\r\n          return await Preset.fromMetadata(str, match[1]);\r\n      }\r\n    } catch (e) {\r\n      log(e);\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nlet supplysub = {\r\n  async before(args) {\r\n    this.env = args.env;\r\n    if (!this.env) throw new AbortError(\"No env supplied\");\r\n    this.files = await getFilesFromArgs(args);\r\n  },\r\n\r\n  //Calculate a supply chain based on a starting rule at the top of the stack\r\n  async $calc(args) {\r\n    let name = args._.shift();\r\n    let stopName = args._.shift();\r\n    if (!name) {\r\n      throw new AbortError(\"No starting rule or @ supplied\");\r\n    }\r\n\r\n    if (name === \"@\") {\r\n      log(chalk`Silo clone started`);\r\n      this.chain = new SupplyChain();\r\n      this.chain.remote = args.env;\r\n    } else {\r\n      let rules = await Rule.getAll(this.env);\r\n      let stop, start;\r\n      start = rules.findByNameContains(name);\r\n      if (stopName) stop = rules.findByNameContains(stopName);\r\n\r\n      if (!start) {\r\n        throw new AbortError(\r\n          chalk`No starting rule found by name {blue ${name}}`\r\n        );\r\n      }\r\n      log(\r\n        chalk`Analyzing supply chain: ${start.chalkPrint(false)} - ${\r\n          stop ? stop.chalkPrint(false) : \"(open)\"\r\n        }`\r\n      );\r\n      this.chain = new SupplyChain(start, stop);\r\n    }\r\n\r\n    await this.chain.calculate();\r\n    await this.postAction(args);\r\n  },\r\n  async postAction(args) {\r\n    //Now that we have a supply chain object, do something with it\r\n    if (args[\"to\"]) {\r\n      this.chain.log();\r\n      if (this.chain.presets.arr[0]) {\r\n        await this.chain.downloadPresetCode(this.chain.presets);\r\n        log(\"Done\");\r\n      }\r\n\r\n      if (Array.isArray(args[\"to\"])) {\r\n        for (let to of args[\"to\"]) {\r\n          await this.chain.syncTo(to);\r\n        }\r\n      } else {\r\n        await this.chain.syncTo(args[\"to\"]);\r\n      }\r\n    } else if (args[\"diff\"]) {\r\n      //Very basic diff\r\n      let env = args[\"diff\"];\r\n      await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\r\n      await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\r\n\r\n      let otherPresets = await Promise.all(\r\n        this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name))\r\n      );\r\n      otherPresets = new Collection(otherPresets.filter(x => x));\r\n      await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\r\n      await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\r\n\r\n      const printPresets = (preset, otherPreset) => {\r\n        log(preset.chalkPrint(true));\r\n        if (otherPreset.name) {\r\n          log(otherPreset.chalkPrint(true));\r\n        } else {\r\n          log(chalk`{red (None)}`);\r\n        }\r\n      };\r\n\r\n      for (let preset of this.chain.presets) {\r\n        let otherPreset =\r\n          otherPresets.arr.find(x => x.name === preset.name) || {};\r\n\r\n        if (preset.code === otherPreset.code) {\r\n          if (!args[\"ignore-same\"]) {\r\n            printPresets(preset, otherPreset);\r\n            log(\"Code Same\");\r\n          }\r\n        } else {\r\n          printPresets(preset, otherPreset);\r\n          if (args[\"ignore-same\"]) {\r\n            log(\"-------\");\r\n          } else {\r\n            log(\"Code Different\");\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      await this.chain.log();\r\n    }\r\n  },\r\n  async $make(args) {\r\n    let set = new Set();\r\n    let hints = args.hint\r\n      ? Array.isArray(args.hint)\r\n        ? args.hint\r\n        : [args.hint]\r\n      : [];\r\n    //TODO modify for better hinting, and add this elsewhere\r\n    for (let hint of hints) {\r\n      if (hint === \"presets-uat\") {\r\n        log(\"got hint\");\r\n        await Preset.getAll(\"UAT\");\r\n      }\r\n    }\r\n\r\n    for (let file of this.files) {\r\n      set.add(await categorizeString(file));\r\n    }\r\n    let files = [...set];\r\n    files = files.filter(f => f && !f.missing);\r\n    this.chain = new SupplyChain();\r\n\r\n    this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\r\n    this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\r\n    this.chain.notifications = new Collection([]);\r\n\r\n    await this.postAction(args);\r\n  },\r\n  async unknown(arg, args) {\r\n    log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\r\n  }\r\n};\r\n\r\nfunction subCommand(object) {\r\n  object = {\r\n    before() {},\r\n    after() {},\r\n    unknown() {},\r\n    ...object\r\n  };\r\n  return async function(args) {\r\n    //Grab the next arg on the stack, find a function tied to it, and run\r\n    let arg = args._.shift();\r\n    let key = \"$\" + arg;\r\n    let ret;\r\n    if (object[key]) {\r\n      await object.before(args);\r\n      ret = await object[key](args);\r\n      await object.after(args);\r\n    } else {\r\n      if (arg === undefined) arg = \"(None)\";\r\n      object.unknown(arg, args);\r\n    }\r\n    return ret;\r\n  };\r\n}\r\n\r\nlet cli = {\r\n  @helpText(`Display the help menu`)\r\n  @usage(`rally help [subhelp]`)\r\n  @param(\"subhelp\", \"The name of the command to see help for\")\r\n  async help(args) {\r\n    let arg = args._.shift();\r\n    if (arg) {\r\n      let help = helpEntries[arg];\r\n      if (!help) {\r\n        log(chalk`No help found for '{red ${arg}}'`);\r\n      } else {\r\n        log(printHelp(helpEntries[arg]));\r\n      }\r\n    } else {\r\n      for (let helpArg in helpEntries) {\r\n        log(printHelp(helpEntries[helpArg], true));\r\n      }\r\n    }\r\n  },\r\n\r\n  @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\r\n  @usage(\"rally jupyter build [in] [out]\")\r\n  @param(\r\n    \"in/out\",\r\n    \"input and output file for jupyter. By default main.ipynb and main.py\"\r\n  )\r\n  async jupyter(args) {\r\n    return subCommand(jupytersub)(args);\r\n  },\r\n\r\n  @helpText(`Regex and writing related actions locally`)\r\n  @usage(`rally regwrite [action] --file [file]`)\r\n  @param(\"action\", \"The action to perform. Only list is supported right now\")\r\n  @arg(\"-f\", \"--file\", \"A file to act on\")\r\n  async regwrite(args) {\r\n    log(\r\n      chalk.green`Searching in specified file for hardcoded Preset and Rule names...`\r\n    );\r\n\r\n    if (configObject.prefixmode == false) {\r\n      var elements = process.argv.slice(9);\r\n    } else {\r\n      var elements = process.argv.slice(7);\r\n    }\r\n\r\n    //inquire is this is the right file name.\r\n    let filename = elements.join(\" \");\r\n    async function filenameQ(filename) {\r\n      return await inquirer\r\n        .prompt([\r\n          {\r\n            type: \"confirm\",\r\n            name: \"filename\",\r\n            message: \"Is \" + filename + \" the correct filename?\"\r\n          }\r\n        ])\r\n        .then(answers => {\r\n          //writing time\r\n          if (answers.filename != true) {\r\n            log(\r\n              chalk.red`You indicated this was not the correct filename so the program exited`\r\n            );\r\n            process.exit(22);\r\n          }\r\n        });\r\n    }\r\n    await filenameQ(filename);\r\n\r\n    //reading time\r\n    let filetext = readFileSync(filename, \"utf-8\");\r\n\r\n    // Regex and Replace time\r\n    var regex = /(@include |: |=)[\"'][N][L]/g;\r\n    var strmatch = filetext.match(regex);\r\n    // Replaces the strings found with regex with a prefixed version conditionally.\r\n    var replacementtext = filetext.replace(regex, function(strmatch) {\r\n      var prefixedmatch = \"\";\r\n      var equalpattern = \"=\";\r\n      var includepattern = \"@include \";\r\n      if (strmatch.match(equalpattern)) {\r\n        prefixedmatch = (\"='\" + getPrefix() + \"NL\").toString();\r\n      } else if (strmatch.match(includepattern)) {\r\n        prefixedmatch = (\"@include \" + '\"' + getPrefix() + \"NL\").toString();\r\n      } else {\r\n        prefixedmatch = (\": '\" + getPrefix() + \"NL\").toString();\r\n      }\r\n      return prefixedmatch;\r\n    });\r\n    //inquire before writing to disk??\r\n    async function writetofileQ(filename) {\r\n      return await inquirer\r\n        .prompt([\r\n          {\r\n            type: \"confirm\",\r\n            name: \"writetofile\",\r\n            message:\r\n              \"Do you want to add your prefix to preset/rule names in \" +\r\n              filename +\r\n              \" to disk?\"\r\n          }\r\n        ])\r\n        .then(answers => {\r\n          //writing time\r\n          if (answers.writetofile == true) {\r\n            //TODO allow preset upload to be in root rather than in silo-presets i.e. join(\"silo-presets\",filename)\r\n            writeFileSync(filename, replacementtext, { encoding: \"utf8\" });\r\n            log(chalk.yellow`Writing is done!`);\r\n          }\r\n        });\r\n    }\r\n    await writetofileQ(filename);\r\n\r\n    return subCommand(regsub)(args);\r\n  },\r\n\r\n  //@helpText(`Print input args, for debugging`)\r\n  async printArgs(args) {\r\n    log(args);\r\n  },\r\n\r\n  @helpText(`Preset related actions`)\r\n  @usage(\r\n    `rally preset [action] --env <environment> --file [file1] --file [file2] ...`\r\n  )\r\n  @param(\"action\", \"The action to perform. Can be upload, diff, list\")\r\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n  @arg(\"-f\", \"--file\", \"A file to act on\")\r\n  @arg(\r\n    \"~\",\r\n    \"--command\",\r\n    \"If the action is diff, this is the command to run instead of diff\"\r\n  )\r\n  @arg(\"-p\", \"--prefixmode\", \"A boolean for using prefixes or not\")\r\n  async preset(args) {\r\n    return subCommand(presetsub)(args);\r\n  },\r\n\r\n  @helpText(`Rule related actions`)\r\n  @usage(`rally rule [action] --env [environment]`)\r\n  @param(\"action\", \"The action to perform. Only list is supported right now\")\r\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n  @arg(\"-p\", \"--prefixmode\", \"A boolean for using prefixes or not\")\r\n  async rule(args) {\r\n    return subCommand(rulesub)(args);\r\n  },\r\n\r\n  @helpText(`supply chain related actions`)\r\n  @usage(`rally supply [action] [identifier] --env [environment]`)\r\n  @param(\"action\", \"The action to perform. Can be calc.\")\r\n  @param(\r\n    \"identifier\",\r\n    \"If the action is calc, then this identifier should be the first rule in the chain.\"\r\n  )\r\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n  async supply(args) {\r\n    return subCommand(supplysub)(args);\r\n  },\r\n\r\n  @helpText(`List all available providers, or find one by name/id`)\r\n  @usage(`rally providers [identifier] --env [env] --raw`)\r\n  @param(\"identifier\", \"Either the name or id of the provider\")\r\n  @arg(\"-e\", \"--env\", \"The environment you wish to perform the action on\")\r\n  @arg(\r\n    \"~\",\r\n    \"--raw\",\r\n    \"Raw output of command. If [identifier] is given, then print editorConfig too\"\r\n  )\r\n  async providers(args) {\r\n    let env = args.env;\r\n    if (!env) return errorLog(\"No env supplied.\");\r\n    let ident = args._.shift();\r\n\r\n    let providers = await Provider.getAll(env);\r\n\r\n    if (ident) {\r\n      let pro = providers.arr.find(\r\n        x => x.id == ident || x.name.includes(ident)\r\n      );\r\n      if (!pro) {\r\n        log(chalk`Couldn't find provider by {green ${ident}}`);\r\n      } else {\r\n        log(pro.chalkPrint(false));\r\n        let econfig = await pro.getEditorConfig();\r\n        if (args.raw) {\r\n          return pro;\r\n        } else {\r\n          if (econfig.helpText.length > 100) {\r\n            econfig.helpText = \"<too long to display>\";\r\n          }\r\n          if (econfig.completions.length > 5) {\r\n            econfig.completions = \"<too long to display>\";\r\n          }\r\n          log(econfig);\r\n        }\r\n      }\r\n    } else {\r\n      if (args.raw) return providers;\r\n      for (let pro of providers) log(pro.chalkPrint());\r\n    }\r\n  },\r\n\r\n  @helpText(`Change config for rally tools`)\r\n  @usage(\"rally config [key] --set [value] --raw\")\r\n  @param(\r\n    \"key\",\r\n    chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`\r\n  )\r\n  @arg(\r\n    \"~\",\r\n    \"--set\",\r\n    \"If this value is given, no interactive prompt will launch and the config option will change.\"\r\n  )\r\n  @arg(\"~\", \"--raw\", \"Raw output of json config\")\r\n  async config(args) {\r\n    let prop = args._.shift();\r\n    let propArray = prop && prop.split(\".\");\r\n\r\n    //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\r\n    let newConfigObject;\r\n\r\n    if (!prop) {\r\n      if (configObject.rawOutput) return configObject;\r\n      log(\"Creating new config\");\r\n      newConfigObject = {\r\n        ...configObject\r\n      };\r\n      for (let helperName in configHelpers) {\r\n        if (helperName.startsWith(\"$\")) {\r\n          newConfigObject = {\r\n            ...newConfigObject,\r\n            ...(await configHelpers[helperName](false))\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      log(chalk`Editing option {green ${prop}}`);\r\n      if (args.set) {\r\n        newConfigObject = {\r\n          ...configObject,\r\n          [prop]: args.set\r\n        };\r\n      } else {\r\n        let ident = \"$\" + propArray[0];\r\n\r\n        if (configHelpers[ident]) {\r\n          newConfigObject = {\r\n            ...configObject,\r\n            ...(await configHelpers[ident](propArray))\r\n          };\r\n        } else {\r\n          log(chalk`No helper for {red ${ident}}`);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    newConfigObject.hasConfig = true;\r\n\r\n    //Create readable json and make sure the user is ok with it\r\n    let newConfig = JSON.stringify(newConfigObject, null, 4);\r\n    log(newConfig);\r\n\r\n    //-y or --set will make this not prompt\r\n    if (\r\n      !args.y &&\r\n      !args.set &&\r\n      !(await configHelpers.askQuestion(\"Write this config to disk?\"))\r\n    )\r\n      return;\r\n    writeFileSync(configFile, newConfig, { mode: 0o600 });\r\n    log(chalk`Created file {green ${configFile}}.`);\r\n  },\r\n\r\n  @helpText(`create/modify asset`)\r\n  @usage(\"rally asset [action] [action...]\")\r\n  @param(\r\n    \"action\",\r\n    chalk`Options are create, delete, launch, addfile. You can supply multiple actions to chain them`\r\n  )\r\n  @arg(`-i`, `--id`, chalk`MOVIE_ID of asset to select`)\r\n  @arg(\r\n    `-n`,\r\n    `--name`,\r\n    chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`\r\n  )\r\n  @arg(`-j`, `--job-name`, chalk`Job name to start (used with launch)`)\r\n  @arg(\r\n    `~`,\r\n    `--init-data`,\r\n    chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`\r\n  )\r\n  @arg(`~`, `--file-label`, chalk`File label (used with addfile)`)\r\n  @arg(\r\n    `~`,\r\n    `--file-uri`,\r\n    chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`\r\n  )\r\n  async asset(args) {\r\n    function uuid(args) {\r\n      const digits = 16;\r\n      return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(\r\n        digits,\r\n        \"0\"\r\n      );\r\n    }\r\n\r\n    let name = args.name || `TEST_#`;\r\n    let env = args.env;\r\n\r\n    let asset;\r\n    let arg = args._.shift();\r\n    if (!arg) {\r\n      throw new AbortError(\r\n        chalk`Missing arguments: see {white 'rally help asset'}`\r\n      );\r\n    }\r\n\r\n    if (arg == \"create\") {\r\n      name = name.replace(\"#\", uuid());\r\n      asset = await Asset.createNew(name, env);\r\n    } else {\r\n      args._.unshift(arg);\r\n      if (args.id) {\r\n        asset = Asset.lite(args.id, env);\r\n      } else {\r\n        asset = await Asset.getByName(env, args.name);\r\n      }\r\n    }\r\n\r\n    if (!asset) {\r\n      throw new AbortError(\"No asset found/created\");\r\n    }\r\n    let launchArg = 0;\r\n    let fileArg = 0;\r\n\r\n    let arrayify = (obj, i) =>\r\n      Array.isArray(obj) ? obj[i] : i == 0 ? obj : undefined;\r\n\r\n    while ((arg = args._.shift())) {\r\n      if (arg === \"launch\") {\r\n        let initData = arrayify(args[\"init-data\"], launchArg);\r\n        if (initData && initData.startsWith(\"@\")) {\r\n          log(chalk`Reading init data from {white ${initData.slice(1)}}`);\r\n          initData = readFileSync(initData.slice(1), \"utf-8\");\r\n        }\r\n\r\n        let jobName = arrayify(args[\"job-name\"], launchArg);\r\n        let p = await Rule.getByName(env, jobName);\r\n        if (!p) {\r\n          throw new AbortError(\r\n            `Cannot launch job ${jobName}, does not exist (?)`\r\n          );\r\n        } else {\r\n          log(\r\n            chalk`Launching ${p.chalkPrint(false)} on ${asset.chalkPrint(\r\n              false\r\n            )}`\r\n          );\r\n        }\r\n\r\n        asset.startWorkflow(jobName, initData);\r\n        launchArg++;\r\n      } else if (arg === \"addfile\") {\r\n        let label = arrayify(args[\"file-label\"], fileArg);\r\n        let uri = arrayify(args[\"file-uri\"], fileArg);\r\n        if (label === undefined || !uri) {\r\n          throw new AbortError(\r\n            \"Number of file-label and file-uri does not match\"\r\n          );\r\n        }\r\n        await asset.addFile(label, uri);\r\n        log(chalk`Added file ${label}`);\r\n        fileArg++;\r\n      } else if (arg === \"delete\") {\r\n        await asset.delete();\r\n      } else if (arg === \"create\") {\r\n        throw new AbortError(\r\n          `Cannot have more than 1 create/get per asset call`\r\n        );\r\n      } else if (arg === \"show\") {\r\n        log(asset);\r\n      }\r\n    }\r\n  },\r\n\r\n  async checkSegments(args) {\r\n    let asset = args._.shift();\r\n    let res = await allIndexBundle.lib.makeAPIRequest({\r\n      env: args.env,\r\n      path: `/movies/${asset}/metadata/Metadata`\r\n    });\r\n    let segments = res.data.attributes.metadata.userMetaData.segments.segments;\r\n\r\n    let r = segments.reduce((lastSegment, val, ind) => {\r\n      let curSegment = val.startTime;\r\n      if (curSegment < lastSegment) {\r\n        log(\"bad segment \" + (ind + 1));\r\n      }\r\n      return val.endTime;\r\n    }, \"00:00:00:00\");\r\n  },\r\n\r\n  async listAssets(args, tag) {\r\n    let req = await allIndexBundle.lib.indexPathFast({\r\n      env: args.env,\r\n      path: \"/assets\",\r\n      qs: {\r\n        noRelationships: true,\r\n        sort: \"id\"\r\n      },\r\n      chunksize: 30\r\n    });\r\n    for (let asset of req) {\r\n      log(asset.id);\r\n    }\r\n\r\n    return req;\r\n  },\r\n\r\n  async listSegments(args) {\r\n    let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\r\n\r\n    for (let asset of f) {\r\n      let r = await allIndexBundle.lib.makeAPIRequest({\r\n        env: args.env,\r\n        path: `/movies/${asset.id}/metadata/Metadata`\r\n      });\r\n\r\n      let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\r\n      if (segs && segs.length > 1) {\r\n        log(asset.id);\r\n        log(asset.name);\r\n      }\r\n    }\r\n  },\r\n  async test2(args) {\r\n    let wfr = await allIndexBundle.lib.indexPath({\r\n      env: args.env,\r\n      path: \"/workflowRuleMetadata\"\r\n    });\r\n    log(wfr);\r\n\r\n    for (let wfrm of wfr) {\r\n      try {\r\n        wfrm.id = undefined;\r\n        wfrm.links = undefined;\r\n        log(wfrm);\r\n        let req = await allIndexBundle.lib.makeAPIRequest({\r\n          env: \"DEV\",\r\n          path: \"/workflowRuleMetadata\",\r\n          method: \"POST\",\r\n          payload: { data: wfrm }\r\n        });\r\n      } catch (e) {\r\n        log(\"caught\");\r\n      }\r\n      //break;\r\n    }\r\n  },\r\n\r\n  async test3(args) {\r\n    let wfr = await allIndexBundle.lib.indexPath({\r\n      env: args.env,\r\n      path: \"/workflowRuleMetadata\"\r\n    });\r\n    log(wfr);\r\n\r\n    for (let wfrm of wfr) {\r\n      try {\r\n        wfrm.id = undefined;\r\n        wfrm.links = undefined;\r\n        log(wfrm);\r\n        let req = await allIndexBundle.lib.makeAPIRequest({\r\n          env: \"DEV\",\r\n          path: \"/workflowRuleMetadata\",\r\n          method: \"POST\",\r\n          payload: { data: wfrm }\r\n        });\r\n      } catch (e) {\r\n        log(\"caught\");\r\n      }\r\n      //break;\r\n    }\r\n  },\r\n\r\n  sleep(time = 1000) {\r\n    return new Promise(resolve => setTimeout(resolve, time));\r\n  },\r\n\r\n  async audit(args) {\r\n    let supportedAudits = [\"presets\", \"rule\", \"other\"];\r\n    await configHelpers.addAutoCompletePrompt();\r\n    let q = await configHelpers.inquirer.prompt([\r\n      {\r\n        type: \"autocomplete\",\r\n        name: \"obj\",\r\n        message: `What audit do you want?`,\r\n        source: async (sofar, input) => {\r\n          return supportedAudits.filter(x =>\r\n            input ? x.includes(input.toLowerCase()) : true\r\n          );\r\n        }\r\n      }\r\n    ]);\r\n    let choice = q.obj;\r\n    let resourceId = undefined;\r\n    let filterFunc = _ => _;\r\n    if (choice === \"presets\") {\r\n      let preset = await configHelpers.selectPreset();\r\n      let remote = await Preset.getByName(args.env, preset.name);\r\n      if (!remote)\r\n        throw new AbortError(\"Could not find this item on remote env\");\r\n      filterFunc = ev => ev.resource == \"Preset\";\r\n      resourceId = remote.id;\r\n    } else if (choice === \"rule\") {\r\n      let preset = await configHelpers.selectRule();\r\n      let remote = await Rule.getByName(args.env, preset.name);\r\n      if (!remote)\r\n        throw new AbortError(\"Could not find this item on remote env\");\r\n      filterFunc = ev => ev.resource == \"Rule\";\r\n      resourceId = remote.id;\r\n    } else {\r\n      resourceId = await configHelpers.askInput(null, \"What resourceID?\");\r\n    }\r\n\r\n    log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\r\n    log(`Loading audits (this might take a while)`);\r\n    const numRows = 100;\r\n    let r = await allIndexBundle.lib.makeAPIRequest({\r\n      env: args.env,\r\n      path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\r\n      timeout: 180000\r\n    });\r\n    r.data = r.data.filter(filterFunc);\r\n\r\n    log(\"Data received, parsing users\");\r\n\r\n    for (let event of r.data) {\r\n      let uid = event?.correlation?.userId;\r\n      if (!uid) continue;\r\n      try {\r\n        event.user = await User.getById(args.env, uid);\r\n      } catch (e) {\r\n        event.user = { name: \"????\" };\r\n      }\r\n    }\r\n\r\n    if (args.raw) return r.data;\r\n    let evCounter = 0;\r\n    for (let event of r.data) {\r\n      let evtime = moment(event.createdAt);\r\n      let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\r\n      let timedist = evtime.fromNow();\r\n      log(\r\n        chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${\r\n          event.event\r\n        }`\r\n      );\r\n\r\n      if (++evCounter >= 30) break;\r\n    }\r\n  },\r\n\r\n  async audit2(args) {\r\n    const numRows = 1000;\r\n    let r = await allIndexBundle.lib.makeAPIRequest({\r\n      env: args.env,\r\n      //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\r\n      path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\r\n      timeout: 60000\r\n    });\r\n    for (let event of r.data) {\r\n      log(event.event);\r\n    }\r\n  },\r\n\r\n  async findIDs(args) {\r\n    let files = await getFilesFromArgs(args);\r\n    for (let file of files) {\r\n      let preset = await Preset.getByName(args.env, file);\r\n      await preset.resolve();\r\n      log(`silo-presets/${file}.${preset.ext}`);\r\n    }\r\n  },\r\n\r\n  async getAssets(env, name) {\r\n    if (!this.callid) this.callid = 0;\r\n    this.callid++;\r\n    let callid = this.callid;\r\n\r\n    await this.sleep(500);\r\n\r\n    if (callid != this.callid) return this.lastResult || [];\r\n\r\n    let req = await allIndexBundle.lib.makeAPIRequest({\r\n      env,\r\n      path: `/assets`,\r\n      qs: name ? { filter: `nameContains=${name}` } : undefined\r\n    });\r\n    this.lastCall = Date.now();\r\n\r\n    return (this.lastResult = req.data);\r\n  },\r\n\r\n  async content(args) {\r\n    configHelpers.addAutoCompletePrompt();\r\n    let q = await configHelpers.inquirer.prompt([\r\n      {\r\n        type: \"autocomplete\",\r\n        name: \"what\",\r\n        message: `What asset do you want?`,\r\n        source: async (sofar, input) => {\r\n          let assets = await this.getAssets(args.env, input);\r\n          assets = assets.map(x => new Asset({ data: x, remote: args.env }));\r\n          return assets.map(x => ({\r\n            name:\r\n              x.chalkPrint(true) +\r\n              \": \" +\r\n              x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\r\n            value: x\r\n          }));\r\n        }\r\n      }\r\n    ]);\r\n  },\r\n\r\n  async [\"@\"](args) {\r\n    args._.unshift(\"-\");\r\n    args._.unshift(\"make\");\r\n    return this.supply(args);\r\n  },\r\n\r\n  async test(args) {\r\n    let asset = await Asset.getByName(\"UAT\", args.name);\r\n    log(asset);\r\n  },\r\n\r\n  //Used to test startup and teardown speed.\r\n  noop() {\r\n    return true;\r\n  }\r\n};\r\nasync function unknownCommand(cmd) {\r\n  log(chalk`Unknown command {red ${cmd}}.`);\r\n}\r\n\r\nasync function noCommand() {\r\n  write(chalk` \r\nRally Tools {yellow v${packageVersion} (alpha)} CLI\r\ncreated by John Schmidt <John_Schmidt@discovery.com>\r\nenhanced by David Ampofo <David_Ampofo@discovery.com>\r\n`);\r\n\r\n  //Prompt users to setup one time config.\r\n  if (!configObject.hasConfig) {\r\n    write(chalk`\r\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\r\n`);\r\n    return;\r\n  }\r\n\r\n  //API Access tests\r\n  for (let env of [\"LOCAL\", \"DEV\", \"UAT\", \"QA\", \"PROD\"]) {\r\n    //Test access. Returns HTTP response code\r\n    let resultStr;\r\n    try {\r\n      let result = await funcs.testAccess(env);\r\n\r\n      //Create a colored display and response\r\n      resultStr = chalk`{yellow ${result} <unknown>}`;\r\n      if (result === 200) resultStr = chalk`{green 200 OK}`;\r\n      else if (result === 401) resultStr = chalk`{red 401 No Access}`;\r\n      else if (result >= 500) resultStr = chalk`{yellow ${result} API Down?}`;\r\n      else if (result === true) resultStr = chalk`{green OK}`;\r\n      else if (result === false) resultStr = chalk`{red BAD}`;\r\n    } catch (e) {\r\n      if (e instanceof UnconfiguredEnvError) {\r\n        resultStr = chalk`{yellow Unconfigured}`;\r\n      } else if (e instanceof APIError) {\r\n        if (!e.response.body) {\r\n          resultStr = chalk`{red Timeout (?)}`;\r\n        }\r\n      } else if (e.name == \"RequestError\") {\r\n        resultStr = chalk`{red Low level error (check internet): ${\r\n          e.error.errno\r\n        }}`;\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    log(chalk`   ${env}: ${resultStr}`);\r\n  }\r\n}\r\n\r\nasync function $main() {\r\n  //Supply --config to load a different config file\r\n  if (argv.config) loadConfig(argv.config);\r\n\r\n  // First we need to decide if the user wants color or not. If they do want\r\n  // color, we need to ensure we use the right mode\r\n  chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\r\n  if (chalk.level === 0 || !chalk.enabled) {\r\n    let force = argv[\"force-color\"];\r\n    if (force) {\r\n      chalk.enabled = true;\r\n      if (force === true && chalk.level === 0) {\r\n        chalk.level = 1;\r\n      } else if (Number(force)) {\r\n        chalk.level = Number(force);\r\n      }\r\n    }\r\n  }\r\n\r\n  //This flag being true allows you to modify UAT and PROD\r\n  if (!argv[\"protect\"]) {\r\n    configObject.dangerModify = true;\r\n  }\r\n\r\n  //This enables raw output for some functions\r\n  if (argv[\"raw\"]) {\r\n    configObject.rawOutput = true;\r\n    global.log = () => {};\r\n    global.errorLog = () => {};\r\n    global.write = () => {};\r\n  }\r\n  //This prevents the prefix from being used\r\n  if (argv[\"prefixmode\"]) {\r\n    configObject.prefixmode = JSON.parse(argv[\"prefixmode\"]);\r\n    //console.log( configObject)\r\n  }\r\n\r\n  if (argv[\"ignore-missing\"]) {\r\n    configObject.ignoreMissing = true;\r\n  }\r\n\r\n  //Default environment should normally be from config, but it can be\r\n  //overridden by the -e/--env flag\r\n  if (configObject.defaultEnv) {\r\n    argv.env = argv.env || configObject.defaultEnv;\r\n  }\r\n\r\n  //Enable verbose logging in some places.\r\n  if (argv[\"vverbose\"]) {\r\n    configObject.verbose = argv[\"vverbose\"];\r\n    configObject.vverbose = true;\r\n  } else if (argv[\"verbose\"]) {\r\n    configObject.verbose = argv[\"verbose\"];\r\n  } else if (argv[\"vvverbose\"]) {\r\n    configObject.verbose = true;\r\n    configObject.vverbose = true;\r\n    configObject.vvverbose = true;\r\n  }\r\n\r\n  //copy argument array to new object to allow modification\r\n  argv._old = argv._.slice();\r\n\r\n  //Take first argument after `node bundle.js`\r\n  //If there is no argument, display the default version info and API access.\r\n  let func = argv._.shift();\r\n  if (func) {\r\n    if (!cli[func]) return await unknownCommand(func);\r\n    try {\r\n      //Call the cli function\r\n      let ret = await cli[func](argv);\r\n      if (ret) {\r\n        write(chalk.white(\"CLI returned: \"));\r\n        if (ret instanceof Collection) ret = ret.arr;\r\n\r\n        //Directly use console.log so that --raw works as intended.\r\n        if (typeof ret === \"object\") {\r\n          console.log(JSON.stringify(ret, null, 4));\r\n        } else {\r\n          console.log(ret);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      if (e instanceof AbortError) {\r\n        log(chalk`{red CLI Aborted}: ${e.message}`);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  } else {\r\n    await noCommand();\r\n  }\r\n}\r\n\r\nasync function main(...args) {\r\n  //Catch all for errors to avoid ugly default node promise catcher\r\n  try {\r\n    await $main(...args);\r\n  } catch (e) {\r\n    errorLog(e.stack);\r\n  }\r\n}\r\n\r\n// If this is an imported module, then we should exec the cli interface.\r\n// Otherwise just export everything.\r\nif (require.main === module) {\r\n  main();\r\n} else {\r\n  module.exports = allIndexBundle;\r\n}\r\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","getPrefix","prefix","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","rp","importLazy","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","vvverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","inputData","chunksize","_","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Asset","metadata","normalizeMetadata","newMetadata","md","lite","createNew","req","delete","addFile","label","fileuris","Array","instances","asset","startWorkflow","jobName","initData","movie","rule","startEvaluate","presetid","preset","home","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","rallyConfiguration","systemManaged","fromMetadata","providerType","provider","realpath","getLocalPath","providerSettings","acclimatize","ptype","test","regex","match","matches","runTest","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","uploadPresetData","grabMetadata","includeMetadata","shouldTest","PresetName","OutputStorageName","ProxyTypeName","Notification","notifications","Rule","f","description","priority","starred","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","prefixmode","idMap","patchStrip","createdAt","updatedAt","passMetadata","errorMetadata","yellow","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","syncTo","User","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","SdviContentMover","SdviEvaluate","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$prefixmode","$project","project","askInput","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","basePath","objsMap","none","selectPreset","purpose","selectRule","question","def","ok","argv","argparse","string","protect","alias","printHelp","help","substring","getFilesFromArgs","lastArg","shift","files","getStdin","stdin","regwritetoEnv","green","elements","filename","filenameQ","then","answers","exit","filetext","strmatch","replacementtext","prefixedmatch","equalpattern","includepattern","toString","writetofileQ","writetofile","encoding","blue","subCommand","regsub","presetsub","before","$grab","full","remo","$create","configHelpers","baseCode","$list","attach","rawOutput","$upload","noprefixQ","noprefixenv","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","jupytersub","output","$build","cmd","categorizeString","defaultSubproject","trim","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","object","after","cli","helpArg","jupyter","regwrite","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","launchArg","fileArg","arrayify","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","listAssets","tag","noRelationships","listSegments","segs","test2","wfr","wfrm","test3","sleep","setTimeout","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","moment","date","format","timedist","fromNow","audit2","findIDs","getAssets","callid","lastResult","lastCall","Date","content","assets","self","noop","unknownCommand","noCommand","packageVersion","resultStr","error","errno","$main","enabled","level","force","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}