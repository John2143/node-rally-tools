{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 0\n    }){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new Error(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload);\n        }\n\n        if(configObject.vverbose){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: {\n                //SDVI ignores this header sometimes.\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = []){\n        for(let promise of promises){\n            result.push(await promise);\n        }\n        return result\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = []\n        let promises = [Promise.resolve(json)];\n        for(let i = 2; i <= (opts.limit ? opts.limit : numPages); i++){\n            if(promises.length === 5){\n                log(\"Chunk found\");\n                await this.doPromises(promises, allResults);\n                promises = []\n            }\n\n            let req = this.makeAPIRequest({...opts, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n        await this.doPromises(promises, allResults);\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n    static async startJob(env, movie, preset){\n        let movieObj = await this.makeAPIRequest({\n            env, path: \"/movies\", qs: {\n                filter: `name=${movie}`\n            }\n        });\n\n        let id = movieObj?.data?.[0]?.id\n        if(!id) return {};\n\n        // Fire and forget.\n        let data = await this.makeAPIRequest({\n            env, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: preset,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            movieId: id, reqData: data,\n        };\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id){\n        if(this.isLoaded(env)){\n            return (await this.constructor.getAll(env)).findById(id);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: `/${this.endpoint}/${id}`,\n            });\n            if(data.data) return new this({data: data.data, remote: env});\n        }\n    }\n\n    static async getByName(env, name){\n        if(this.isLoaded(env)){\n            return (await this.getAll(env)).findByName(name);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: `/${this.endpoint}`,\n                qs: {filter: `name=${name}`},\n            });\n            if(data.data[0]) return new this({data: data.data[0], remote: env});\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.hasLoadedAll = this.hasLoadedAll || {};\n        if(this.isLoaded(env)) return this.hasLoadedAll[env];\n\n        let datas = await lib.indexPathFast(env, `/${this.endpoint}?page=1p10`);\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.hasLoadedAll[env] = all;\n        return all;\n    }\n    static async removeCache(env){\n        this.hasLoadedAll = this.hasLoadedAll || {};\n        if(this.isLoaded(env)){\n            this.hasLoadedAll[env] = undefined;\n        }\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                log(\"HAS NAME\");\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n        // Cache by path\n        if(path){\n            if(exists[path]) return exists[path];\n            exists[path] = this;\n        }\n\n        this.meta = {};\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    log(chalk`{red Node Error} ${e.message}`);\n                    throw new AbortError(\"Could not load code of local file\");\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    this.data = Preset.newShell();\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path){\n        let data = JSON.parse(fs.readFileSync(path));\n        let provider = Provider.getByName(data.relationships.providerType.data.name);\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext);\n        return new Preset({path: realpath});\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getProviders(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return;\n\n        const regex = /autotest:\\s?([\\w\\d_. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            write(chalk`Starting job {green ${this.name}} on {green ${test}}... `);\n            let {movieId} = await lib.startJob(env, test, remote.id);\n            if(movieId){\n                write(chalk`movie {blue ${movieId}}. `);\n                log(chalk`OK`);\n            }else{\n                log(chalk`{red No movie found}, Fail.`);\n            }\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let providers = await Provider.getProviders(this.remote);\n        let proType = this.resolveField(providers, \"providerType\");\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        fs.writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        fs.writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        //log(chalk`Saving {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        if(this.meta.proType){\n            return chalk`{green ${id}}: {red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext){\n        return path.join(configObject.repodir, \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        let fname = this.name;\n        if(!fname && this.path){\n            let bname = basename(this.path);\n            fname = bname.substring(0, bname.length - (this.ext.length + 1));\n        }\n        return path.join(configObject.repodir, \"silo-metadata\", fname + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true, timeout: 5000\n        });\n        write(chalk`response {yellow ${res.statusCode}} `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n    async uploadCodeToEnv(env, includeMetadata){\n        if(!this.name){\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n            return;\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                });\n                write(\"metadata OK, \");\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        write(\"Done. \");\n        if(this.test){\n            log(\"test...\")\n            this.runTest(env)\n        }else{\n            log(\"No test\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(fs.readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport fs from \"fs\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            let f = fs.readFileSync(path, \"utf-8\")\n            data = JSON.parse(fs.readFileSync(path, \"utf-8\"));\n        }\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            fs.writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        write(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        log(\"Required notifications: \");\n        this.notifications.log();\n\n        write(\"Required rules: \");\n        log(this.rules.arr.length);\n        this.rules.log();\n\n        write(\"Required presets: \");\n        log(this.presets.arr.length);\n        this.presets.log();\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            await preset.save(env);\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                await rule.saveA(env);\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                await rule.saveB(env);\n            }\n        }\n    }\n}\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nconst inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nfunction addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.arr.map(x => ({\n                name: x.chalkPrint(true),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class){\n    addAutoCompletePrompt();\n    let basePath = join(configObject.repodir, path)\n    let f = await readdir(basePath);\n    let objs = f.map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset(purpose = \"preset\"){\n    return selectLocal(\"silo-presets\", \"preset\", Preset);\n}\nexport async function selectRule(purpose = \"rule\"){\n    return selectLocal(\"silo-rules\", purpose, Rule);\n}\n\nexport async function askInput(name, question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection, APIError\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = args.provider;\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset();\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(provider.name === \"SdviEvaluate\"){\n            preset._code = `'''\\nname: ${name}\\n'''\\n\\n# code here\\n`;\n        }else{\n            preset._code = \"\"\n        }\n\n        preset.saveLocalMetadata();\n        preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: preset.ext});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput) return ptr;\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command,  [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset();\n        let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\n        let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule(\"dynamic next\")){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule();\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str){\n    str = str.trim();\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            return await Preset.getById(match[2], match[3])\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3])\n        }else{\n            return null\n        }\n    }else if(match = /silo\\-(\\w+)\\//.exec(str)){\n        switch(match[1]){\n            case \"presets\": return new Preset({path: str});\n            case \"rules\": return new Rule({path: str});\n            case \"metadata\": return await Preset.fromMetadata(str);\n        }\n    }else{\n        return null\n    }\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getRules(this.env);\n        let start = rules.findByNameContains(name);\n        let stop;\n        if(stopName) stop = rules.findByNameContains(stopName);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n\n        this.chain = new SupplyChain(start, stop);\n        await this.chain.calculate();\n        await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                log(\"Loading code\");\n                await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n                log(\"Done\");\n            }\n            await this.chain.syncTo(args[\"to\"]);\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name);\n                log(preset.chalkPrint(true));\n                if(otherPreset){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    otherPreset = {};\n                    log(chalk`{red (None)}`);\n                }\n\n                if(preset.code === otherPreset.code){\n                    log(\"Code Same\");\n                }else{\n                    log(\"Code Different\");\n                }\n            }\n\n        }else{\n            await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    async test(args){\n        await Provider.getAll(\"DEV\");\n        //allIndexBundle.lib.indexPathFast({\n            //env: \"DEV\", path: \"/presets\",\n        //})\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    }\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"UAT\", \"DEV\", \"PROD\", \"LOCAL\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","rp","importLazy","global","log","console","process","errorLog","red","lib","makeAPIRequest","env","path_full","payload","body","method","qs","headers","fullResponse","timeout","config","api","Error","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","stringify","vverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","promise","indexPathFast","baselink","first","linkToPage","page","allResults","limit","req","item","isLocalEnv","envName","startJob","movie","preset","movieObj","filter","id","type","relationships","movieId","reqData","constructor","message","captureStackTrace","UnconfiguredEnvError","Collection","arr","Symbol","iterator","findById","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","isLoaded","hasLoadedAll","getById","getAll","endpoint","remote","getByName","getAllPreCollect","datas","map","removeCache","undefined","resolveApply","dataObj","direction","resolveField","isArray","field","cleanup","entries","organization","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","sort","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","exists","Preset","pathResolve","dirname","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","newShell","fromMetadata","fs","provider","providerType","realpath","getLocalPath","acclimatize","getProviders","ptype","test","regex","match","matches","runTest","proType","saveLocal","saveLocalMetadata","saveLocalFile","writeFileSync","localmetadatapath","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","fname","bname","substring","immutable","uploadPresetData","res","grabMetadata","includeMetadata","metadata","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","calculate","allRules","allPresets","allProviders","allNotifications","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rules","presets","delete","syncTo","rule","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","defaults","DEV","UAT","PROD","q","envs","prompt","choices","keys","checked","questions","defaultKey","default","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","autoDefault","defaultProvider","selectLocal","typeName","Class","basePath","objs","objsMap","none","source","sofar","input","toLowerCase","selectPreset","purpose","selectRule","askInput","question","def","ok","argv","argparse","string","protect","alias","printHelp","help","getFilesFromArgs","lastArg","_","shift","files","getStdin","stdin","presetsub","before","$grab","$create","configHelpers","$list","attach","rawOutput","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","getRules","passNext","errorNext","transition","description","jupytersub","output","$build","cmd","categorizeString","trim","supplysub","$calc","stopName","stop","chain","postAction","otherPresets","otherPreset","$make","subCommand","object","after","ret","cli","helpArg","jupyter","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","startsWith","newConfig","y","mode","noop","unknownCommand","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","defaultEnv","_old","white","main","stack","module","exports","allIndexBundle"],"mappings":"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"}