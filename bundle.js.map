{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/preset.js","src/rule.js","src/supply-chain.js","src/providers.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject = {hasConfig: true};\ntry{\n    let json = readFileSync(configFile);\n    configObject = JSON.parse(json);\n}catch(e){\n    if(e.code == \"ENOENT\"){\n        configObject.hasConfig = false;\n        //ok, they should probably make a config\n    }else{\n        throw e;\n    }\n}\n\nexport {configObject};\n","import rp from \"request-promise\";\nimport chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    static async makeAPIRequest({env, path, path_full, payload, body, json = true, method = \"GET\", qs, headers = {}, fullResponse = false}){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && config.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n\n        path = path_full || rally_api + path;\n        body = body || payload && JSON.stringify(payload);\n\n        if(global.logAPI){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            auth: {bearer: rally_api_key},\n            headers: {\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n        let response = await rp(requestOptions);\n\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions);\n        }\n        if(fullResponse){\n            return response;\n        }else if(json){\n            return JSON.parse(response.body);\n        }else{\n            return response.body;\n        }\n    }\n    //Index a json endpoint that returns a {links} field.\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}\n{green ${JSON.stringify(opts)}}\n{reset ${response.body}}\n        `);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(namec){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    get length(){return this.arr.length;}\n}\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this.data, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this.data, path)[lastKey] = val;\n        },\n    });\n}\n","import fs from \"fs\";\nimport {lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\nimport {cached} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\n\nlet presetShell = {\n    \"attributes\": {},\n    \"relationships\": {},\n};\n\nclass Preset{\n    constructor({path, remote, data}){\n        this.remote = remote\n        if(!this.remote){\n            this.path = path;\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} e.message`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            this.name = this.parseFilenameForName() || this.parseCodeForName();\n        }else{\n            this.name = data.attributes.name;\n            this.id = data.id;\n            this.data = data;\n        }\n    }\n    shellData(){\n        let data = Object.assign({}, presetShell);\n        return data;\n    }\n    async downloadCode(){\n        if(this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(){\n        let id = String(this.remote && this.remote + \"-\" + this.id || \"Local\").padStart(8);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new Regexp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    getPath(){\n        return `${process.env.rally_repo_path}/silo-presets/${this.name}.${this.ext}`;\n    }\n    getMetadataPath(){\n        return `${process.env.rally_repo_path}/silo-metadata/${this.name}.json`;\n    }\n    codeBinary(){\n        if(this.code.startsWith(\"=BASE64=\")){\n            return bota(this.code.substring(8));\n        }else{\n            return this.code;\n        }\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}}`);\n    }\n    async uploadCodeToEnv(env, createFunction){\n        write(chalk`Uploading {green ${this.name}} to {green ${env}}: `);\n\n        //First query the api to see if this already exists.\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets`,\n            qs: {filter: `name=${this.name}`},\n        });\n        let remote = res.data[0];\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            //If it needs to be created then we need to ask the user for metadata\n            write(\"create, \");\n            let metadata = await createFunction(this);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: {data: metadata},\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log();\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getMetadata(){}\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n\n    @cached static async getPresets(env){\n        let data = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return new Collection(data.map(dat => new Preset({remote: env, data: dat})));\n    }\n}\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\n\nclass Rule{\n    constructor(data, remote){\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n        //this.cleanup();\n    }\n    async cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            delete val.links;\n        }\n    }\n    resolveField(datum, name){\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        return datum.findById(field.data.id);\n    }\n    async resolve(){\n        let presets = await Preset.getPresets(this.remote);\n        let rules = await Rule.getRules(this.remote);\n        let preset = this.resolveField(presets, \"preset\");\n        let pNext  = this.resolveField(rules, \"passNext\");\n        let eNext  = this.resolveField(rules, \"errorNext\");\n\n        return {preset, pNext, eNext};\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(8);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n\n    @cached static async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return new Collection(rules.map(data => new Rule(data, env)));\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"attributes.name\");\ndefineAssoc(Rule, \"id\", \"id\");\ndefineAssoc(Rule, \"relationships\", \"relationships\");\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule){\n        this.startingRule = startingRule;\n        this.remote = startingRule.remote;\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getRules(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getPresets(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            let {eNext, pNext, preset} = await currentRule.resolve();\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Provider{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    async getEditorConfig(env, provider){\n        if(this.editorConfig) return this.editorConfig;\n\n        return this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n    }\n    @cached static async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return new Collection(providers.map(x => new Provider(x, env)));\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"id\");\ndefineAssoc(Provider, \"name\", \"attributes.name\");\ndefineAssoc(Provider, \"category\", \"attributes.category\");\n\nexport default Provider;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true});\n        return result.statusCode;\n    },\n}\n","import inquirer from \"inquirer\";\nimport {configObject} from \"./config.js\";\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(env, providers){\n    let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n    if(args.defaultSelect){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.map(x => ({\n                name: prettyPrintProvider(x),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection\n} from \"./index.js\";\n\nimport inquirer from \"inquirer\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    boolean: [\"no-protect\"],\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        this.files = files;\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getPresets(this.env);\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets, async preset => {\n            log(\"asking... \");\n            let providers = await Provider.getProviders(this.env);\n            let provider = await configHelpers.selectProvider(this.env, providers);\n            return preset.constructMetadata(provider.id);\n        });\n    },\n    async $diff(args){\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $upload(args){\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $calc(args){\n        let name = args._[2];\n        let rules = await Rule.getRules(this.env);\n        let start;\n        for(let rule of rules){\n            if(rule.name.toLowerCase().includes(name.toLowerCase())){\n                start = rule;\n                break;\n            }\n        }\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)}`);\n\n        let chain = new SupplyChain(start);\n        await chain.calculate();\n        //log(chain);\n    },\n    async $magic(args){\n        let big = require(\"fs\").readFileSync(\"test.json\");\n        big = JSON.parse(big);\n\n        log(big.remote);\n        let presets = big.allPresets.arr.map(obj => {\n            let preset = new Preset({\n                data: obj.data, remote: big.remote\n            });\n            preset.code = obj._code;\n            return preset;\n        });\n        Preset.getPresets.cachePush([big.remote], new Collection(presets));\n\n        let rules = big.allRules.arr.map(obj => {\n            let rule = new Rule(\n                obj.data, big.remote\n            );\n            return rule;\n        });\n        Rule.getRules.cachePush([big.remote], new Collection(rules));\n\n        return await this.$calc(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        let arg = args._[1];\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._[1];\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload or list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._[1];\n\n        let providers = await Provider.getProviders(env);\n\n        if(ident){\n            let pro = providers.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                log(await pro.getEditorConfig());\n                if(args.raw) return pro;\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._[1];\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n    noop(){\n        return true;\n    }\n};\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n    for(let env of [\"UAT\", \"DEV\", \"PROD\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = \"{yellow ${result} <unknown>\";\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n        }catch(e){\n            if(!e instanceof UnconfiguredEnvError) throw e;\n            resultStr = chalk`{yellow Unconfigured}`;\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    configObject.dangerModify = argv[\"no-protect\"];\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    let func = argv._[0];\n    if(cli[func]){\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                console.log(JSON.stringify(ret, null, 4));\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\nmain();\n"],"names":["configFile","homedir","configObject","json","readFileSync","JSON","parse","e","code","hasConfig","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","config","api","env","UnconfiguredEnvError","method","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","key","rally_api","url","path_full","path","body","payload","stringify","logAPI","qs","requestOptions","headers","response","rp","fullResponse","includes","statusCode","APIError","indexPath","all","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","AbortError","Error","message","captureStackTrace","constructor","name","opts","Collection","arr","Symbol","iterator","id","find","x","namec","length","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","cached","target","oldFunc","cachedValues","newFunc","found","clearCache","cachePush","deepAccess","obj","o","defineAssoc","classname","shortname","split","lastKey","pop","defineProperty","prototype","val","presetShell","Preset","remote","getLocalCode","parseFilenameForName","parseCodeForName","attributes","Object","assign","downloadCode","providerData","_code","v","String","padStart","endsWith","basename","name_regex","match","strings","filter","regex","Regexp","rally_repo_path","ext","startsWith","bota","substring","uploadPresetData","res","uploadCodeToEnv","createFunction","metadata","providerID","fs","getPresets","map","dat","Rule","isGeneric","cleanup","entries","relationships","datum","field","findById","presets","rules","getRules","preset","resolveField","pNext","eNext","pad","SupplyChain","startingRule","calculate","allRules","allPresets","ruleQueue","currentRule","Provider","getEditorConfig","provider","editorConfig","getProviders","providers","sort","a","b","category","localeCompare","require","install","rallyFunctions","bestPagintation","silentAPI","time","dl","timeEnd","uploadPresets","createFunc","testAccess","result","$api","propArray","defaults","q","inquirer","prompt","keys","questions","envs","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","defaultProvider","defaultSelect","prettyPrintProvider","question","ok","argv","argparse","printHelp","help","presetsub","before","files","file","$list","rawOutput","chalkPrint","$upload","funcs","configHelpers","constructMetadata","$diff","unknown","rulesub","rule","supplysub","$calc","_","start","toLowerCase","chain","$magic","big","subCommand","object","ret","after","cli","helpArg","printArgs","supply","ident","pro","raw","prop","newConfigObject","helperName","set","newConfig","y","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","defaultEnv","white","main","stack"],"mappings":"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"}