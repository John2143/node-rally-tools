{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/index.js","src/baseCode.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nfunction nodeConfigPackageLoad(){\n    try{\n        return require(\"config\").get(\"rallytools\");\n    }catch(e){\n    }\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            let nodeConfig = nodeConfigPackageLoad();\n            if(nodeConfig){\n                configObject = nodeConfig;\n                nodeConfig.hasConfig = true;\n            }else{\n                configObject.hasConfig = false;\n                //ok, they should probably make a config\n            }\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.log(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(configObject.vverbose || configObject.vvverbose){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n        if(configObject.vvverbose){\n            if(payload || body){\n                log(payload || body);\n            }\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: {\n                //SDVI ignores this header sometimes.\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        process.stderr.write(`\\r${\" \".repeat(size + 8)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = 30){\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress();\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n    //TODO implelement\n    //static async processPromises({\n        //promiseGenerator, chunksize, startingPromises = [],\n        //observe,\n    //}){\n        //let promises = startingPromises\n        //for(let promise of promiseGenerator()){\n        //}\n    //}\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = []\n        let promises = [Promise.resolve(json)];\n\n        opts.chunksize = opts.chunksize || 10\n        for(let i = 2; i <= (opts.limit ? opts.limit : numPages); i++){\n            this.drawProgress(i, opts.limit || numPages);\n            if(promises.length === opts.chunksize){\n                await this.doPromises(promises, allResults, opts.observe);\n                promises = []\n            }\n\n            let req = this.makeAPIRequest({...opts, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n        await this.doPromises(promises, allResults, opts.observe);\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        if(this.isLoaded(env)){\n            return (await this.getAll(env)).findById(id);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: `/${this.endpoint}/${id}`,\n                qs\n            });\n            if(data.data) return new this({data: data.data, remote: env, included: data.included});\n        }\n    }\n\n    static async getByName(env, name, qs){\n        if(this.isLoaded(env)){\n            return (await this.getAll(env)).findByName(name);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: `/${this.endpoint}`,\n                qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n            });\n            //TODO included might not wokr correctly here\n            if(data.data[0]) return new this({data: data.data[0], remote: env, included: data.included});\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.hasLoadedAll = this.hasLoadedAll || {};\n        if(this.isLoaded(env)) return this.hasLoadedAll[env];\n\n        let datas = await lib.indexPathFast(env, `/${this.endpoint}?page=1p10`);\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.hasLoadedAll[env] = all;\n        return all;\n    }\n    static async removeCache(env){\n        this.hasLoadedAll = this.hasLoadedAll || {};\n        if(this.isLoaded(env)){\n            this.hasLoadedAll[env] = undefined;\n        }\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    async startEvaluate(presetid){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\n\nimport {configObject} from \"./config.js\";\n\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\nexport function writeFileSync(path, data, options){\n    return fs.writeFileSync(pathTransform(path), data, options);\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n        // Cache by path\n        if(path){\n            if(exists[path]) return exists[path];\n            exists[path] = this;\n        }\n\n        this.meta = {};\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell();\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.rallyConfiguration = undefined;\n        this.data.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext);\n        return new Preset({path: realpath});\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return;\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: {red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: {red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext){\n        return path.join(configObject.repodir, \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        let fname = this.name;\n        if(!fname && this.path){\n            let bname = basename(this.path);\n            fname = bname.substring(0, bname.length - (this.ext.length + 1));\n        }\n        return path.join(configObject.repodir, \"silo-metadata\", fname + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true, timeout: 5000\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n            return;\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(\"Writing to local path: \")\n            log(this.localpath)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        log(\"Downloading code... \");\n        let i = 0;\n        for(let preset of this.allPresets){\n            write(`\\r${\" \".repeat(process.env.COLUMNS || 30)}\\r${i++} / ${this.allPresets.arr.length} ${preset.name}`);\n            await preset.downloadCode();\n        }\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        log(\"Required notifications: \");\n        this.notifications.log();\n\n        write(\"Required rules: \");\n        log(this.rules.arr.length);\n        this.rules.log();\n\n        write(\"Required presets: \");\n        log(this.presets.arr.length);\n        this.presets.log();\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"move\",\n            \"source\": {\n                \"labels\": [ \"MyLabel\" ],\n                \"tags\": [ \"segmented\" ]\n                \"storageSet\": [ \"*\", \"-OtherStorageBucket\" ],\n\n            },\n            \"destination\": {\n                \"storage\": \"Archive\",\n                \"newLabel\": \"myNewLabel\",\n                \"overwrite\": \"always\"\n            }\n        }\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`,\n};\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class){\n    addAutoCompletePrompt();\n    let basePath = join(configObject.repodir, path)\n    let f = await readdir(basePath);\n    let objs = f.map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset(purpose = \"preset\"){\n    return selectLocal(\"silo-presets\", \"preset\", Preset);\n}\nexport async function selectRule(purpose = \"rule\"){\n    return selectLocal(\"silo-rules\", purpose, Rule);\n}\n\nexport async function askInput(name, question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset,\n    AbortError, UnconfiguredEnvError, Collection, APIError\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset();\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset();\n        let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\n        let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule(\"dynamic next\")){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule();\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str){\n    str = str.trim();\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            return await Preset.getById(match[2], match[3]);\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /silo\\-(\\w+)\\//.exec(str)){\n        try{\n            switch(match[1]){\n                case \"presets\": return new Preset({path: str});\n                case \"rules\": return new Rule({path: str});\n                case \"metadata\": return await Preset.fromMetadata(str);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getAll(this.env);\n        let start = rules.findByNameContains(name);\n        let stop;\n        if(stopName) stop = rules.findByNameContains(stopName);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n\n        this.chain = new SupplyChain(start, stop);\n        await this.chain.calculate();\n        await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                log(\"Loading code\");\n                for(let preset of this.chain.presets){\n                    await preset.downloadCode();\n                }\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n                }\n            }\n\n        }else{\n            await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    @helpText(`create/modify asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Options are create, delete, launch, addfile. You can supply multiple actions to chain them`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset){\n            throw new AbortError(\"No asset found/created\");\n        }\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = args[\"init-data\"];\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = args[\"job-name\"];\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset.chalkPrint(false)}`);\n                }\n\n                asset.startWorkflow(jobName, initData)\n            }else if(arg === \"addfile\"){\n                await asset.addFile(args[\"file-label\"], args[\"file-uri\"]);\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\"){\n                log(asset);\n            }\n        }\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    sleep(time = 1000){\n        return new Promise(resolve => setTimeout(resolve, time));\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await this.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        let asset = await Asset.getByName(\"UAT\", args.name);\n        log(asset);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"LOCAL\", \"DEV\", \"UAT\", \"QA\", \"PROD\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error.errno}}`;\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","nodeConfigPackageLoad","require","get","e","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","code","nodeConfig","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","rp","importLazy","global","log","console","process","elog","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","stringify","vverbose","vvverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","repeat","drawProgress","max","pct","Number","numFilled","Math","floor","numEmpty","indexPathFast","baselink","first","linkToPage","page","allResults","chunksize","limit","req","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","isLoaded","hasLoadedAll","getById","getAll","endpoint","remote","included","getByName","filter","getAllPreCollect","datas","removeCache","undefined","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","sort","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Asset","metadata","normalizeMetadata","newMetadata","md","lite","createNew","delete","addFile","label","fileuris","Array","instances","startWorkflow","jobName","initData","startEvaluate","presetid","movie","preset","colon","siloLike","pathTransform","invertedPath","fs","writeFileSync","exists","Preset","pathResolve","dirname","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","rallyConfiguration","systemManaged","fromMetadata","providerType","provider","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","asset","startsWith","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","fname","bname","substring","immutable","uploadPresetData","grabMetadata","includeMetadata","shouldTest","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","calculate","allRules","allPresets","allProviders","allNotifications","COLUMNS","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rules","presets","syncTo","rule","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","SdviContentMover","SdviEvaluate","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","autoDefault","defaultProvider","source","sofar","input","toLowerCase","selectLocal","typeName","Class","basePath","objs","objsMap","none","selectPreset","purpose","selectRule","askInput","question","def","ok","argv","argparse","string","protect","alias","printHelp","help","getFilesFromArgs","lastArg","_","shift","files","getStdin","stdin","presetsub","before","$grab","full","remo","$create","configHelpers","baseCode","$list","attach","rawOutput","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","output","$build","cmd","categorizeString","trim","supplysub","$calc","stopName","stop","chain","postAction","to","otherPresets","printPresets","otherPreset","$make","subCommand","object","after","ret","cli","helpArg","jupyter","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","newConfig","y","mode","uuid","digits","random","pow","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","listAssets","tag","noRelationships","listSegments","segs","test2","wfr","wfrm","test3","sleep","setTimeout","getAssets","callid","lastResult","lastCall","Date","content","assets","self","noop","unknownCommand","noCommand","packageVersion","resultStr","error","errno","$main","enabled","level","force","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}