{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/asset.js","src/index.js","src/unitTestRally.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 0\n    }){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new Error(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(configObject.vverbose){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: {\n                //SDVI ignores this header sometimes.\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static async drawProgress(i, max, size = 30){\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        process.stderr.write(`\\r${\" \".repeat(size + 8)}\\r[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = []\n        let promises = [Promise.resolve(json)];\n\n        opts.chunksize = opts.chunksize || 10\n        for(let i = 2; i <= (opts.limit ? opts.limit : numPages); i++){\n            this.drawProgress(i, opts.limit || numPages);\n            if(promises.length === opts.chunksize){\n                await this.doPromises(promises, allResults, opts.observe);\n                promises = []\n            }\n\n            let req = this.makeAPIRequest({...opts, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n        await this.doPromises(promises, allResults, opts.observe);\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n    static async startJob(env, movie, preset){\n        let movieObj = await this.makeAPIRequest({\n            env, path: \"/movies\", qs: {\n                filter: `name=${movie}`\n            }\n        });\n\n        let id = movieObj?.data?.[0]?.id\n        if(!id) return {};\n\n        // Fire and forget.\n        let data = await this.makeAPIRequest({\n            env, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: preset,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            movieId: id, reqData: data,\n        };\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        if(this.isLoaded(env)){\n            return (await this.getAll(env)).findById(id);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: `/${this.endpoint}/${id}`,\n                qs\n            });\n            if(data.data) return new this({data: data.data, remote: env, included: data.included});\n        }\n    }\n\n    static async getByName(env, name, qs){\n        if(this.isLoaded(env)){\n            return (await this.getAll(env)).findByName(name);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: `/${this.endpoint}`,\n                qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n            });\n            //TODO included might not wokr correctly here\n            if(data.data[0]) return new this({data: data.data[0], remote: env, included: data.included});\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.hasLoadedAll = this.hasLoadedAll || {};\n        if(this.isLoaded(env)) return this.hasLoadedAll[env];\n\n        let datas = await lib.indexPathFast(env, `/${this.endpoint}?page=1p10`);\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.hasLoadedAll[env] = all;\n        return all;\n    }\n    static async removeCache(env){\n        this.hasLoadedAll = this.hasLoadedAll || {};\n        if(this.isLoaded(env)){\n            this.hasLoadedAll[env] = undefined;\n        }\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n        // Cache by path\n        if(path){\n            if(exists[path]) return exists[path];\n            exists[path] = this;\n        }\n\n        this.meta = {};\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    log(chalk`{red Node Error} ${e.message}`);\n                    throw new AbortError(\"Could not load code of local file\");\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    this.data = Preset.newShell();\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path){\n        let data = JSON.parse(fs.readFileSync(path));\n        let provider = await Provider.getByName(\"DEV\", data.relationships.providerType.data.name);\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext);\n        return new Preset({path: realpath});\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return;\n\n        const regex = /autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            write(chalk`Starting job {green ${this.name}} on {green ${test}}... `);\n            let {movieId} = await lib.startJob(env, test, remote.id);\n            if(movieId){\n                write(chalk`movie {blue ${movieId}}. `);\n                log(chalk`OK`);\n            }else{\n                log(chalk`{red No movie found}, Fail.`);\n            }\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        //log(this);\n        let proType = await this.resolveField(Provider, \"providerType\");\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        fs.writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        fs.writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        //log(chalk`Saving {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        if(this.meta.proType){\n            return chalk`{green ${id}}: {red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext){\n        return path.join(configObject.repodir, \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        let fname = this.name;\n        if(!fname && this.path){\n            let bname = basename(this.path);\n            fname = bname.substring(0, bname.length - (this.ext.length + 1));\n        }\n        return path.join(configObject.repodir, \"silo-metadata\", fname + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true, timeout: 5000\n        });\n        write(chalk`response {yellow ${res.statusCode}} `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n    async uploadCodeToEnv(env, includeMetadata){\n        if(!this.name){\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n            return;\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                });\n                write(\"metadata OK, \");\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        write(\"Done. \");\n        if(this.test){\n            log(\"test...\")\n            this.runTest(env)\n        }else{\n            log(\"No test\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(fs.readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport fs from \"fs\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            let f = fs.readFileSync(path, \"utf-8\")\n            try{\n                data = JSON.parse(fs.readFileSync(path, \"utf-8\"));\n            }catch(e){\n                throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n            }\n        }\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            fs.writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        write(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        log(\"Required notifications: \");\n        this.notifications.log();\n\n        write(\"Required rules: \");\n        log(this.rules.arr.length);\n        this.rules.log();\n\n        write(\"Required presets: \");\n        log(this.presets.arr.length);\n        this.presets.log();\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = this.normalizeMetadata(included);\n        }\n    }\n    normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","\nexport let testCases = [\n    [\"one segment good\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"endTime\": \"00:02:37:20\",\n                        \"startTime\": \"00:01:38:10\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"00:01:39:00\",\n                                \"outPoint\": \"00:02:19:00\"\n                            }\n                        ]\n                    }\n                ],\n            }\n        }\n    }],\n    [\"out of order segment 1-2\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:35:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"bad 0 hour timecodes\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:01:00;00\",\n                        \"endTime\": \"00:02:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"00:03:00;00\",\n                        \"endTime\": \"00:04:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"00:05:00;00\",\n                        \"endTime\": \"00:06:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"bad ovelapping segments\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:20:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"good segments\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:35:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"good segments w/ good woos\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:20:39;00\",\n                                \"outPoint\": \"01:21:49;00\"\n                            }\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:35:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:36:39;00\",\n                                \"outPoint\": \"01:37:49;00\"\n                            }\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"good segments w/ good woos (multiple woos]\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:20:39;00\",\n                                \"outPoint\": \"01:21:49;00\"\n                            },\n                            {\n                                \"inPoint\": \"01:22:39;00\",\n                                \"outPoint\": \"01:23:49;00\"\n                            }\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:35:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:36:39;00\",\n                                \"outPoint\": \"01:37:49;00\"\n                            },\n                            {\n                                \"inPoint\": \"01:38:39;00\",\n                                \"outPoint\": \"01:40:37;20\"\n                            }\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"good segments w/ bad woos (fully outside segment]\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:33:39;00\",\n                                \"outPoint\": \"01:35:49;00\"\n                            },\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:35:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:36:39;00\",\n                                \"outPoint\": \"01:37:49;00\"\n                            },\n                            {\n                                \"inPoint\": \"01:38:39;00\",\n                                \"outPoint\": \"01:40:37;20\"\n                            }\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n    [\"good segments w/ bad woos (go past segment out time]\", {\n        \"userMetaData\": {\n            \"segments\": {\n                \"segments\": [\n                    {\n                        \"startTime\": \"00:59:40;00\",\n                        \"endTime\": \"00:59:59;24\",\n                        \"woo\": [ ]\n                    },\n                    {\n                        \"startTime\": \"01:00:00;00\",\n                        \"endTime\": \"01:30:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:20:39;00\",\n                                \"outPoint\": \"01:31:49;00\"\n                            },\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:35:00;00\",\n                        \"endTime\": \"01:40:37;20\",\n                        \"woo\": [\n                            {\n                                \"inPoint\": \"01:36:39;00\",\n                                \"outPoint\": \"01:37:49;00\"\n                            },\n                            {\n                                \"inPoint\": \"01:38:39;00\",\n                                \"outPoint\": \"01:40:37;20\"\n                            }\n                        ]\n                    },\n                    {\n                        \"startTime\": \"01:50:00;00\",\n                        \"endTime\": \"01:59:00;00\",\n                        \"woo\": [ ]\n                    },\n                ],\n            }\n        }\n    }],\n];\n\nimport Asset from \"./asset.js\";\n\nfunction recursivePatch(target, patch){\n    if(typeof patch !== \"object\" || Array.isArray(patch)) return patch;\n    for(let [key, value] of Object.entries(patch)){\n        if(typeof value === \"object\"){\n            target[key] = recursivePatch(target[key], value);\n        }else{\n            target[key] = value;\n        }\n    }\n    return target;\n}\n\nexport async function testFunction(args){\n    function uuid(args){\n        const digits = 16;\n        return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n    }\n\n    let json = JSON.parse(require(\"fs\").readFileSync(\"recontribution_init.json\"));\n\n    for(let [name, patch] of testCases){\n        let base = JSON.parse(JSON.stringify(json));\n        base[\"Metadata\"] = recursivePatch(base[\"Metadata\"], patch);\n\n        let asset = await Asset.createNew(\"USKN_R_\" + uuid(), \"UAT\");\n        log(name);\n        log(asset.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"));\n        await asset.addFile(\"SdviMovieFileMaster\", \"s3://discovery.com.uat.onramp.archive.us-east-1/DKNOXR_Master2.mxf\");\n        await asset.startWorkflow(\"External Logging\", {\n            version: 1,\n            message: `Test: ${name}`,\n        });\n        await asset.startWorkflow(\"AS302 Test DKNOX Recontribution\", base);\n    }\n}\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nconst inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nfunction addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        QA:  \"https://discovery-qa.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.arr.map(x => ({\n                name: x.chalkPrint(true),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class){\n    addAutoCompletePrompt();\n    let basePath = join(configObject.repodir, path)\n    let f = await readdir(basePath);\n    let objs = f.map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset(purpose = \"preset\"){\n    return selectLocal(\"silo-presets\", \"preset\", Preset);\n}\nexport async function selectRule(purpose = \"rule\"){\n    return selectLocal(\"silo-rules\", purpose, Rule);\n}\n\nexport async function askInput(name, question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset,\n    AbortError, UnconfiguredEnvError, Collection, APIError\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {writeFileSync, readFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport {testFunction} from \"./unitTestRally.js\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = args.provider;\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset();\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(provider.name === \"SdviEvaluate\"){\n            preset._code = `'''\\nname: ${name}\\n'''\\n\\n# code here\\n`;\n        }else{\n            preset._code = \"\"\n        }\n\n        preset.saveLocalMetadata();\n        preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: preset.ext});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput) return ptr;\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command,  [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset();\n        let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\n        let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule(\"dynamic next\")){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule();\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str){\n    str = str.trim();\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            return await Preset.getById(match[2], match[3]);\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /silo\\-(\\w+)\\//.exec(str)){\n        try{\n            switch(match[1]){\n                case \"presets\": return new Preset({path: str});\n                case \"rules\": return new Rule({path: str});\n                case \"metadata\": return await Preset.fromMetadata(str);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getAll(this.env);\n        let start = rules.findByNameContains(name);\n        let stop;\n        if(stopName) stop = rules.findByNameContains(stopName);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n\n        this.chain = new SupplyChain(start, stop);\n        await this.chain.calculate();\n        await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                log(\"Loading code\");\n                await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n                log(\"Done\");\n            }\n            await this.chain.syncTo(args[\"to\"]);\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name);\n                log(preset.chalkPrint(true));\n                if(otherPreset){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    otherPreset = {};\n                    log(chalk`{red (None)}`);\n                }\n\n                if(preset.code === otherPreset.code){\n                    log(\"Code Same\");\n                }else{\n                    log(\"Code Different\");\n                }\n            }\n\n        }else{\n            await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    @helpText(`create/modify asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Options are create, delete, launch, addfile. You can supply multiple actions to chain them`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset){\n            throw new AbortError(\"No asset found/created\");\n        }\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = args[\"init-data\"];\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                let jobName = args[\"job-name\"];\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset.chalkPrint(false)}`);\n                }\n\n                asset.startWorkflow(jobName, initData)\n            }else if(arg === \"addfile\"){\n                await asset.addFile(args[\"file-label\"], args[\"file-uri\"]);\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\"){\n                log(asset);\n            }\n        }\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async replaceItem(args){\n    },\n\n    async unitTest(args){\n        await testFunction(args);\n    },\n\n    async findLeslie(args){\n        let allLesieLike = [\n            ...(await this.listAssets(args, \"HGTV\")),\n\n            ...(await this.listAssets(args, \"GAC\")),\n            ...(await this.listAssets(args, \"Great American Country\")),\n\n            ...(await this.listAssets(args, \"COOK\")),\n            ...(await this.listAssets(args, \"Cooking Channel\")),\n\n            ...(await this.listAssets(args, \"TRAV\")),\n            ...(await this.listAssets(args, \"Travel Channel\")),\n\n            ...(await this.listAssets(args, \"DIY\")),\n            ...(await this.listAssets(args, \"DIY Network\")),\n\n            ...(await this.listAssets(args, \"FOOD\")),\n            ...(await this.listAssets(args, \"Food Network\")),\n        ];\n\n        return allLesieLike;\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                filter: JSON.stringify({\n                    createdBefore: Date.now(), tag,\n                }),\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        return req;\n    },\n\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        let asset = await Asset.getByName(\"UAT\", args.name);\n        log(asset);\n    },\n\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    }\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"LOCAL\", \"DEV\", \"UAT\", \"QA\", \"PROD\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","args","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","on","chunk","write","end","time","timestr","exitCode","rp","importLazy","global","log","console","process","errorLog","red","lib","makeAPIRequest","env","path_full","payload","body","method","qs","headers","fullResponse","timeout","config","api","Error","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","stringify","vverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","drawProgress","max","size","pct","Number","numFilled","Math","floor","numEmpty","repeat","indexPathFast","baselink","first","linkToPage","page","allResults","chunksize","limit","req","item","isLocalEnv","envName","startJob","movie","preset","movieObj","filter","id","type","relationships","movieId","reqData","constructor","message","captureStackTrace","UnconfiguredEnvError","Collection","arr","Symbol","iterator","findById","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","isLoaded","hasLoadedAll","getById","getAll","endpoint","remote","included","getByName","getAllPreCollect","datas","map","removeCache","undefined","resolveApply","dataObj","direction","resolveField","isArray","field","cleanup","entries","organization","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","sort","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","exists","Preset","pathResolve","dirname","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","newShell","fromMetadata","fs","provider","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","proType","saveLocal","saveLocalMetadata","saveLocalFile","writeFileSync","localmetadatapath","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","fname","bname","substring","immutable","uploadPresetData","grabMetadata","includeMetadata","metadata","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","calculate","allRules","allPresets","allProviders","allNotifications","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rules","presets","delete","syncTo","rule","Asset","normalizeMetadata","newMetadata","md","lite","createNew","addFile","label","fileuris","Array","instances","startWorkflow","jobName","initData","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","testCases","recursivePatch","target","patch","testFunction","uuid","digits","random","pow","base","asset","self","version","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","defaults","DEV","UAT","QA","PROD","q","envs","prompt","choices","keys","checked","questions","defaultKey","default","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","autoDefault","defaultProvider","selectLocal","typeName","Class","basePath","objs","objsMap","none","source","sofar","input","toLowerCase","selectPreset","purpose","selectRule","askInput","question","def","ok","argv","argparse","string","protect","alias","printHelp","help","getFilesFromArgs","lastArg","_","shift","files","getStdin","stdin","presetsub","before","$grab","$create","configHelpers","$list","attach","rawOutput","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","transition","description","jupytersub","output","$build","cmd","categorizeString","trim","supplysub","$calc","stopName","stop","chain","postAction","otherPresets","otherPreset","$make","subCommand","object","after","ret","cli","helpArg","jupyter","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","startsWith","newConfig","y","mode","checkSegments","allIndexBundle","segments","userMetaData","r","reduce","lastSegment","ind","curSegment","startTime","endTime","replaceItem","unitTest","findLeslie","allLesieLike","listAssets","tag","createdBefore","Date","noRelationships","test2","wfr","wfrm","noop","unknownCommand","noCommand","packageVersion","resultStr","$main","enabled","level","force","defaultEnv","_old","white","main","stack","module","exports"],"mappings":"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"}