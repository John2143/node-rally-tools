{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/providers.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 0\n    }){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload);\n        }\n\n        if(configObject.vverbose){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: {\n                //SDVI ignores this header sometimes.\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({...opts, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n    static async startJob(env, movie, preset){\n        let movieObj = await this.makeAPIRequest({\n            env, path: \"/movies\", qs: {\n                filter: `name=${movie}`\n            }\n        });\n\n        let id = movieObj?.data?.[0]?.id\n        if(!id) return {};\n\n        // Fire and forget.\n        let data = await this.makeAPIRequest({\n            env, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: preset,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            movieId: id, reqData: data,\n        };\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    constructor(){}\n    resolveApply(datum, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = datum.findById(dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = datum.findByName(dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n    resolveField(datum, name, isArray=false, direction=\"generic\"){\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return field.data.map(o => this.resolveApply(datum, o, direction));\n        }else{\n            return this.resolveApply(datum, field.data, direction);\n        }\n    }\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        delete this.relationships.organization;\n        delete this.data.id;\n        delete this.data.links;\n    }\n}\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Provider{\n    constructor(data, env){\n        this.data = data;\n        this.meta = {};\n        this.remote = env;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    @cached static async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return new Collection(providers.map(x => new Provider(x, env)));\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\n\nexport default Provider;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data} = {}){\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n        if(path){\n            if(exists[path]) return exists[path];\n            exists[path] = this;\n        }\n        this.meta = {};\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    log(chalk`{red Node Error} ${e.message}`);\n                    throw new AbortError(\"Could not load code of local file\");\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    this.data = Preset.newShell();\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path){\n        let providers = await Provider.getProviders(configObject.defaultEnv);\n        let data = JSON.parse(fs.readFileSync(path));\n        let provider = providers.findByName(data.relationships.providerType.data.name);\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext);\n        return new Preset({path: realpath});\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getProviders(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return;\n\n        const regex = /autotest:\\s?([\\w\\d_. \\/]+)[\\r\\s\\n]*?/m;\n        const match = regex.exec(this.code);\n        if(match) return match[1];\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        write(chalk`Starting job {green ${this.name}} on {green ${this.test})}... `);\n        let {movieId} = await lib.startJob(env, this.test, remote.id);\n        if(movieId){\n            write(chalk`movie {blue ${movieId}}. `);\n            log(chalk`OK`);\n        }else{\n            log(chalk`{red No movie found}, Fail.`);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let providers = await Provider.getProviders(this.remote);\n        let proType = this.resolveField(providers, \"providerType\");\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        fs.writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        fs.writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        //log(chalk`Saving {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        if(this.meta.proType){\n            return chalk`{green ${id}}: {red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: {blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext){\n        return path.join(configObject.repodir, \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        let fname = this.name;\n        if(!fname && this.path){\n            let bname = basename(this.path);\n            fname = bname.substring(0, bname.length - (this.ext.length + 1));\n        }\n        return path.join(configObject.repodir, \"silo-metadata\", fname + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}} `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n    async uploadCodeToEnv(env, includeMetadata){\n        if(!this.name){\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n            return;\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                });\n                write(\"metadata OK, \");\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        write(\"Done. \");\n        if(this.test){\n            log(\"test...\")\n            this.runTest(env)\n        }else{\n            log(\"No test\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(fs.readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n    //Todo techincal debt, refactor in all classes\n    static async getByName(env, name){\n        if(this.hasLoadedAll){\n            return (await Preset.getPresets(env)).findByName(name);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: \"/presets\", qs: {\n                    filter: `name=${name}`,\n                },\n            });\n            if(data.data[0]) return new Preset({data: data.data[0], remote: env});\n        }\n    }\n    static async getById(env, id){\n        if(this.hasLoadedAll){\n            return (await this.getPresets(env)).findById(id);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: \"/presets/\" + id,\n            });\n            if(data.data) return new this({data: data.data, remote: env});\n        }\n    }\n\n    @cached static async getPresets(env){\n        Preset.hasLoadedAll = true;\n        let data = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return new Collection(data.map(dat => new Preset({remote: env, data: dat})));\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Notification{\n    constructor(data, env){\n        this.data = data;\n        this.meta = {};\n        this.remote = env;\n    }\n    @cached static async getNotifications(env){\n        let notifications = await lib.indexPath(env, \"/notificationPresets?page=1p25\");\n        notifications = notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n        return new Collection(notifications.map(x => new Notification(x, env)));\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\n\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport fs from \"fs\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            let f = fs.readFileSync(path, \"utf-8\")\n            data = JSON.parse(fs.readFileSync(path, \"utf-8\"));\n        }\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        let presets = await Preset.getPresets(env);\n        let rules = await Rule.getRules(env);\n        let providers = await Provider.getProviders(env);\n        let notifications = await Notification.getNotifications(env);\n\n        let preset  = this.resolveField(presets, \"preset\", false, \"specific\");\n        let pNext   = this.resolveField(rules, \"passNext\", false, \"specific\");\n        let eNext   = this.resolveField(rules, \"errorNext\", false, \"specific\");\n        let proType = this.resolveField(providers, \"providerType\", false, \"specific\");\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\", true, \"specific\");\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\", true, \"specific\");\n        let passNotif  = this.resolveField(notifications, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            fs.writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        for(let key in this.relationships){\n            let relationship = this.relationships[key];\n            if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                delete this.relationships[key];\n            }\n        }\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let presets = await Preset.getPresets(this.remote);\n        let rules = await Rule.getRules(this.remote);\n        let providers = await Provider.getProviders(this.remote);\n        let notifications = await Notification.getNotifications(this.remote);\n\n        let preset  = this.resolveField(presets, \"preset\", false);\n        let pNext   = this.resolveField(rules, \"passNext\", false);\n        let eNext   = this.resolveField(rules, \"errorNext\", false);\n        let proType = this.resolveField(providers, \"providerType\", false);\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\", true);\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\", true);\n        let passNotif  = this.resolveField(notifications, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n        delete this.relationships[\"dynamicNexts\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(10);\n        try{\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n    static async getByName(env, name){\n        return (await Rule.getRules(env)).findByName(name);\n    }\n    static async getById(env, id){\n        return (await Rule.getRules(env)).findById(id);\n    }\n\n    @cached static async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return new Collection(rules.map(data => new Rule({data, remote: env})));\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\n\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getRules(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getPresets(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Getting providers... \");\n        this.allProviders = await Provider.getProviders(this.remote);\n        log(this.allProviders.length);\n\n        write(\"Getting notifications... \");\n        this.allNotifications = await Notification.getNotifications(this.remote);\n        log(this.allNotifications.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        log(\"Required notifications: \");\n        this.notifications.log();\n\n        write(\"Required rules: \");\n        log(this.rules.arr.length);\n        this.rules.log();\n\n        write(\"Required presets: \");\n        log(this.presets.arr.length);\n        this.presets.log();\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            await preset.save(env);\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                await rule.saveA(env);\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.getRules.remove([env]);\n\n            for(let rule of this.rules){\n                await rule.saveB(env);\n            }\n        }\n    }\n}\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n","import {configObject} from \"./config.js\";\nimport {join} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nconst inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nfunction addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.arr.map(x => ({\n                name: x.chalkPrint(true),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function selectLocal(path, typeName, Class){\n    addAutoCompletePrompt();\n    let basePath = join(configObject.repodir, path)\n    let f = await readdir(basePath);\n    let objs = f.map(name => new Class({path: name}));\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset(purpose = \"preset\"){\n    return selectLocal(\"silo-presets\", \"preset\", Preset);\n}\nexport async function selectRule(purpose = \"rule\"){\n    return selectLocal(\"silo-rules\", purpose, Rule);\n}\n\nexport async function askInput(name, question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection, APIError\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n        }\n    },\n    async $create(args){\n        let provier, name, ext;\n        if(args.provider){\n            provider = args.provider;\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getProviders(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset();\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(provider.name === \"SdviEvaluate\"){\n            preset._code = `'''\\nname: ${name}\\n'''\\n\\n# code here\\n`;\n        }else{\n            preset._code = \"\"\n        }\n\n        preset.saveLocalMetadata();\n        preset.saveLocalFile();\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getPresets(this.env);\n        if(args.resolve){\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: preset.ext});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput) return ptr;\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command,  [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset();\n        let passNext = await configHelpers.selectRule(\"'On Exit OK'\");\n        let errorNext = await configHelpers.selectRule(\"'On Exit Error'\");\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let rule = new Rule();\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str){\n    str = str.trim();\n    let match\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            return await Preset.getById(match[2], match[3])\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3])\n        }else{\n            return null\n        }\n    }else if(match = /silo\\-(\\w+)\\//.exec(str)){\n        switch(match[1]){\n            case \"presets\": return new Preset({path: str});\n            case \"rules\": return new Rule({path: str});\n            case \"metadata\": return await Preset.fromMetadata(str);\n        }\n    }else{\n        return null\n    }\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getRules(this.env);\n        let start = rules.findByNameContains(name);\n        let stop;\n        if(stopName) stop = rules.findByNameContains(stopName);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n\n        this.chain = new SupplyChain(start, stop);\n        await this.chain.calculate();\n        await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                log(\"Loading code\");\n                await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n                log(\"Done\");\n            }\n            await this.chain.syncTo(args[\"to\"]);\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name);\n                log(preset.chalkPrint(true));\n                if(otherPreset){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    otherPreset = {};\n                    log(chalk`{red (None)}`);\n                }\n\n                if(preset.code === otherPreset.code){\n                    log(\"Code Same\");\n                }else{\n                    log(\"Code Different\");\n                }\n            }\n\n        }else{\n            await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getProviders(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    }\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"UAT\", \"DEV\", \"PROD\", \"LOCAL\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (?)}`;\n                }\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","rp","importLazy","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","env","path","path_full","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","key","rally_api","url","stringify","vverbose","requestOptions","uri","auth","bearer","Accept","simple","resolveWithFullResponse","response","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","isLocalEnv","envName","startJob","movie","preset","movieObj","filter","id","type","relationships","movieId","reqData","Error","constructor","message","captureStackTrace","name","Collection","arr","Symbol","iterator","findById","find","x","findByName","findByNameContains","d","chalkPrint","length","RallyBase","resolveApply","datum","dataObj","direction","resolveField","isArray","field","map","o","cleanup","val","Object","entries","organization","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","found","cached","target","oldFunc","cachedValues","newFunc","clearCache","cachePush","remove","item","deepAccess","defineAssoc","classname","shortname","split","lastKey","pop","defineProperty","prototype","get","set","spawn","options","reject","start","performance","now","stderr","cp","cp_spawn","on","chunk","end","time","timestr","exitCode","Provider","meta","remote","getEditorConfig","editorConfig","fileExt","getFileExtension","getProviders","providers","sort","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","exists","Preset","pathResolve","dirname","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","newShell","fromMetadata","defaultEnv","fs","provider","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","match","runTest","getByName","proType","saveLocal","saveLocalMetadata","saveLocalFile","writeFileSync","localmetadatapath","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","providerData","_code","v","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","fname","bname","substring","immutable","uploadPresetData","res","grabMetadata","includeMetadata","metadata","hasLoadedAll","getPresets","getById","dat","Notification","getNotifications","notifications","Rule","f","presets","rules","getRules","pNext","eNext","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","relationship","Array","SupplyChain","startingRule","stopRule","calculate","allRules","allPresets","allProviders","allNotifications","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","delete","undefined","syncTo","rule","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","result","inquirer","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","$api","propArray","defaults","DEV","UAT","PROD","q","envs","prompt","choices","keys","checked","questions","defaultKey","default","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","autoDefault","defaultProvider","selectLocal","typeName","Class","basePath","objs","objsMap","none","source","sofar","input","toLowerCase","selectPreset","purpose","selectRule","askInput","question","def","ok","argv","argparse","string","protect","alias","printHelp","help","getFilesFromArgs","lastArg","_","shift","files","getStdin","stdin","presetsub","before","$grab","$create","configHelpers","$list","attach","rawOutput","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","passNext","errorNext","description","jupytersub","output","$build","cmd","categorizeString","trim","supplysub","$calc","stopName","stop","chain","postAction","otherPresets","otherPreset","$make","subCommand","object","after","ret","cli","helpArg","jupyter","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","startsWith","newConfig","y","mode","noop","unknownCommand","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","_old","white","main","stack","module","exports","allIndexBundle"],"mappings":"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"}