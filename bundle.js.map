{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/providers.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false\n    }){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload);\n        }\n\n        if(configObject.vverbose){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout: 5000,\n            auth: {bearer: rally_api_key},\n            headers: {\n                //SDVI ignores this header sometimes.\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n        }catch(e){\n            log(e?.cause.name)\n            if(e.code === \"ETIMEDOUT\"){\n                throw new APIError(response, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest(typeof env === \"string\" ? {env, path} : env);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest(typeof env === \"string\" ? {env, path} : env);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static async startJob(env, movie, preset){\n        let movieObj = await this.makeAPIRequest({\n            env, path: \"/movies\", qs: {\n                filter: `name=${movie}`\n            }\n        });\n\n        let id = movieObj?.data?.[0]?.id\n        if(!id) return {};\n\n        // Fire and forget.\n        let data = await this.makeAPIRequest({\n            env, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: preset,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            movieId: id, reqData: data,\n        };\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this) log(d.chalkPrint(true));\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    constructor(){}\n    resolveApply(datum, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = datum.findById(dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = datum.findByName(dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n    resolveField(datum, name, isArray=false, direction=\"generic\"){\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return field.data.map(o => this.resolveApply(datum, o, direction));\n        }else{\n            return this.resolveApply(datum, field.data, direction);\n        }\n    }\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        delete this.relationships.organization;\n        delete this.data.id;\n        delete this.data.links;\n    }\n}\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this.data, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this.data, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Provider{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    //TODO env is unused...\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    @cached static async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return new Collection(providers.map(x => new Provider(x, env)));\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"id\");\ndefineAssoc(Provider, \"name\", \"attributes.name\");\ndefineAssoc(Provider, \"category\", \"attributes.category\");\n\nexport default Provider;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data}){\n        super();\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            this.path = path;\n            let pathspl = this.path.split(\".\");\n            this.ext = pathspl[pathspl.length-1];\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} ${e.message}`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            let name = this.parseFilenameForName() || this.parseCodeForName();\n            try{\n                this.data = this.getLocalMetadata();\n                this.isGeneric = true;\n                if(!name) name = this.name;\n            }catch(e){\n                this.data = Preset.newShell();\n                this.isGeneric = false;\n            }\n            this.name = name;\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n    }\n    static newShell(){\n        return {\n            \"attributes\": {},\n            \"relationships\": {},\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getProviders(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return;\n\n        const regex = /autotest:\\s?([\\w\\d_. \\/]+)[\\r\\s\\n]*?/m;\n        const match = regex.exec(this.code);\n        if(match) return match[1];\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        write(chalk`Starting job {green ${this.name}} on {green ${this.test})}... `);\n        let {movieId} = await lib.startJob(env, this.test, remote.id);\n        if(movieId){\n            write(chalk`movie {blue ${movieId}}. `);\n            log(chalk`OK`);\n        }else{\n            log(chalk`{red No movie found}, Fail.`);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let providers = await Provider.getProviders(this.remote);\n        let proType = this.resolveField(providers, \"providerType\");\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            log(\"Non generic\");\n            await this.resolve();\n            this.cleanup();\n        }\n        fs.writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        fs.writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id) || \"Local\")\n        if(pad) id = id.padStart(10);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    get localpath(){\n        return path.join(configObject.repodir, \"silo-presets\", this.name + \".\" + this.ext);\n    }\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get localmetadatapath(){\n        let fname = this.name;\n        if(!fname && this.path){\n            let bname = basename(this.path);\n            fname = bname.substring(0, bname.length - (this.ext.length + 1));\n        }\n        return path.join(configObject.repodir, \"silo-metadata\", fname + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}} `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n    async uploadCodeToEnv(env, includeMetadata){\n        if(!this.name){\n            log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n            return;\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                });\n                write(\"metadata OK, \");\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log(\"Done\");\n        if(this.test){\n            this.runTest(env)\n        }else{\n            log(\"No test\");\n        }\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(fs.readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n    static async getByName(env, name){\n        if(Preset.hasLoadedAll){\n            return (await Preset.getPresets(env)).findByName(name);\n        }else{\n            let data = await lib.makeAPIRequest({\n                env, path: \"/presets\", qs: {\n                    filter: `name=${name}`,\n                },\n            });\n            if(data.data[0]) return new Preset({data: data.data[0], remote: env});\n        }\n    }\n\n    @cached static async getPresets(env){\n        Preset.hasLoadedAll = true;\n        let data = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return new Collection(data.map(dat => new Preset({remote: env, data: dat})));\n    }\n}\n\ndefineAssoc(Preset, \"name\", \"attributes.name\");\ndefineAssoc(Preset, \"id\", \"id\");\ndefineAssoc(Preset, \"attributes\", \"attributes\");\ndefineAssoc(Preset, \"relationships\", \"relationships\");\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Notification{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    @cached static async getNotifications(env){\n        let notifications = await lib.indexPath(env, \"/notificationPresets?page=1p25\");\n        notifications = notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n        return new Collection(notifications.map(x => new Notification(x, env)));\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"id\");\ndefineAssoc(Notification, \"name\", \"attributes.name\");\ndefineAssoc(Notification, \"address\", \"attributes.address\");\ndefineAssoc(Notification, \"type\", \"attributes.type\");\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nclass Rule extends RallyBase{\n    constructor(data, remote){\n        super();\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    async acclimatize(env){\n        let presets = await Preset.getPresets(env);\n        let rules = await Rule.getRules(env);\n        let providers = await Provider.getProviders(env);\n        let notifications = await Notification.getNotifications(env);\n\n        let preset  = this.resolveField(presets, \"preset\", false, \"specific\");\n        let pNext   = this.resolveField(rules, \"passNext\", false, \"specific\");\n        let eNext   = this.resolveField(rules, \"errorNext\", false, \"specific\");\n        let proType = this.resolveField(providers, \"providerType\", false, \"specific\");\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\", true, \"specific\");\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\", true, \"specific\");\n        let passNotif  = this.resolveField(notifications, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            fs.writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        for(let key in this.relationships){\n            let relationship = this.relationships[key];\n            if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                delete this.relationships[key];\n            }\n        }\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rules {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            await this.patchStrip();\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return path.join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let presets = await Preset.getPresets(this.remote);\n        let rules = await Rule.getRules(this.remote);\n        let providers = await Provider.getProviders(this.remote);\n        let notifications = await Notification.getNotifications(this.remote);\n\n        let preset  = this.resolveField(presets, \"preset\", false);\n        let pNext   = this.resolveField(rules, \"passNext\", false);\n        let eNext   = this.resolveField(rules, \"errorNext\", false);\n        let proType = this.resolveField(providers, \"providerType\", false);\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\", true);\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\", true);\n        let passNotif  = this.resolveField(notifications, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n        delete this.relationships[\"dynamicNexts\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    static async getByName(env, name){\n        return (await Rule.getRules(env)).findByName(name);\n    }\n\n    @cached static async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return new Collection(rules.map(data => new Rule(data, env)));\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"attributes.name\");\ndefineAssoc(Rule, \"id\", \"id\");\ndefineAssoc(Rule, \"relationships\", \"relationships\");\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        this.startingRule = startingRule;\n        this.stopRule = stopRule\n        this.remote = startingRule.remote;\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getRules(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getPresets(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Getting providers... \");\n        this.allProviders = await Provider.getProviders(this.remote);\n        log(this.allProviders.length);\n\n        write(\"Getting notifications... \");\n        this.allNotifications = await Notification.getNotifications(this.remote);\n        log(this.allNotifications.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        log(\"Required notifications: \");\n        this.notifications.log();\n\n        write(\"Required rules: \");\n        log(this.rules.arr.length);\n        this.rules.log();\n\n        write(\"Required presets: \");\n        log(this.presets.arr.length);\n        this.presets.log();\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            await preset.save(env);\n        }\n        for(let rule of this.rules){\n            await rule.saveA(env);\n        }\n\n        log(\"\")\n        log(\"OK\")\n        log(\"Uncaching UAT\");\n        Rule.getRules.remove([env]);\n\n        for(let rule of this.rules){\n            await rule.saveB(env);\n        }\n    }\n}\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true});\n        return result.statusCode;\n    },\n}\n","import {configObject} from \"./config.js\";\nconst inquirer = importLazy(\"inquirer\");\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(env, providers){\n    let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n    if(args.defaultSelect){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.map(x => ({\n                name: prettyPrintProvider(x),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection, APIError\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        if(args.file){\n            let files = args.file;\n            if(typeof files === \"string\") files = [files];\n            this.files = files;\n        }else if(args._.shift() == \"-\"){\n            log(\"Reading from stdin\");\n            let getStdin = require(\"get-stdin\");\n            let stdin = await getStdin();\n            this.files = stdin.split(\"\\n\");\n            if(this.files[this.files.length - 1] === \"\") this.files.pop();\n        }\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n        }\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getPresets(this.env);\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: preset.ext});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput) return ptr;\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command,  [file, temp], {stdio: \"inherit\"});\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $grab(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        for(let rule of args._){\n            log(rules.findByNameContains(rule));\n        }\n\n        //log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        //for(let rule of rules) log(rule.chalkPrint());\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getRules(this.env);\n        let start = rules.findByNameContains(name);\n        let stop;\n        if(stopName) stop = rules.findByNameContains(stopName);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n\n        let chain = new SupplyChain(start, stop);\n        await chain.calculate();\n        if(args[\"to\"]){\n            await chain.syncTo(args[\"to\"]);\n        }else{\n            await chain.log();\n        }\n    },\n\n    async $magic(args){\n        let big = require(\"fs\").readFileSync(\"test.json\");\n        big = JSON.parse(big);\n\n        let presets = big.allPresets.arr.map(obj => {\n            let preset = new Preset({\n                data: obj.data, remote: big.remote\n            });\n            preset.code = obj._code;\n            return preset;\n        });\n        Preset.getPresets.cachePush([big.remote], new Collection(presets));\n\n        let rules = big.allRules.arr.map(obj => {\n            let rule = new Rule(\n                obj.data, big.remote\n            );\n            return rule;\n        });\n        Rule.getRules.cachePush([big.remote], new Collection(rules));\n\n        return await this.$calc(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Can be calc.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getProviders(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    }\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    //API Access tests\n    for(let env of [\"UAT\", \"DEV\", \"PROD\", \"LOCAL\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(e.request){\n                    log(e.request);\n                    resultStr = chalk`{red Timeout}`;\n                }\n            }else{\n                throw e;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(argv.config) loadConfig(argv.config);\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","rp","importLazy","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","env","path","path_full","payload","body","method","qs","headers","fullResponse","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","key","rally_api","url","stringify","vverbose","requestOptions","uri","timeout","auth","bearer","Accept","simple","resolveWithFullResponse","response","cause","name","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","isLocalEnv","startJob","movie","preset","movieObj","filter","id","type","relationships","movieId","reqData","Error","constructor","message","captureStackTrace","opts","Collection","arr","Symbol","iterator","findById","find","x","findByName","findByNameContains","d","chalkPrint","length","RallyBase","resolveApply","datum","dataObj","direction","resolveField","isArray","field","map","o","cleanup","val","Object","entries","organization","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","found","cached","target","oldFunc","cachedValues","newFunc","clearCache","cachePush","remove","item","deepAccess","defineAssoc","classname","shortname","split","lastKey","pop","defineProperty","prototype","get","set","spawn","options","reject","start","performance","now","stderr","cp","cp_spawn","on","chunk","end","time","timestr","exitCode","Provider","remote","getEditorConfig","editorConfig","fileExt","getFileExtension","getProviders","providers","sort","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Preset","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","newShell","acclimatize","ptype","provider","test","regex","match","runTest","getByName","proType","saveLocal","saveLocalMetadata","saveLocalFile","fs","writeFileSync","localmetadatapath","localpath","uploadRemote","uploadCodeToEnv","save","downloadCode","providerData","_code","v","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","fname","bname","substring","immutable","uploadPresetData","res","grabMetadata","includeMetadata","metadata","constructMetadata","providerID","providerType","hasLoadedAll","getPresets","dat","Notification","getNotifications","notifications","Rule","presets","rules","getRules","pNext","eNext","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","relationship","Array","SupplyChain","startingRule","stopRule","calculate","allRules","allPresets","allProviders","allNotifications","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","delete","undefined","syncTo","rule","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","result","inquirer","$api","propArray","defaults","DEV","UAT","PROD","q","envs","prompt","choices","keys","checked","questions","defaultKey","default","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","defaultProvider","defaultSelect","prettyPrintProvider","question","ok","argv","argparse","string","protect","alias","f","printHelp","help","presetsub","before","files","_","shift","getStdin","stdin","$grab","$list","rawOutput","$upload","funcs","$diff","preset2","tempfile","temp","extension","ptr","command","stdio","unknown","rulesub","jupytersub","input","output","$build","cmd","supplysub","$calc","stopName","stop","chain","$magic","big","subCommand","object","after","ret","cli","helpArg","jupyter","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","configHelpers","startsWith","newConfig","y","mode","noop","unknownCommand","noCommand","packageVersion","resultStr","request","$main","enabled","level","force","Number","defaultEnv","_old","white","main","stack","module","exports","allIndexBundle"],"mappings":"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"}