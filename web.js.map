{"version":3,"file":"web.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/config-create.js","src/providers.js","src/file.js","src/trace.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/index.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        let write = global.write;\n        if(options.noecho){\n            write = () => {};\n        }\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.error(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if([200, 201, 202, 203, 204].includes(response.statusCode) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) await opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    static async keepalive(func, inputData, {chunksize = 20, observe = async _=>_, progress = configObject.globalProgress} = {}){\n        let total = inputData ? inputData.length : func.length;\n        let i = 0;\n        let createPromise = () => {\n            let ret;\n            if(i >= total) return [];\n            if(inputData){\n                ret = [i, func(inputData[i])];\n            }else{\n                ret = [i, func[i]()];\n            }\n\n            i++;\n            return ret;\n        }\n\n        let values = [];\n        let finished = 0;\n        if(progress) process.stderr.write(\"\\n\");\n        let threads = [...this.range(chunksize)].map(async whichThread => {\n            while(true){\n                let [i, currentPromise] = createPromise();\n                if(i == undefined) break;\n                values[i] = await observe(await currentPromise);\n                if(progress) this.drawProgress(++finished, total);\n            }\n        });\n        await Promise.all(threads);\n        if(progress) process.stderr.write(\"\\n\");\n\n\n        return values;\n    }\n\n    static *range(start, end){\n        if(end === undefined){\n            end = start;\n            start = 0;\n        }\n        while(start < end) yield start++;\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        //Create a copy of the options in case we need to have a special first request\n        let start = opts.start || 1;\n        let initOpts = {...opts};\n        if(opts.pageSize){\n            initOpts.qs = {...opts.qs};\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\n        }\n\n        let json = await this.makeAPIRequest(initOpts);\n\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = await this.keepalive(\n            this.makeAPIRequest,\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\n                .map(i => ({...opts, path_full: linkToPage(i)})),\n            {chunksize: opts.chunksize, observe: opts.observe},\n        );\n        if(start == 1){\n            allResults.unshift(json);\n        }\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function* zip(...items){\n    let iters = items.map(x => x[Symbol.iterator]());\n\n    for(;;){\n        let r = [];\n        for(let i of iters){\n            let next = i.next()\n            if(next.done) return;\n            r.push(next.value);\n        }\n        yield r;\n    }\n}\n\nexport async function* unordered(proms){\n    let encapsulatedPromises = proms.map(async (x, i) => [i, await x]);\n    while(encapsulatedPromises.length > 0){\n        let [ind, result] = await Promise.race(encapsulatedPromises.filter(x => x));\n        yield result;\n\n        encapsulatedPromises[ind] = undefined;\n    }\n}\n","import {configObject} from \"./config.js\";\nimport {join, basename} from \"path\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository (empty for N/A)?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function loadLocals(path, Class){\n    let basePath = configObject.repodir;\n    let objs = (await readdir(basePath))\n        .filter(name => name.includes(path))\n        .filter(name => !basename(name).startsWith(\".\"))\n        .map(name => new Class({path: name}));\n    return objs;\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let objs = await loadLocals(path, Class);\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n\n    if(canSelectNone) objsMap.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objsMap.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite file)\"}} {red ${this.sizeHR}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n\n    get sizeHR(){\n        let units = [\"B\", \"K\", \"M\", \"G\", \"T\"];\n\n        let unitIdx = 0;\n\n        let size = this.size;\n        while(size > 1000){\n            size /= 1024;\n            unitIdx++;\n        }\n\n        if(size > 100){\n            size = Math.round(size);\n        }else{\n            size = Math.round(size * 10) / 10;\n        }\n\n        return size + units[unitIdx];\n    }\n\n    get instancesList() {\n        let instances = [];\n        for(let [key, val] of Object.entries(this.instances)){\n            let n = {id: key};\n            Object.assign(n, val);\n            instances.push(n);\n        }\n        return instances;\n    }\n\n    static rslURL(instance){\n        return `rsl://${instance.storageLocationName}/${instance.name}`;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getArtifact(env, artifact, jobid){\n    let path = `/jobs/${jobid}/artifacts/${artifact}`;\n    let art = lib.makeAPIRequest({\n        env, path,\n    }).catch(_ => null);\n\n    return await art;\n}\n\nexport async function getInfo(env, jobid){\n    let trace          = getArtifact(env, \"trace\", jobid);\n    let renderedPreset = getArtifact(env, \"preset\", jobid);\n    let result         = getArtifact(env, \"result\", jobid);\n    let error          = getArtifact(env, \"error\", jobid);\n    let output         = getArtifact(env, \"output\", jobid);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport const tracelineRegex = /^(?:[\\d\\.]+) ([\\w ]+):(\\d+): (.+)/;\nexport function parseTraceLine(line){\n    let info = tracelineRegex.exec(line);\n\n    if(!info) {\n        return {\n            full: line,\n            parsed: false,\n            content: line,\n        };\n    }\n\n    return {\n        absoluteTime: info[0],\n        presetName: info[1],\n        lineNumber: info[2],\n        text: info[3],\n        content: info[3],\n        full: line,\n        parsed: true,\n    }\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        let info = parseTraceLine(errLine);\n        if(!info.parsed){\n            errorList.push(await findLineInFile(renderedPreset, info.lineNumber));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile};\nexport default Trace;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\nimport Preset from \"./preset.js\";\nimport {getArtifact, parseTraceLine} from \"./trace.js\";\n\nimport path from \"path\";\nimport fs from \"fs\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata?page=1p100`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow){\n            //FIXME\n            //Currently, WORKFLOW_METADATA cannot be patched via api: we need to\n            //start a ephemeral eval to upload it\n            let md = JSON.stringify(JSON.stringify(metadata.Workflow));\n            let fakePreset = {\n                code: `WORKFLOW_METADATA.update(json.loads(${md}))`\n            }\n            await this.startEphemeralEvaluateIdeal(fakePreset);\n            log(\"WFMD Patched using ephemeralEval\")\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n            log(\"MD Patched\")\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(refresh = false){\n        if(this._files && !refresh) return this._files;\n\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return this._files = new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData, isBinary=false){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        //we need to strip invalid utf8 characters from the\n                        //buffer before we encode it or the sdvi backend dies\n                        providerData: Buffer.from(preset.code, isBinary && \"binary\" || \"utf8\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\\n\");\n        let dots = 0;\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(`\\r${res.data.attributes.state}${\".\".repeat(dots++)}         `);\n            if(dots === 5){ dots = 1; }\n\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(500);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n\n    async migrate(targetEnv){\n        configObject.globalProgress = false;\n        log(`Creating paired file in ${targetEnv}`);\n\n        //Fetch metadata in parallel, we await it later\n        let _mdPromise = this.getMetadata();\n\n        let name = \"DNAP_John_Test\";\n\n        let targetAsset = await Asset.getByName(targetEnv, name);\n        if(targetAsset){\n            log(`Asset already exists ${targetAsset.chalkPrint()}`);\n            //if(configObject.script) process.exit(10);\n        }else{\n            targetAsset = await Asset.createNew(name, targetEnv);\n            log(`Asset created ${targetAsset.chalkPrint()}`);\n        }\n\n        //wait for metadata to be ready before patching\n        await _mdPromise;\n        log(\"Adding asset metadata\");\n        await targetAsset.patchMetadata(this.md);\n\n        let fileCreations = [];\n        for(let file of await this.getFiles()){\n            //Check for any valid copy-able instances\n            for(let inst of file.instancesList){\n                //We need to skip internal files\n                if(inst.storageLocationName === \"Rally Platform Bucket\") continue;\n\n                log(`Adding file: ${file.chalkPrint()}`);\n                fileCreations.push(targetAsset.addFileInstance(file, inst));\n            }\n        }\n        await Promise.all(fileCreations);\n    }\n\n    async addFileInstance(file, inst, tagList = []){\n        let newInst = {\n            uri: File.rslURL(inst),\n            name: inst.name,\n            size: inst.size,\n            lastModified: inst.lastModified,\n            storageLocationName: inst.storageLocationName,\n        };\n\n        let request = lib.makeAPIRequest({\n            env: this.remote, path: `/files`, method: \"POST\",\n\n            payload: {\n                data: {\n                    type: \"files\",\n                    attributes: {\n                        label: file.label,\n                        tagList,\n                        instances: {\n                            \"1\": newInst,\n                        }\n                    },\n                    relationships: {\n                        asset: {\n                            data: {\n                                id: this.id,\n                                type: \"assets\"\n                            },\n                        },\n                    },\n                }\n            }\n        });\n\n\n        try{\n            let fileData = await request;\n            let newFile = new File({data: fileData.data, remote: this.remote, parent: this})\n            if(configObject.script) console.log(inst.uri, newFile.instancesList[0].uri);\n        }catch(e){\n            log(chalk`{red Failed file: ${file.chalkPrint()}}`)\n        }\n    }\n\n    async downloadFile(label, destFolder){\n        let files = await this.getFiles();\n\n        let file = files.findByName(label)\n\n        let c = await file.getContent();\n\n        if(destFolder){\n            let filePath = path.join(destFolder, file.instancesList[0].name);\n            fs.writeFileSync(filePath, c);\n        }else{\n            console.log(c);\n        }\n    }\n    async deleteFile(label){\n        let files = await this.getFiles();\n        let file = files.findByName(label);\n        if(!file) return false;\n        await file.delete(false);//mode=forget\n        return true;\n    }\n\n    async grep(text, {artifact = \"trace\", nameOnly = false, ordering = null}){\n        async function* reorderPromises(p){\n            ////yield in order we got it\n            //yield* p[Symbol.iterator]();\n            ////yield in order of first to finish\n            //yield* unordered(p);\n\n            //yield in chronological order\n            let k = await Promise.all(p);\n            yield* k.sort((\n                [e1, _a],\n                [e2, _b]\n            ) => {\n                return e1.attributes.completedAt - e2.attributes.completedAt;\n            });\n        }\n\n\n        elog(\"Reading jobs...\");\n        let r = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n        elog(\"Getting job artifacts...\");\n\n        function highlight(line, text){\n            let parts = line.split(text);\n            return parts.join(chalk`{blue ${text}}`);\n        }\n\n        function parseLine(x){\n            if(artifact === \"trace\"){\n                return parseTraceLine(x);\n            }else{\n                //fake the output from parseTraceLine to make it look right\n                return {content: x};\n            }\n        }\n\n        //let evals = r.filter(x => x.attributes.providerTypeName === \"SdviEvaluate\");\n        let evals = r;\n        let zipped = evals.map(async x => [x, await getArtifact(this.remote, artifact, x.id)]);\n        for await(let [e, trace] of reorderPromises(zipped)){\n            if(!trace) continue;\n\n            let lines = trace.split(\"\\n\").map(parseLine);\n            let matching = lines.filter(x => x.content.includes(text));\n            if(matching.length > 0){\n                let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n                if(nameOnly){\n                    log(chalk`{red ${preset.name}} ${e.id} {blue ${matching.length}} matche(s)`);\n                }else{\n                    log(chalk`{red ${preset.name}} ${e.id}`);\n                    log(matching.map(x => `  ${highlight(x.content, text)}`).join(\"\\n\"));\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {loadLocals} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env, shouldTest = true){\n        await this.uploadCodeToEnv(env, true, shouldTest);\n    }\n    async save(env, shouldTest = true){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env, shouldTest);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        let code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n\n        //match header like \n        // # c: d\n        // # b\n        // # a\n        // ##################\n        let headerRegex = /(^# .+[\\r\\n]+)+#+[\\r\\n]+/gim;\n        let hasHeader = headerRegex.exec(code);\n\n        if(hasHeader){\n            this.header = code.substring(0, hasHeader[0].length - 1);\n            code = code.substring(hasHeader[0].length);\n        }\n\n        return this.code = code;\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s*?([\\w\\d. \\/]+).*$/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() === \"NOUPLOAD\"){\n            write(chalk`code skipped {yellow :)}, `);\n            return;\n        }\n\n        let code = this.code;\n        let headers = {};\n\n        let providerName = this.relationships?.providerType?.data?.name;\n        if(!configObject.skipHeader && (providerName === \"SdviEvaluate\" || providerName === \"SdviEvalPro\")){\n            write(chalk`generate header, `);\n            let repodir = configObject.repodir;\n            let localpath = this.path.replace(repodir, \"\");\n            if(localpath.startsWith(\"/\")) localpath = localpath.substring(1);\n\n            try{\n                let {stdout: headerText} = await spawn(\n                    {noecho: true},\n                    \"sh\",\n                    [\n                        path.join(configObject.repodir, `bin/header.sh`),\n                        moment(Date.now()).format(\"ddd YYYY/MM/DD hh:mm:ssa\"),\n                        localpath,\n                    ]\n                );\n                code = headerText + code;\n                write(chalk`header ok, `);\n            }catch(e){\n                write(chalk`missing unix, `);\n            }\n        }\n\n        //binary presets\n        if(providerName == \"Vantage\"){\n            code = Buffer.from(code).toString(\"base64\");\n            headers[\"Content-Transfer-Encoding\"] = \"base64\";\n        }\n\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: code, method: \"PUT\", fullResponse: true, timeout: 10000,\n            headers,\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async deleteRemoteVersion(env, id=null){\n        if(lib.isLocalEnv(env)) return false;\n        if(!id){\n            let remote = await Preset.getByName(env, this.name);\n            id = remote.id;\n        }\n\n        return await lib.makeAPIRequest({\n            env, path: `/presets/${id}`,\n            method: \"DELETE\",\n        });\n    }\n\n    async delete(){\n        if(lib.isLocalEnv(this.remote)) return false;\n\n        return await this.deleteRemoteVersion(this.remote, this.id);\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                if(this.relationships.tagNames){\n                    payload.relationships = {tagNames: this.relationships.tagNames};\n                }\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode == 500){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return;\n                }\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n\n    parseHeaderInfo(){\n        if(!this.header) return null;\n        let abs = {\n            built:   /Built On:(.+)/.exec(this.header)[1]?.trim(),\n            author:  /Author:(.+)/.exec(this.header)[1]?.trim(),\n            build:   /Build:(.+)/.exec(this.header)[1]?.trim(),\n            version: /Version:(.+)/.exec(this.header)[1]?.trim(),\n            branch:  /Branch:(.+)/.exec(this.header)[1]?.trim(),\n            commit:  /Commit:(.+)/.exec(this.header)[1]?.trim(),\n            local:   /Local File:(.+)/.exec(this.header)[1]?.trim(),\n        }\n\n        let tryFormats = [\n            [true,  \"ddd MMM DD HH:mm:ss YYYY\"],\n            [false, \"ddd YYYY/MM/DD LTS\"],\n        ];\n\n        for(let [isUTC, format] of tryFormats){\n            let date;\n            if(isUTC){\n                date = moment.utc(abs.built, format)\n            }else{\n                date = moment(abs.built, format)\n            }\n\n            if(!date.isValid()) continue;\n\n            abs.offset = date.fromNow();\n\n            break;\n        }\n\n        return abs;\n    }\n\n    async printRemoteInfo(env){\n        let remote = await Preset.getByName(env, this.name);\n        await remote.downloadCode();\n        let i = remote.parseHeaderInfo();\n\n        if(i){\n            log(chalk`\n                ENV: {red ${env}}, updated {yellow ~${i.offset}}\n                Built on {blue ${i.built}} by {green ${i.author}}\n                From ${i.build || \"(unknown)\"} on ${i.branch} ({yellow ${i.commit}})\n            `.replace(/^[ \\t]+/gim, \"\").trim());\n        }else{\n            log(chalk`No header on {red ${env}}`);\n        }\n    }\n\n    async getInfo(envs){\n        await this.printDepends();\n        for(let env of envs.split(\",\")){\n            await this.printRemoteInfo(env);\n        }\n    }\n\n    async printDepends(indent=0, locals=null, seen={}){\n        let includeRegex = /@include \"(.+)\"/gim;\n        //let includeRegex = /@include/g;\n\n        let includes = [];\n\n        let inc;\n        while(inc = includeRegex.exec(this.code)){\n            includes.push(inc[1]);\n        }\n\n        //let includes = this.code\n            //.split(\"\\n\")\n            //.map(x => includeRegex.exec(x))\n            //.filter(x => x)\n            //.map(x => x[1]);\n        //log(includes);\n\n        if(!locals){\n            locals = new Collection(await loadLocals(\"silo-presets\", Preset));\n        }\n\n        log(Array(indent + 1).join(\" \") + \"- \" + this.name);\n\n        for(let include of includes){\n            if(seen[include]){\n                log(Array(indent + 1).join(\" \") + \"  - (seen) \" + include);\n            }else{\n                seen[include] = true\n                let file = await locals.findByName(include);\n                if(file){\n                    await file.printDepends(indent + 2, locals, seen);\n                }else{\n                    log(Array(indent + 1).join(\" \") + \"  - (miss) \" + include);\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async deleteTo(env){\n         for(let preset of this.presets){\n            try{\n                await preset.deleteRemoteVersion(env);\n            }catch(e){log(e);}\n         }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","require(\"source-map-support\").install();\n\nimport {lib, UnconfiguredEnvError} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nimport fs from \"fs\";\nimport {configObject} from \"./config.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            let repodir = configObject.repodir;\n            if(repodir){\n                try{\n                    fs.lstatSync(repodir).isDirectory();\n                    return true;\n                }catch(e){\n                    return false;\n                }\n            }else{\n                throw new UnconfiguredEnvError();\n            }\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n"],"names":["configFile","homedir","loadConfig","file","configObject","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","unshift","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","write","global","noecho","on","chunk","end","time","timestr","exitCode","chalk","log","text","console","process","elog","error","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","replace","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","trim","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","globalProgress","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","func","inputData","chunksize","_","progress","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","name","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","sleep","setTimeout","zip","items","iters","r","done","value","unordered","proms","encapsulatedPromises","ind","race","inquirer","importLazy","readdir","loadLocals","Class","basePath","repodir","objs","basename","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","sizeHR","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","instances","round","units","unitIdx","instancesList","n","assign","rslURL","instance","storageLocationName","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","join","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","index","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","match","includeFilename","printOutLine","eLine","getArtifact","artifact","jobid","art","catch","getInfo","trace","output","tracelineRegex","parseTraceLine","info","full","parsed","content","absoluteTime","presetName","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","Asset","lite","metadata","normalizeMetadata","newMetadata","md","usage","getMetadata","forceRefresh","req","patchMetadata","Workflow","fakePreset","startEphemeralEvaluateIdeal","Metadata","createNew","getFiles","refresh","_files","addFile","label","fileuris","Array","startWorkflow","jobName","initData","priority","startAnonWorkflow","preset","dynamicPresetData","isBinary","provider","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","dots","self","state","startEvaluate","presetid","rename","newName","migrate","targetEnv","_mdPromise","targetAsset","fileCreations","inst","addFileInstance","tagList","newInst","lastModified","asset","fileData","newFile","script","downloadFile","destFolder","files","c","filePath","fs","writeFileSync","deleteFile","grep","nameOnly","ordering","reorderPromises","p","k","e1","_a","e2","_b","completedAt","highlight","parts","parseLine","evals","zipped","lines","matching","Preset","home","colon","siloLike","pathTransform","invertedPath","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","matches","runTest","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","shouldTest","uploadCodeToEnv","save","saved","downloadCode","headerRegex","hasHeader","header","substring","_code","v","sub","endsWith","name_regex","findStringsInCode","strings","RegExp","_path","_nameOuter","_nameInner","immutable","updateImmutable","uploadPresetData","providerName","skipHeader","headerText","moment","Date","format","grabMetadata","deleteRemoteVersion","includeMetadata","tagNames","parseHeaderInfo","abs","built","author","build","version","branch","commit","local","tryFormats","isUTC","date","utc","isValid","offset","fromNow","printRemoteInfo","envs","printDepends","indent","locals","seen","includeRegex","inc","include","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","add","neededPresets","neededRules","notif","verbose","rawOutput","deleteTo","syncTo","rule","User","Tag","prefix","curated","create","notCurated","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","lstatSync","isDirectory"],"mappings":"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"}