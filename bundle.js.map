{"version":3,"file":"bundle.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/config-create.js","src/providers.js","src/file.js","src/trace.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/stage.js","src/index.js","src/baseCode.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        let write = global.write;\n        if(options.noecho){\n            write = () => {};\n        }\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n\n        if(options.stdin) {\n            options.stdin(cp.stdin);\n        }\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.error(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if([200, 201, 202, 203, 204].includes(response.statusCode) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        opts.maxParallelRequests = 1;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n    static async keepalive(funcs){\n        for(let f of funcs){\n            await f();\n        }\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function* zip(...items){\n    let iters = items.map(x => x[Symbol.iterator]());\n\n    for(;;){\n        let r = [];\n        for(let i of iters){\n            let next = i.next()\n            if(next.done) return;\n            r.push(next.value);\n        }\n        yield r;\n    }\n}\n\nexport async function* unordered(proms){\n    let encapsulatedPromises = proms.map(async (x, i) => [i, await x]);\n    while(encapsulatedPromises.length > 0){\n        let [ind, result] = await Promise.race(encapsulatedPromises.filter(x => x));\n        yield result;\n\n        encapsulatedPromises[ind] = undefined;\n    }\n}\n\nexport function* range(start, end){\n    if(end === undefined){\n        end = start;\n        start = 0;\n    }\n    while(start < end) yield start++;\n}\n\nexport class IndexObject {\n    //normal opts from any makeAPIRequest\n    //Note that full_response and pages won't work.\n    //\n    //if you want to start from another page, use `opts.start`\n    //opts.observe: async function(jsonData) => jsonData. Transform the data from the api\n    //opts.maxParallelRequests: number of max api requests to do at once\n    //opts.noCollect: return [] instead of the full data\n    constructor(opts){\n        this.opts = opts;\n    }\n\n    linkToPage(page) {\n        return this.baselink.replace(`page=1p`, `page=${page}p`);\n    }\n\n    async initializeFirstRequest(){\n        //Create a copy of the options in case we need to have a special first request\n        this.start = this.opts.start || 1;\n        let initOpts = {...this.opts};\n        if(this.opts.pageSize){\n            initOpts.qs = {...this.opts.qs};\n            initOpts.qs.page = `${this.start}p${this.opts.pageSize}`;\n        }\n\n        this.allResults = [];\n\n        //we make 1 non-parallel request to the first page so we know how to\n        //format the next requests\n        let json = await lib.makeAPIRequest(initOpts);\n\n        if(this.opts.observe) json = await this.opts.observe(json);\n        if(!this.opts.noCollect) this.allResults.push(json);\n\n        this.baselink = json.links.first;\n        this.currentPageRequest = this.start;\n\n        this.hasHit404 = false;\n    }\n\n    getNextRequestLink(){\n        this.currentPageRequest++;\n        return [this.currentPageRequest, this.linkToPage(this.currentPageRequest)];\n    }\n\n    ///promiseID is the id in `currentPromises`, so that it can be marked as\n    ///done inside the promise array. promiseID is a number from 0 to\n    ///maxparallel-1\n    async getNextRequestPromise(promiseID){\n        let [page, path_full] = this.getNextRequestLink();\n        return [promiseID, page, await lib.makeAPIRequest({\n            ...this.opts,\n            path_full,\n            fullResponse: true,\n        })];\n    }\n\n    cancel(){\n        this.willCancel = true;\n    }\n\n    async fullResults(){\n        await this.initializeFirstRequest();\n        let maxParallelRequests = this.opts.maxParallelRequests || this.opts.chunksize || 20;\n\n        let currentPromises = [];\n\n        //generate the first set of requests. Everything after this will re-use these i promiseIDs\n        for(let i = 0; i < maxParallelRequests; i++){\n            currentPromises.push(this.getNextRequestPromise(currentPromises.length));\n        }\n\n        for(;;){\n            let [promiseID, page, requestResult] = await Promise.race(currentPromises.filter(x => x));\n\n            if(this.willCancel){\n                return null;\n            }\n\n            if(requestResult.statusCode === 404){\n                this.hasHit404 = true;\n            }else if(requestResult.statusCode === 200){\n                let json = JSON.parse(requestResult.body);\n                if(this.opts.observe) json = await this.opts.observe(json);\n                if(!this.opts.noCollect) this.allResults.push(json);\n\n                if(json.data.length === 0) this.hasHit404 = true;\n            }else{\n                throw new APIError(requestResult, `(unknown args) page ${page}`, null);\n            }\n\n            if(this.hasHit404){\n                currentPromises[promiseID] = null;\n            }else{\n                currentPromises[promiseID] = this.getNextRequestPromise(promiseID);\n            }\n\n            if(currentPromises.filter(x => x).length === 0) break;\n        }\n\n        let all = [];\n        for(let result of this.allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n}\n","import {configFile, configObject} from \"./config.js\";\nimport {join, basename} from \"path\";\nimport {writeFileSync} from \"fs\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository (empty for N/A)?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function loadLocals(path, Class){\n    let basePath = configObject.repodir;\n    let objs = (await readdir(basePath))\n        .filter(name => name.includes(path))\n        .filter(name => !basename(name).startsWith(\".\"))\n        .map(name => new Class({path: name}));\n    return objs;\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let objs = await loadLocals(path, Class);\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n\n    return await selectLocalMenu(objsMap, typeName, canSelectNone);\n}\n\nexport async function selectLocalMenu(objs, typeName, canSelectNone = true){\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    if(canSelectNone) objs.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objs.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n\nexport async function saveConfig(newConfigObject, {ask = true, print = true} = {}){\n    //Create readable json and make sure the user is ok with it\n    let newConfig = JSON.stringify(newConfigObject, null, 4);\n    if(print) log(newConfig);\n\n    //-y or --set will make this not prompt\n    if(ask && !await askQuestion(\"Write config to disk?\")) return;\n    writeFileSync(configFile, newConfig, {mode: 0o600});\n    log(chalk`Created file {green ${configFile}}.`);\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite file)\"}} {red ${this.sizeHR}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n\n    get sizeHR(){\n        let units = [\"B\", \"K\", \"M\", \"G\", \"T\"];\n\n        let unitIdx = 0;\n\n        let size = this.size;\n        while(size > 1000){\n            size /= 1024;\n            unitIdx++;\n        }\n\n        if(size > 100){\n            size = Math.round(size);\n        }else{\n            size = Math.round(size * 10) / 10;\n        }\n\n        return size + units[unitIdx];\n    }\n\n    get instancesList() {\n        let instances = [];\n        for(let [key, val] of Object.entries(this.instances)){\n            let n = {id: key};\n            Object.assign(n, val);\n            instances.push(n);\n        }\n        return instances;\n    }\n\n    static rslURL(instance){\n        return `rsl://${instance.storageLocationName}/${instance.name}`;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getArtifact(env, artifact, jobid){\n    let path = `/jobs/${jobid}/artifacts/${artifact}`;\n    let art = lib.makeAPIRequest({\n        env, path,\n    }).catch(_ => null);\n\n    return await art;\n}\n\nexport async function getInfo(env, jobid){\n    let trace          = getArtifact(env, \"trace\", jobid);\n    let renderedPreset = getArtifact(env, \"preset\", jobid);\n    let result         = getArtifact(env, \"result\", jobid);\n    let error          = getArtifact(env, \"error\", jobid);\n    let output         = getArtifact(env, \"output\", jobid);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport const tracelineRegex = /^(?:[\\d.]+) ([\\w ]+):(\\d+): (.+)/;\nexport function parseTraceLine(line){\n    let info = tracelineRegex.exec(line);\n\n    if(!info) {\n        return {\n            full: line,\n            parsed: false,\n            content: line,\n        };\n    }\n\n    return {\n        absoluteTime: info[0],\n        presetName: info[1],\n        lineNumber: info[2],\n        text: info[3],\n        content: info[3],\n        full: line,\n        parsed: true,\n    }\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        let info = parseTraceLine(errLine);\n        if(!info.parsed){\n            errorList.push(await findLineInFile(renderedPreset, info.lineNumber));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile, getArtifact};\nexport default Trace;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\nimport Preset from \"./preset.js\";\nimport {getArtifact, parseTraceLine} from \"./trace.js\";\n\nimport path from \"path\";\nimport fs from \"fs\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata?page=1p100`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow){\n            //FIXME\n            //Currently, WORKFLOW_METADATA cannot be patched via api: we need to\n            //start a ephemeral eval to upload it\n            let md = JSON.stringify(JSON.stringify(metadata.Workflow));\n            let fakePreset = {\n                code: `WORKFLOW_METADATA.update(json.loads(${md}))`\n            }\n            await this.startEphemeralEvaluateIdeal(fakePreset);\n            log(\"WFMD Patched using ephemeralEval\")\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n            log(\"MD Patched\")\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(refresh = false){\n        if(this._files && !refresh) return this._files;\n\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return this._files = new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData, isBinary=false){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        //we need to strip invalid utf8 characters from the\n                        //buffer before we encode it or the sdvi backend dies\n                        providerData: Buffer.from(preset.code, isBinary && \"binary\" || \"utf8\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\\n\");\n        let dots = 0;\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(`\\r${res.data.attributes.state}${\".\".repeat(dots++)}         `);\n            if(dots === 5){ dots = 1; }\n\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(500);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n\n    async migrate(targetEnv){\n        configObject.globalProgress = false;\n        log(`Creating paired file in ${targetEnv}`);\n\n        //Fetch metadata in parallel, we await it later\n        let _mdPromise = this.getMetadata();\n\n        let targetAsset = await Asset.getByName(targetEnv, this.name);\n        if(targetAsset){\n            log(`Asset already exists ${targetAsset.chalkPrint()}`);\n            //if(configObject.script) process.exit(10);\n        }else{\n            targetAsset = await Asset.createNew(this.name, targetEnv);\n            log(`Asset created ${targetAsset.chalkPrint()}`);\n        }\n\n        //wait for metadata to be ready before patching\n        await _mdPromise;\n        log(\"Adding asset metadata\");\n        await targetAsset.patchMetadata(this.md);\n\n        let fileCreations = [];\n        for(let file of await this.getFiles()){\n\n            let possibleInstances = {};\n            //Check for any valid copy-able instances\n            for(let inst of file.instancesList){\n                //We need to skip internal files\n                if(inst.storageLocationName === \"Rally Platform Bucket\") continue;\n\n                log(`Adding file: ${file.chalkPrint()}`);\n                possibleInstances[inst.storageLocationName] = () => targetAsset.addFileInstance(file, inst);\n            }\n\n            if(Object.values(possibleInstances).length > 1){\n                //prioritize archive is possible\n                if(possibleInstances[\"Archive\"]){\n                    log(\"Hit archive prioritizer\");\n                    fileCreations.push(possibleInstances[\"Archive\"]);\n                }else{\n                    fileCreations.push(...Object.values(possibleInstances));\n                }\n            }else{\n                fileCreations.push(...Object.values(possibleInstances));\n            }\n\n        }\n        await Promise.all(fileCreations.map(x => x()));\n    }\n\n    async addFileInstance(file, inst, tagList = []){\n        let newInst = {\n            uri: File.rslURL(inst),\n            name: inst.name,\n            size: inst.size,\n            lastModified: inst.lastModified,\n            storageLocationName: inst.storageLocationName,\n        };\n\n        let instances = {};\n\n        instances[String(Math.floor(Math.random() * 100000 + 1))] = newInst;\n\n\n        let request = lib.makeAPIRequest({\n            env: this.remote, path: `/files`, method: \"POST\",\n\n            payload: {\n                data: {\n                    type: \"files\",\n                    attributes: {\n                        label: file.label,\n                        tagList,\n                        instances,\n                    },\n                    relationships: {\n                        asset: {\n                            data: {\n                                id: this.id,\n                                type: \"assets\"\n                            },\n                        },\n                    },\n                }\n            }\n        });\n\n\n        try{\n            let fileData = await request;\n            let newFile = new File({data: fileData.data, remote: this.remote, parent: this})\n            if(configObject.script) console.log(inst.uri, newFile.instancesList[0].uri);\n        }catch(e){\n            log(chalk`{red Failed file: ${file.chalkPrint()}}`)\n        }\n    }\n\n    async downloadFile(label, destFolder){\n        let files = await this.getFiles();\n\n        let file = files.findByName(label)\n\n        let c = await file.getContent();\n\n        if(destFolder){\n            let filePath = path.join(destFolder, file.instancesList[0].name);\n            fs.writeFileSync(filePath, c);\n        }else{\n            console.log(c);\n        }\n    }\n    async deleteFile(label){\n        let files = await this.getFiles();\n        let file = files.findByName(label);\n        if(!file) return false;\n        await file.delete(false);//mode=forget\n        return true;\n    }\n\n    async grep(text, {artifact = \"trace\", nameOnly = false, ordering = null}){\n        async function* reorderPromises(p){\n            ////yield in order we got it\n            //yield* p[Symbol.iterator]();\n            ////yield in order of first to finish\n            //yield* unordered(p);\n\n            //yield in chronological order\n            let k = await Promise.all(p);\n            yield* k.sort((\n                [e1, _a],\n                [e2, _b]\n            ) => {\n                return e1.attributes.completedAt - e2.attributes.completedAt;\n            });\n        }\n\n\n        elog(\"Reading jobs...\");\n        let r = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n        elog(\"Getting job artifacts...\");\n\n        function highlight(line, text){\n            let parts = line.split(text);\n            return parts.join(chalk`{blue ${text}}`);\n        }\n\n        function parseLine(x){\n            if(artifact === \"trace\"){\n                return parseTraceLine(x);\n            }else{\n                //fake the output from parseTraceLine to make it look right\n                return {content: x};\n            }\n        }\n\n        //let evals = r.filter(x => x.attributes.providerTypeName === \"SdviEvaluate\");\n        let evals = r;\n        let zipped = evals.map(async x => [x, await getArtifact(this.remote, artifact, x.id)]);\n        for await(let [e, trace] of reorderPromises(zipped)){\n            if(!trace) continue;\n\n            let lines = trace.split(\"\\n\").map(parseLine);\n            let matching = lines.filter(x => x.content.includes(text));\n            if(matching.length > 0){\n                let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n                if(nameOnly){\n                    log(chalk`{red ${preset.name}} ${e.id} {blue ${matching.length}} matche(s)`);\n                }else if(configObject.rawOutput){\n                    console.log(matching.map(x => chalk`{red ${preset.name}}:${highlight(x.content, text)}`).join(\"\\n\"));\n                }else{\n                    log(chalk`{red ${preset.name}} ${e.id}`);\n                    log(matching.map(x => `  ${highlight(x.content, text)}`).join(\"\\n\"));\n                }\n            }\n        }\n    }\n\n    async analyze(){\n        await lib.makeAPIRequest({\n            env: this.remote, path: \"/v1.0/analysis\",\n            method: \"POST\",\n            payload: {\n                \"movieId\": this.id,\n                \"latestVersion\": true,\n            },\n        });\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {loadLocals} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env, shouldTest = true){\n        await this.uploadCodeToEnv(env, true, shouldTest);\n    }\n    async save(env, shouldTest = true){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env, shouldTest);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        let code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n\n        //match header like \n        // # c: d\n        // # b\n        // # a\n        // ##################\n        let headerRegex = /(^# .+[\\r\\n]+)+#+[\\r\\n]+/gim;\n        let hasHeader = headerRegex.exec(code);\n\n        if(hasHeader){\n            this.header = code.substring(0, hasHeader[0].length - 1);\n            code = code.substring(hasHeader[0].length);\n        }\n\n        return this.code = code;\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s*:\\s*([\\w\\d. \\/_]+)\\s*$/gim;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() === \"NOUPLOAD\"){\n            write(chalk`code skipped {yellow :)}, `);\n            return;\n        }\n\n        let code = this.code;\n        let headers = {};\n\n        let providerName = this.relationships?.providerType?.data?.name;\n        if(!configObject.skipHeader && (providerName === \"SdviEvaluate\" || providerName === \"SdviEvalPro\")){\n            write(chalk`generate header, `);\n            let repodir = configObject.repodir;\n            let localpath;\n            if(this.path){\n                localpath = this.path.replace(repodir, \"\");\n                if(localpath.startsWith(\"/\")) localpath = localpath.substring(1);\n            }else{\n                localpath = \"Other Silo\"\n            }\n\n            try{\n                let {stdout: headerText} = await spawn(\n                    {noecho: true},\n                    \"sh\",\n                    [\n                        path.join(configObject.repodir, `bin/header.sh`),\n                        moment(Date.now()).format(\"ddd YYYY/MM/DD hh:mm:ssa\"),\n                        localpath,\n                    ]\n                );\n                code = headerText + code;\n                write(chalk`header ok, `);\n            }catch(e){\n                write(chalk`missing unix, `);\n            }\n        }\n\n        //binary presets\n        if(providerName == \"Vantage\"){\n            code = Buffer.from(code).toString(\"base64\");\n            headers[\"Content-Transfer-Encoding\"] = \"base64\";\n        }\n\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: code, method: \"PUT\", fullResponse: true, timeout: 10000,\n            headers,\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async deleteRemoteVersion(env, id=null){\n        if(lib.isLocalEnv(env)) return false;\n        if(!id){\n            let remote = await Preset.getByName(env, this.name);\n            id = remote.id;\n        }\n\n        return await lib.makeAPIRequest({\n            env, path: `/presets/${id}`,\n            method: \"DELETE\",\n        });\n    }\n\n    async delete(){\n        if(lib.isLocalEnv(this.remote)) return false;\n\n        return await this.deleteRemoteVersion(this.remote, this.id);\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                payload.data.relationships = {};\n                if (this.relationships.providerType) {\n                    payload.data.relationships.providerType = this.relationships.providerType;\n                    let dt = payload.data.relationships.providerType;\n                    write(chalk`query type, `);\n                    let ptid = await Provider.getByName(env, dt.data.name);\n                    write(chalk`({gray ${ptid.name}}) ok, `);\n                    dt.data.id = ptid.data.id;\n                }else{\n                    write(\"replace (simple), \");\n                }\n\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PUT\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode >= 400){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return;\n                }\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n\n    parseHeaderInfo(){\n        if(!this.header) return null;\n        let abs = {\n            built:   /Built On:(.+)/.exec(this.header)[1]?.trim(),\n            author:  /Author:(.+)/.exec(this.header)[1]?.trim(),\n            build:   /Build:(.+)/.exec(this.header)[1]?.trim(),\n            version: /Version:(.+)/.exec(this.header)[1]?.trim(),\n            branch:  /Branch:(.+)/.exec(this.header)[1]?.trim(),\n            commit:  /Commit:(.+)/.exec(this.header)[1]?.trim(),\n            local:   /Local File:(.+)/.exec(this.header)[1]?.trim(),\n        }\n\n        let tryFormats = [\n            [true,  \"ddd MMM DD HH:mm:ss YYYY\"],\n            [false, \"ddd YYYY/MM/DD LTS\"],\n        ];\n\n        for(let [isUTC, format] of tryFormats){\n            let date;\n            if(isUTC){\n                date = moment.utc(abs.built, format)\n            }else{\n                date = moment(abs.built, format)\n            }\n\n            if(!date.isValid()) continue;\n\n            abs.offset = date.fromNow();\n\n            break;\n        }\n\n        return abs;\n    }\n\n    async printRemoteInfo(env){\n        let remote = await Preset.getByName(env, this.name);\n        await remote.downloadCode();\n        let i = remote.parseHeaderInfo();\n\n        if(i){\n            log(chalk`\n                ENV: {red ${env}}, updated {yellow ~${i.offset}}\n                Built on {blue ${i.built}} by {green ${i.author}}\n                From ${i.build || \"(unknown)\"} on ${i.branch} ({yellow ${i.commit}})\n            `.replace(/^[ \\t]+/gim, \"\").trim());\n        }else{\n            log(chalk`No header on {red ${env}}`);\n        }\n    }\n\n    async getInfo(envs){\n        await this.printDepends();\n        for(let env of envs.split(\",\")){\n            await this.printRemoteInfo(env);\n        }\n    }\n\n    async printDepends(indent=0, locals=null, seen={}){\n        let includeRegex = /@include \"(.+)\"/gim;\n        //let includeRegex = /@include/g;\n\n        let includes = [];\n\n        let inc;\n        while(inc = includeRegex.exec(this.code)){\n            includes.push(inc[1]);\n        }\n\n        //let includes = this.code\n            //.split(\"\\n\")\n            //.map(x => includeRegex.exec(x))\n            //.filter(x => x)\n            //.map(x => x[1]);\n        //log(includes);\n\n        if(!locals){\n            locals = new Collection(await loadLocals(\"silo-presets\", Preset));\n        }\n\n        log(Array(indent + 1).join(\" \") + \"- \" + this.name);\n\n        for(let include of includes){\n            if(seen[include]){\n                log(Array(indent + 1).join(\" \") + \"  - (seen) \" + include);\n            }else{\n                seen[include] = true\n                let file = await locals.findByName(include);\n                if(file){\n                    await file.printDepends(indent + 2, locals, seen);\n                }else{\n                    log(Array(indent + 1).join(\" \") + \"  - (miss) \" + include);\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async deleteTo(env){\n         for(let preset of this.presets){\n            try{\n                await preset.deleteRemoteVersion(env);\n            }catch(e){log(e);}\n         }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n    async curate(){\n        this.curated = !this.curated;\n\n        return await lib.makeAPIRequest({\n            env: this.remote, path: `/tagNames/${this.id}`, method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        curated: this.curated,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        });\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","import {RallyBase, lib, AbortError, Collection, sleep, zip} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {saveConfig, loadLocals, inquirer, addAutoCompletePrompt, askQuestion, selectPreset, selectLocalMenu, askInput} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\nimport Preset from \"./preset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nlet Stage = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n\n    setStageId() {\n        let api = configObject.api[this.env];\n        if(!api) return null;\n        return this.stageid = api.stage;\n    },\n\n    async downloadStage() {\n        this.setStageId();\n\n        if(!this.stageid) {\n            log(chalk`No stage ID found for {green ${this.env}}. Run \"{red rally stage init -e ${this.env} (stage name)}\" or select a different env.`);\n        }\n\n        let preset = await Preset.getById(this.env, this.stageid);\n        await preset.downloadCode();\n\n        this.stageData = JSON.parse(preset.code);\n        this.stagePreset = preset;\n\n        log(chalk`Stage loaded: {green ${this.stagePreset.name}}`);\n    },\n\n    async uploadStage() {\n        if(!this.stagePreset || !this.stageData) {\n            throw \"Assert fail: no existing prestage (you shouldn't see this)\";\n        }\n\n        this.stagePreset.code = JSON.stringify(this.stageData, null, 4);\n\n        await this.stagePreset.uploadCodeToEnv(this.env, false, false);\n    },\n\n    async $init(args){\n        let presetName = args._.pop();\n\n        let preset = await Preset.getByName(this.env, presetName);\n\n        if(!preset) {\n            log(\"Existing preset stage not found.\");\n            return;\n        }\n\n        log(chalk`Found stage target to init: ${preset.chalkPrint(false)}`);\n\n        configObject.api[this.env].stage = preset.id;\n        configObject[\"ownerName\"] = await askInput(\"What is your name\");\n\n        await saveConfig(configObject, {print: false});\n    },\n\n    async $info(args){\n        await this.downloadStage();\n\n        if(args.raw) return this.stageData;\n\n        log(chalk`Currently Staged Branches: ${this.stageData.stagedBranches.length}`);\n        for(let [branch, commit] of zip(this.stageData.stagedBranches, this.stageData.stagedCommits)){\n            log(chalk`    ${branch} {gray ${commit}}`);\n        }\n\n        log(chalk`Currently Claimed Presets: ${this.stageData.claimedPresets.length}`);\n        for(let preset of this.stageData.claimedPresets){\n            log(chalk`    {blue ${preset.name}} {gray ${preset.owner}}`);\n        }\n    },\n\n    async $claim(args){\n        await Promise.all([this.downloadStage(), addAutoCompletePrompt()]);\n        let q;\n\n        let opts = [\n            {name: \"Chaim a preset\", value: \"add\"},\n            {name: \"Remove a claimed preset\", value: \"rem\"},\n            {name: \"Apply\", value: \"done\"},\n            {name: \"Quit\", value: \"quit\"},\n        ];\n\n        //slice to copy\n        let newClaimed = [];\n        let ownerName = configObject[\"ownerName\"]\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let p = await selectPreset({});\n\n                if(!p) continue;\n\n                newClaimed.push(p);\n            }else if(q.type === \"rem\") {\n                let objsMap = newClaimed.map(x => ({\n                    name: x.chalkPrint(true),\n                    value: x,\n                }));\n\n                for(let obj of this.stageData.claimedPresets) {\n                    objsMap.push({\n                        name: obj.name,\n                        value: obj.name,\n                    });\n                }\n\n                let p = await selectLocalMenu(objsMap, \"preset\", true);\n\n                if(!p) continue;\n                if(typeof(p) == \"string\") {\n                    this.stageData.claimedPresets = this.stageData.claimedPresets.filter(x => x.name != p && x.owner === ownerName);\n                }else{\n                    newClaimed = newClaimed.filter(x => x !== p);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n\n        for(let newClaim of newClaimed) {\n            this.stageData.claimedPresets.push({\n                name: newClaim.name,\n                owner: ownerName,\n            });\n        }\n\n        await this.uploadStage();\n    },\n\n    async getBranches(){\n        let branches = await spawn({noecho: true}, \"git\", [\"branch\", \"-la\", \"--color=never\"]);\n        if(branches.exitCode !== 0) {\n            log(\"Error in loading branches\", branches);\n        }\n\n        let branchList = branches.stdout\n            .split(\"\\n\")\n            .map(x => x.trim())\n            .filter(x => x.startsWith(\"remotes/origin\"))\n            .map(x => {\n                let lastSlash = x.lastIndexOf(\"/\");\n                if(lastSlash !== -1){\n                    x = x.slice(lastSlash + 1);\n                }\n\n                return x;\n            });\n\n        if(!await this.checkCurrentBranch()) {\n            log(\"Not currently on staging\");\n            return;\n        }\n\n        log(\"Finished retreiving branches.\");\n\n        return branchList;\n    },\n\n    async runGit(oks, ...args) {\n        if(typeof(oks) === \"number\") {\n            oks = [oks];\n        }else if(typeof(oks) === \"undefined\") {\n            oks = [0];\n        }\n\n        let g = await spawn({noecho: true}, \"git\", args);\n        log(`git ${args.join(\" \")}`)\n        if(!oks.includes(g.exitCode)) {\n            throw Error(`Failed to run git ${args}`);\n        }\n\n        return [g.stdout, g.stderr]\n    },\n\n    filterwith(list) {\n        return async (sofar, input) => {\n            return list.filter(x => input ? (x.name || x).toLowerCase().includes(input.toLowerCase()) : true);\n        }\n    },\n\n    async $edit(args){\n        let [branches, _] = await Promise.all([this.getBranches(), this.downloadStage(), addAutoCompletePrompt()]);\n\n        if(!branches) return;\n\n        //copy the branches we started with\n        let newStagedBranches = new Set();\n        let oldStagedBranches = new Set();\n        for(let branch of this.stageData.stagedBranches){\n            newStagedBranches.add(branch);\n            oldStagedBranches.add(branch);\n        }\n\n\n        let q;\n\n        let opts = [\n            {name: \"Add a branch to the stage\", value: \"add\"},\n            {name: \"Remove a branch from the stage\", value: \"rem\"},\n            {name: \"Finalize stage\", value: \"done\"},\n            {name: \"Quit\", value: \"quit\"},\n        ];\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let qqs = branches.slice(0); //copy the branches\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to add?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.add(q.branch);\n                }\n            }else if(q.type === \"rem\") {\n                let qqs = Array.from(newStagedBranches);\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to remove?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.delete(q.branch);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n\n        const difference = (s1, s2) => new Set([...s1].filter(x => !s2.has(x)));\n        const intersect = (s1, s2) => new Set([...s1].filter(x => s2.has(x)));\n\n        log(\"proposed changes\");\n        for(let branch of intersect(newStagedBranches, oldStagedBranches)){\n            log(chalk`   ${branch}`);\n        }\n        for(let branch of difference(newStagedBranches, oldStagedBranches)){\n            log(chalk`  {green +${branch}}`);\n        }\n        for(let branch of difference(oldStagedBranches, newStagedBranches)){\n            log(chalk`  {red -${branch}}`);\n        }\n\n        let ok = await askQuestion(\"Prepare these branches for deployment?\");\n        if(!ok) return;\n\n        //just to make sure commits/branches don't get out of order\n        newStagedBranches = Array.from(newStagedBranches);\n\n        let [diffText, newStagedCommits] = await this.doGit(newStagedBranches, this.stageData.stagedCommits);\n\n        await this.runRally(diffText);\n\n        this.stageData.stagedBranches = newStagedBranches;\n        this.stageData.stagedCommits = newStagedCommits;\n\n        await this.uploadStage();\n    },\n\n    async $pull() {\n        await this.downloadStage();\n        await this.makeOldStage(this.stageData.stagedCommits, `rallystage-${this.env}`);\n    },\n\n\n    async makeNewStage(newStagedBranches) {\n        let newStagedCommits = [];\n\n        await this.runGit([0, 1], \"branch\", \"-D\", \"RALLYNEWSTAGE\");\n        await this.runGit([0], \"checkout\", \"-b\", \"RALLYNEWSTAGE\");\n        for(let branch of newStagedBranches) {\n            let [_, merge] = await this.runGit([0, 1], \"merge\", \"--squash\", `origin/${branch}`);\n            await this.runGit([0], \"commit\", \"-m\", `autostaging: commit ${branch}`);\n            let hash = await spawn({noecho: true}, \"git\", [\"log\", \"--format=oneline\", \"--color=never\", \"-n\", \"1\", branch]);\n            newStagedCommits.push(hash.stdout.split(\" \")[0]);\n        }\n\n        return newStagedCommits;\n    },\n\n    async makeOldStage(oldStagedCommits, name) {\n        await this.runGit([0], \"checkout\", \"staging\");\n        await this.runGit([0, 1], \"branch\", \"-D\", name);\n        await this.runGit([0], \"checkout\", \"-b\", name);\n        for(let branch of oldStagedCommits) {\n            await this.runGit([0], \"merge\", branch);\n        }\n    },\n\n    async checkCurrentBranch() {\n        let expected = `On branch staging\nYour branch is up to date with 'origin/staging'.\n\nnothing to commit, working tree clean`;\n\n        let status = await spawn({noecho: true}, \"git\", [\"status\"]);\n        return status.stdout.trim() === expected;\n    },\n\n    async doGit(newStagedBranches, oldStagedCommits) {\n        if(!await this.checkCurrentBranch()) {\n            log(\"Not currently on staging\");\n            return;\n        }\n\n        let newStagedCommits = await this.makeNewStage(newStagedBranches);\n        await this.makeOldStage(oldStagedCommits, \"RALLYOLDSTAGE\");\n\n        await this.runGit([0], \"checkout\", \"RALLYNEWSTAGE\");\n        let diff = await spawn({noecho: true}, \"git\", [\"diff\", \"RALLYOLDSTAGE..HEAD\", \"--name-only\"]);\n        if(diff.exitCode !== 0) { \n            log(diff);\n            throw Error(\"diff failed\");\n        }\n\n        let diffText = diff.stdout;\n\n        return [diffText, newStagedCommits];\n    },\n\n    async runRally(diffText) {\n        let rto = await spawn({\n            stdin(s) {\n                s.write(diffText);\n                s.end()\n            }\n        }, \"rally\", [\"@\"]);\n\n        let ok = await askQuestion(\"Deploy now?\");\n        if(!ok) return;\n\n        rtd = await spawn({\n            stdin(s) {\n                s.write(diffText);\n                s.end()\n            }\n        }, \"rally\", [\"@\", \"--to\", this.env]);\n\n        await this.runGit([0], \"checkout\", \"staging\");\n    },\n\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help stage}'`);\n    },\n}\n\nexport default Stage;\n","require(\"source-map-support\").install();\n\nimport {lib, UnconfiguredEnvError, IndexObject} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\nexport {default as Stage} from \"./stage.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nimport fs from \"fs\";\nimport {configObject} from \"./config.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            let repodir = configObject.repodir;\n            if(repodir){\n                try{\n                    fs.lstatSync(repodir).isDirectory();\n                    return [true, 0];\n                }catch(e){\n                    return [false, 0];\n                }\n            }else{\n                throw new UnconfiguredEnvError();\n            }\n        }\n        let start = new Date();\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 2000});\n        let timed = new Date() - start;\n        return [result.statusCode, timed];\n    },\n}\n","export default {\n    SdviContentMover:`{\n    \"tasks\": [\n        {\n            \"operation\": \"copy\" | \"move\" | \"delete\",\n\n            \"source\": {\n                \"optional\": true | false,\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"labels\": [\"<label>\" | \"*\", ],\n                    \"tags\": [\"<tag>\", ],\n                    \"storageSet\": [\"<storage location name>\" | \"*\", ],    # only valid for move & delete tasks\n                    \"expandCollections\": true | false\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>/<path>/<file>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            },\n\n            \"destination\": {\n                \"name\": \"<path within the storage location>/<filename>\",\n                \"overwrite\": \"never\" | \"notInAnyAsset\" | \"notInOtherAsset\" | \"always\",\n                \"storageMetadata\": {\"<key>\": \"<value>\",...} | \"<sourceStorageMetadata>\",\n\n                # must specify either inventory OR externalStorage\n                \"inventory\": {\n                    \"storage\": \"<storage location name>\",\n                    \"newLabel\": \"<fileLabel>\",\n                    \"newTags\": [\"<tag>\", \"<tag>\"],\n                },\n                \"externalStorage\": {\n                    \"uri\": \"<protocol>://<host>\",\n                    \"credentials\": {\n                        \"key\": \"<parameter store key>\",\n                        \"roleArn\": \"<role to assume to access the parameter store>\",\n                        \"roleId\": \"<external ID to be used in role assumption>\",\n                        \"region\": \"<AWS region of the parameter store>\"\n                    }\n                }\n            }\n        },\n\n        {\n            <another task>\n        },\n\n        {\n            <another task>\n        },\n\n        ...\n\n    ]\n}`, SdviEvaluate: `'''\nname: {name}\n'''\n\n# code here`, SdviEvalPro: `'''\nname: {name}\n'''\n\nimport rally\n\ndef evalMain(context):\n    # code here`,\n};\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider, Asset, User, Tag, Stage,\n    AbortError, UnconfiguredEnvError, Collection, APIError,\n    IndexObject,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject, loadConfig, loadConfigFromArgs} from \"./config.js\";\nimport {readFileSync, writeFileSync} from \"fs\";\n\nimport {printOutLine, parseTrace, findLineInFile, getInfo as getTraceInfo} from \"./trace.js\";\n\nimport {helpText, arg, param, usage, helpEntries, spawn} from \"./decorators.js\";\n\nimport baseCode from \"./baseCode.js\";\nimport {sep as pathSeperator} from \"path\";\n\nimport moment from \"moment\";\n\nimport * as configHelpers from \"./config-create.js\";\nconst False = false; const True = true; const None = null;\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    //boolean: [\"no-protect\"],\n    boolean: [\"anon\"],\n    default: {protect: true},\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\n//help menu helper\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nasync function getFilesFromArgs(args){\n    let lastArg = args._.shift()\n    if(args.file){\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        return files;\n    }\n\n    if(lastArg == \"-\"){\n        log(\"Reading from stdin\");\n        let getStdin = require(\"get-stdin\");\n        let stdin = await getStdin();\n        let files  = stdin.split(\"\\n\");\n        if(files[files.length - 1] === \"\") files.pop();\n        return files;\n    }else{\n        args._.push(lastArg);\n    }\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        this.files = await getFilesFromArgs(args);\n    },\n    async $grab(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to grab (use --file argument)\");\n        }\n\n        log(chalk`Grabbing {green ${this.files.length}} preset(s) metadata from {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        for(let preset of presets){\n            //TODO small refactor\n            await preset.grabMetadata(this.env);\n            await preset.saveLocalMetadata();\n\n            if(args.full){\n                let remo = await Preset.getByName(this.env, preset.name);\n                await remo.resolve();\n                await remo.downloadCode();\n                await remo.saveLocalFile();\n            }\n        }\n    },\n    async $create(args){\n        let provider, name, ext;\n        if(args.provider){\n            provider = {name: args.provider};\n            ext = args.ext\n        }else{\n            provider = await configHelpers.selectProvider(await Provider.getAll(this.env));\n            ext = (await provider.getEditorConfig()).fileExt;\n        }\n        if(args.name){\n            name = args.name;\n        }else{\n            name = await configHelpers.askInput(\"Preset Name\", \"What is the preset name?\");\n        }\n\n        let preset = new Preset({subProject: configObject.project});\n\n        preset.providerType = {name: provider.name};\n        preset.isGeneric = true;\n        preset.name = name;\n        preset.ext = ext;\n        if(baseCode[provider.name]){\n            preset._code = baseCode[provider.name].replace(\"{name}\", name);\n        }else{\n            preset._code = \" \";\n        }\n\n        preset.saveLocalMetadata();\n        if(!args[\"only-metadata\"]) preset.saveLocalFile();\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let presets = await Preset.getAll(this.env);\n        if(args.resolve){\n            Provider.getAll(this.env);\n            for(let preset of presets){\n                let resolve = await preset.resolve(this.env);\n                if(args.attach){\n                    let {proType} = resolve;\n                    proType.editorConfig.helpText = \"\";\n                    preset.meta = {\n                        ...preset.meta, proType\n                    };\n                }\n            }\n        }\n        if(configObject.rawOutput) return presets;\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        presets.arr.sort((a, b) => {\n            return Number(a.attributes.updatedAt) - Number(b.attributes.updatedAt)\n        });\n        for(let preset of presets){\n            log(preset.chalkPrint());\n        }\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets);\n    },\n    async $deleteRemote(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n\n        log(chalk`Deleting ${preset2.chalkPrint(true)}.`);\n\n        log(await preset2.delete());\n    },\n    async $diff(args){\n        let file = this.files[0];\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n        let preset2 = await Preset.getByName(this.env, preset.name);\n        if(!preset2){\n            throw new AbortError(chalk`No preset found with name {red ${preset.name}} on {blue ${this.env}}`);\n        }\n        await preset2.downloadCode();\n\n        let tempfile = require(\"tempy\").file;\n        let temp = tempfile({extension: `${this.env}.${preset.ext}`});\n        writeFileSync(temp, preset2.code);\n\n        let ptr = `${file},${temp}`;\n\n\n        //raw output returns \"file1\" \"file2\"\n        if(configObject.rawOutput){\n            if(args[\"only-new\"]) return temp;\n            else return ptr;\n        }\n\n        //standard diff\n        argv.command = argv.command || \"diff\";\n        await spawn(argv.command, [file, temp], {stdio: \"inherit\"});\n    },\n    async $info(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to diff (use --file argument)\");\n        }\n\n        let file = this.files[0];\n        let preset = new Preset({path: file, remote: false});\n        if(!preset.name){\n            throw new AbortError(chalk`No preset header found. Cannot get name.`);\n        }\n\n        await preset.getInfo(args.env);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let rules = await Rule.getAll(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        rules.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async $create(args){\n        let preset = await configHelpers.selectPreset({canSelectNone: false});\n        let passNext = await configHelpers.selectRule({purpose: \"'On Exit OK'\"});\n        let errorNext = await configHelpers.selectRule({purpose: \"'On Exit Error'\"});\n        let name = await configHelpers.askInput(\"Rule Name\", \"What is the rule name?\");\n        name = name.replace(\"@\", preset.name);\n        let desc = await configHelpers.askInput(\"Description\", \"Enter a description.\");\n\n        let dynamicNexts = [];\n        let next;\n        while(next = await configHelpers.selectRule({purpose: \"dynamic next\"})){\n            let name = await configHelpers.askInput(\"Key\", \"Key name for dynamic next\");\n            dynamicNexts.push({\n                meta: {\n                    transition: name,\n                },\n                type: \"workflowRules\",\n                name: next.name,\n            });\n        }\n\n        let rule = new Rule({subProject: configObject.project});\n        rule.name = name;\n        rule.description = desc;\n        rule.relationships.preset = {data: {name: preset.name, type: \"presets\"}}\n        if(errorNext) rule.relationships.errorNext = {data: {name: errorNext.name, type: \"workflowRules\"}}\n        if(passNext) rule.relationships.passNext = {data: {name: passNext.name, type: \"workflowRules\"}}\n        if(dynamicNexts[0]){\n            rule.relationships.dynamicNexts = {\n                data: dynamicNexts\n            };\n        }\n\n        rule.saveB()\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet jupytersub = {\n    async before(args){\n        this.input = args._.shift() || \"main.ipynb\";\n        this.output = args._.shift() || \"main.py\";\n    },\n    async $build(args){\n        let cmd = `jupyter nbconvert --to python ${this.input} --TagRemovePreprocessor.remove_cell_tags={\\\"remove_cell\\\"} --output ${this.output} --TemplateExporter.exclude_markdown=True --TemplateExporter.exclude_input_prompt=True --TemplateExporter.exclude_output_prompt=True`.split(\" \");\n        log(chalk`Compiling GCR file {green ${this.input}} into {green ${this.output}} using jupyter...`);\n\n        try{\n            let {timestr} = await spawn(cmd[0], cmd.slice(1));\n            log(chalk`Complete in ~{green.bold ${timestr}}.`);\n        }catch(e){\n            if(e.code !== \"ENOENT\") throw e;\n            log(chalk`Cannot run the build command. Make sure that you have jupyter notebook installed.\\n{green pip install jupyter}`);\n            return;\n        }\n    },\n}\n\nasync function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n\nlet tagsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        elog(\"Loading...\");\n        let tags = await Tag.getAll(this.env);\n        if(configObject.rawOutput) return tags;\n\n        log(chalk`{yellow ${tags.length}} tags on {green ${this.env}}.`);\n        tags.arr.sort((a, b) => {\n            return Number(a.data.attributes.updatedAt) - Number(b.data.attributes.updatedAt)\n        });\n        for(let tag of tags) log(tag.chalkPrint());\n    },\n    async $create(args){\n        return Tag.create(this.env, args._.shift());\n    },\n\n    async $curate(args){\n        let tag = await Tag.getByName(this.env, args._.shift())\n        await tag.curate();\n    },\n};\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n        this.files = await getFilesFromArgs(args);\n    },\n\n    //Calculate a supply chain based on a starting rule at the top of the stack\n    async $calc(args){\n        let name = args._.shift();\n        let stopName = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule or @ supplied\");\n        }\n\n        if(name === \"@\"){\n            log(chalk`Silo clone started`);\n            this.chain = new SupplyChain();\n            this.chain.remote = args.env;\n        }else{\n            let rules = await Rule.getAll(this.env);\n            let stop, start;\n            start = rules.findByNameContains(name);\n            if(stopName) stop = rules.findByNameContains(stopName);\n\n            if(!start){\n                throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n            }\n            log(chalk`Analzying supply chain: ${start.chalkPrint(false)} - ${stop ? stop.chalkPrint(false) : \"(open)\"}`);\n            this.chain = new SupplyChain(start, stop);\n        }\n\n        await this.chain.calculate();\n        return await this.postAction(args);\n    },\n    async postAction(args){\n        //Now that we ahve a supply chain object, do something with it\n        if(args[\"to\"]){\n            this.chain.log();\n            if(this.chain.presets.arr[0]){\n                await this.chain.downloadPresetCode(this.chain.presets);\n                log(\"Done\");\n            }\n\n            if(Array.isArray(args[\"to\"])){\n                for(let to of args[\"to\"]){\n                    await this.chain.syncTo(to);\n                }\n            }else{\n                await this.chain.syncTo(args[\"to\"]);\n            }\n\n        }else if(args[\"delete\"]){\n            if(Array.isArray(args[\"delete\"])){\n                for(let to of args[\"delete\"]){\n                    await this.chain.deleteTo(to);\n                }\n            }else{\n                await this.chain.deleteTo(args[\"delete\"]);\n            }\n        }else if(args[\"diff\"]){\n            //Very basic diff\n            let env = args[\"diff\"];\n            await Promise.all(this.chain.presets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(this.chain.presets.arr.map(obj => obj.resolve()));\n\n            let otherPresets = await Promise.all(this.chain.presets.arr.map(obj => Preset.getByName(env, obj.name)));\n            otherPresets = new Collection(otherPresets.filter(x => x));\n            await Promise.all(otherPresets.arr.map(obj => obj.downloadCode()));\n            await Promise.all(otherPresets.arr.map(obj => obj.resolve()));\n\n            const printPresets = (preset, otherPreset) => {\n                log(preset.chalkPrint(true));\n                if(otherPreset.name){\n                    log(otherPreset.chalkPrint(true));\n                }else{\n                    log(chalk`{red (None)}`);\n                }\n            }\n\n            for(let preset of this.chain.presets){\n                let otherPreset = otherPresets.arr.find(x => x.name === preset.name) || {};\n\n                preset.code      = preset.code.replace(/[\\r\\n ]/, \"\");\n                otherPreset.code = (otherPreset.code || \"\").replace(/[\\r\\n ]/, \"\");\n\n                if(preset.code === otherPreset.code){\n                    if(!args[\"ignore-same\"]){\n                        printPresets(preset, otherPreset);\n                        log(\"Code Same\");\n                    }\n                }else{\n                    printPresets(preset, otherPreset);\n                    if(args[\"ignore-same\"]){\n                        log(\"-------\");\n                    }else{\n                        log(\"Code Different\");\n                    }\n                }\n            }\n\n        }else{\n            return await this.chain.log();\n        }\n\n    },\n    async $make(args){\n        let set = new Set();\n        let hints = args.hint ? (Array.isArray(args.hint) ? args.hint : [args.hint]) : []\n        //TODO modify for better hinting, and add this elsewhere\n        for(let hint of hints){\n            if(hint === \"presets-uat\"){\n                log(\"got hint\");\n                await Preset.getAll(\"UAT\");\n            }\n        }\n\n        for(let file of this.files){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n        this.chain = new SupplyChain();\n\n        this.chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        this.chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        this.chain.notifications = new Collection([]);\n\n        return await this.postAction(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        //Grab the next arg on the stack, find a function tied to it, and run\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    @helpText(\"Rally tools jupyter interface. Requires jupyter to be installed.\")\n    @usage(\"rally jupyter build [in] [out]\")\n    @param(\"in/out\", \"input and output file for jupyter. By default main.ipyrb and main.py\")\n    async jupyter(args){\n        return subCommand(jupytersub)(args);\n    },\n\n    @helpText(\"Prepare an environment to hold specific branches\")\n    @usage(\"rally help stage\")\n    async stage(args){\n        return subCommand(Stage)(args);\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload, diff, list, deleteRemote\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    @arg(\"~\", \"--command\", \"If the action is diff, this is the command to run instead of diff\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] [identifier] --env [enviornment] [post actions]`)\n    @param(\"action\", \"The action to perform. Can be calc or make.\")\n    @param(\"identifier\", \"If the action is calc, then this identifier should be the first rule in the chain. If this is make, then supply '-' to read from stdin\")\n    @param(\"post actions\", \"The action to perform on the created supply chain. See commands below\")\n    @arg(\"-e\", \"--env\", \"(calc only) environment to do the calculation on\")\n    @arg(\"~\", \"--diff\", \"(post action) Use as `--diff [env]`. List all files with differences on the given env.\")\n    @arg(\"~\", \"--to\", \"(post action) Use as `--to [env]`. Upload all objects.\")\n    @arg(\"~\", \"--delete\", \"(post action) Use as `--delete [env]`. The reverse of uploading. Only presets are supported right now.\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`tags stuff`)\n    @usage(`rally tags [action]`)\n    @param(\"action\", \"The action to perform. Can be list, create, or curate.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async tag(args){\n        return subCommand(tagsub)(args);\n    },\n\n    @helpText(`print out some trace info`)\n    @usage(`rally trace -e [env] [jobid]`)\n    @param(\"jobid\", \"a job id like b86d7d90-f0a5-4622-8754-486ca8e9ecbd\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async trace(args){\n        let jobId = args._.shift();\n        if(!jobId) throw new AbortError(\"No job id\");\n        if(!args.env) throw new AbortError(\"no env\");\n        let ln = args._.shift();\n        if(!ln){\n            log(\"is trace\");\n            let traceInfo = await parseTrace(args.env, jobId);\n\n            for(let line of traceInfo){\n                if(typeof(line) == \"string\"){\n                    log(chalk.red(line));\n                }else{\n                    printOutLine(line);\n                }\n            }\n        }else{\n            log(\"is ln\");\n            let {renderedPreset} = await getTraceInfo(args.env, jobId);\n            return findLineInFile(renderedPreset, Number(ln));\n        }\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getAll(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        await configHelpers.saveConfig(newConfigObject, {ask: !args.y && !args.set});\n    },\n\n    async silo(){\n        let s = new Silo(\"UAT\");\n\n        await s.grep();\n    },\n\n    @helpText(`create/modify asset or files inside asset`)\n    @usage(\"rally asset [action] [action...]\")\n    @param(\"action\", chalk`Actions are create, delete, launch, addfile, metadata, show, patchMetadata, and launchEvalute, deleteFile, downloadFile, grep, analyze. You can supply multiple actions to chain them.`)\n    @arg(`-i`, `--id`,         chalk`MOVIE_ID of asset to select`)\n    @arg(`-n`, `--name`,       chalk`MOVIE_NAME of asset. with {white create}, '{white #}' will be replaced with a uuid. Default is '{white TEST_#}'`)\n    @arg(`~`,  `--anon`,       chalk`Supply this if no asset is needed (used to lauch anonymous workflows)`)\n    @arg(`-j`, `--job-name`,   chalk`Job name to start (used with launch and launchEvalute)`)\n    @arg(`~`,  `--init-data`,  chalk`Init data to use when launching job. can be string, or {white @path/to/file} for a file`)\n    @arg(`~`,  `--file-label`, chalk`File label (used with addfile)`)\n    @arg(`~`,  `--file-uri`,   chalk`File s3 uri. Can use multiple uri's for the same label (used with addfile)`)\n    @arg(`~`,  `--metadata`,   chalk`Metadata to use with patchMetadata. Can be string, or {white @path/to/file} for a file. Data must contain a top level key Metadata, or Workflow. Metadata will be pached into METADATA. Workflow will be patched into WORKFLOW_METADATA(not currently available)`)\n    @arg(`~`,  `--priority`,   chalk`set the priority of all launched jobs`)\n    @arg(`~`,  `--new-name`,   chalk`set the new name`)\n    @arg(`~`,  `--target-env`, chalk`migrate to the env (when using migrate)`)\n    @arg(`~`,  `--to-folder`,  chalk`Folder to download to when using downloadFile. If no folder is given, writes to stdout.`)\n    @arg(`~`,  `--artifact`,   chalk`This is the artifact to grep on. Defaults to trace. Values are \"trace\", \"preset\", \"result\", \"error\", \"output\"`)\n    @arg(`~`,  `--on`,         chalk`alias for artifact`)\n    @arg(`~`,  `--name-only`,  chalk`Only show preset name and number of matches when greping`)\n    //@arg(`~`,  `--any`,        chalk`allows grep to grep for any preset/provider, not just sdviEval`)\n    async asset(args){\n        function uuid(args){\n            const digits = 16;\n            return String(Math.floor(Math.random() * Math.pow(10, digits))).padStart(digits, \"0\");\n        }\n\n        let name = args.name || `TEST_#`;\n        let env = args.env;\n\n        let asset;\n        let arg = args._.shift()\n        if(!arg){\n            throw new AbortError(chalk`Missing arguments: see {white 'rally help asset'}`);\n        }\n\n        if(args.anon){\n            args._.unshift(arg);\n        }else if(arg == \"create\"){\n            name = name.replace(\"#\", uuid());\n            asset = await Asset.createNew(name, env);\n        }else{\n            args._.unshift(arg);\n            if(args.id){\n                asset = Asset.lite(args.id, env);\n            }else{\n                asset = await Asset.getByName(env, args.name);\n            }\n        }\n\n        if(!asset && !args.anon){\n            throw new AbortError(\"No asset found/created\");\n        }\n        let launchArg = 0;\n        let fileArg = 0;\n\n        let arrayify = (obj, i) => Array.isArray(obj) ? obj[i] : (i == 0 ? obj : undefined);\n\n        function getInitData(args, launchArg){\n            let initData = arrayify(args[\"init-data\"], launchArg);\n            if(initData && initData.startsWith(\"@\")){\n                let initDataFile = initData.slice(1);\n                if(initDataFile === \"-\"){\n                    log(chalk`Reading init data from {grey stdin}`);\n                    initData = readFileSync(0, \"utf-8\");\n                }else{\n                    log(chalk`Reading init data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initDataFile, \"utf-8\");\n                }\n            }\n\n            return initData\n        }\n\n        while(arg = args._.shift()){\n            if(arg === \"launch\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n                let p = await Rule.getByName(env, jobName);\n                if(!p){\n                    throw new AbortError(`Cannot launch job ${jobName}, does not exist (?)`);\n                }else{\n                    log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                }\n\n                if(asset){\n                    await asset.startWorkflow(jobName, {initData, priority: args.priority})\n                }else{\n                    await Asset.startAnonWorkflow(env, jobName, {initData, priority: args.priority})\n                }\n                launchArg++;\n            }else if(arg === \"launchEvaluate\"){\n                let initData = getInitData(args, launchArg);\n                let jobName = arrayify(args[\"job-name\"], launchArg);\n\n                let jobData;\n                let ephemeralEval = false;\n                let p;\n                if(jobName.startsWith(\"@\")){\n                    ephemeralEval = true;\n                    jobData = readFileSync(jobName.slice(1));\n                }else{\n                    p = await Preset.getByName(env, jobName);\n                    if(!p){\n                        throw new AbortError(`Cannot launch preset ${jobName}, does not exist (?)`);\n                    }else{\n                        log(chalk`Launching ${p.chalkPrint(false)} on ${asset ? asset.chalkPrint(false) : \"(None)\"}`);\n                    }\n                }\n\n\n                if(ephemeralEval){\n                    throw new AbortError(\"could not start\");\n                    await Asset.startEphemeralEvaluateIdeal(env, p.id, initData)\n                }else{\n                    await asset.startEvaluate(p.id, initData)\n                }\n                launchArg++;\n            }else if(arg === \"addfile\"){\n                let label = arrayify(args[\"file-label\"], fileArg)\n                let uri   = arrayify(args[\"file-uri\"], fileArg)\n                if(label === undefined || !uri){\n                    throw new AbortError(\"Number of file-label and file-uri does not match\");\n                }\n                await asset.addFile(label, uri);\n                log(chalk`Added file ${label}`);\n                fileArg++;\n            }else if(arg === \"delete\"){\n                await asset.delete();\n            }else if(arg === \"create\"){\n                throw new AbortError(`Cannot have more than 1 create/get per asset call`);\n            }else if(arg === \"show\" || arg == \"load\"){\n                if(asset.lite) asset = await Asset.getById(env, asset.id);\n                if(arg == \"show\") log(asset);\n            }else if(arg === \"metadata\" || arg === \"md\"){\n                log(await asset.getMetadata(true));\n            }else if(arg === \"migrate\"){\n                await asset.migrate(args[\"target-env\"]);\n            }else if(arg === \"patchMetadata\"){\n                let initData = arrayify(args[\"metadata\"], launchArg);\n                if(initData && initData.startsWith(\"@\")){\n                    log(chalk`Reading data from {white ${initData.slice(1)}}`);\n                    initData = readFileSync(initData.slice(1), \"utf-8\");\n                }\n\n                initData = JSON.parse(initData);\n\n                await asset.patchMetadata(initData);\n            }else if(arg === \"rename\"){\n                let newName = args[\"new-name\"];\n                let oldName = asset.name;\n                await asset.rename(newName);\n                log(chalk`Rename: {green ${oldName}} -> {green ${newName}}`);\n            }else if(arg === \"downloadfile\" || arg === \"downloadFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                await asset.downloadFile(label, args[\"to-folder\"]);\n            }else if(arg === \"deletefile\" || arg === \"deleteFile\" || arg === \"removefile\" || arg === \"removeFile\") {\n                let label = arrayify(args[\"file-label\"], fileArg)\n                if(!label){\n                    throw new AbortError(\"No label supplied\");\n                }\n                fileArg++;\n                let result = await asset.deleteFile(label);\n                if(!result) {\n                    log(`Failed to delete file ${label}`);\n                }\n            }else if(arg === \"grep\") {\n                await asset.grep(args._.pop(), {\n                    artifact: args.on || args.artifact || \"trace\",\n                    nameOnly: args[\"name-only\"],\n                    ordering: null,\n                });\n            }else if(arg === \"analyze\") {\n                await asset.analyze();\n            }else{\n                log(`No usage found for ${arg}`);\n            }\n        }\n        if(configObject.rawOutput && !configObject.script) return asset;\n    },\n\n    async checkSegments(args){\n        let asset = args._.shift()\n        let res = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env, path: `/movies/${asset}/metadata/Metadata`,\n        });\n        let segments = res.data.attributes.metadata.userMetaData.segments.segments;\n\n        let r = segments.reduce((lastSegment, val, ind) => {\n            let curSegment = val.startTime;\n            if(curSegment < lastSegment){\n                log(\"bad segment \" + (ind + 1))\n            }\n            return val.endTime\n         }, \"00:00:00:00\");\n    },\n\n    async getJobs(args){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: \"presetName=DCTC Add Element US Checkin\",\n            },\n        });\n\n        log(req.map(x => x.relationships.asset.data.id).join(\"\\n\"))\n    },\n\n    async listAssets(args, tag){\n        let req = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                noRelationships: true,\n                sort: \"id\",\n            },\n            chunksize: 30,\n        });\n        for(let asset of req){\n            log(asset.id);\n        }\n\n        return req;\n    },\n\n    async listSegments(args){\n        let f = JSON.parse(readFileSync(args.file, \"utf-8\"));\n\n        for(let asset of f){\n            let r = await allIndexBundle.lib.makeAPIRequest({\n                env: args.env, path: `/movies/${asset.id}/metadata/Metadata`,\n            });\n\n            let segs = r.data.attributes.metadata.userMetaData?.segments?.segments;\n            if(segs && segs.length > 1){\n                log(asset.id);\n                log(asset.name);\n            }\n        }\n    },\n    async test4(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/assets\",\n            qs: {\n                filter: `createdBefore=${Date.now() - 1000 * 160 * 24 * 60 * 60},createdSince=${Date.now() - 1000 * 170 * 24 * 60 * 60}`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n\n    async test5(args){\n        let things = await allIndexBundle.lib.indexPathFast({\n            env: args.env, path: \"/jobs\",\n            qs: {\n                filter: `state=Queued,presetName=E2 P4101 - DNE Compliance Edit - US Output Deal - Edit WorkOrder`\n            }\n        });\n\n        log(JSON.stringify(things, null, 4));\n    },\n    async test2(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async test3(args){\n        let wfr = await allIndexBundle.lib.indexPath({\n            env: args.env, path: \"/workflowRuleMetadata\",\n        });\n        log(wfr);\n\n        for(let wfrm of wfr){\n            try{\n                wfrm.id = undefined;\n                wfrm.links = undefined;\n                log(wfrm);\n                let req = await allIndexBundle.lib.makeAPIRequest({\n                    env: \"DEV\", path: \"/workflowRuleMetadata\",\n                    method: \"POST\",\n                    payload: {data: wfrm},\n                })\n            }catch(e){\n                log(\"caught\");\n            }\n            //break;\n        }\n    },\n\n    async deleteOmneons(args){\n        let id = args._.shift();\n\n        let asset;\n        if(Number(id)) {\n            asset = await Asset.getById(\"PROD\", Number(id));\n        }else{\n            asset = await Asset.getByName(\"PROD\", id);\n        }\n\n        log(asset);\n        let f = await asset.getFiles();\n\n        for(let file of f){\n            if(file.label.includes(\"Omneon\")){\n                log(`removing ${file.label}`);\n                await file.delete();\n            }\n        }\n    },\n\n    async audit(args){\n        let supportedAudits = [\"presets\", \"rule\", \"other\"];\n        await configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\", name: \"obj\",\n            message: `What audit do you want?`,\n            source: async (sofar, input) => {\n                return supportedAudits.filter(x => input ? x.includes(input.toLowerCase()) : true);\n            },\n        }]);\n        let choice = q.obj;\n        let resourceId = undefined\n        let filterFunc = _=>_;\n        if(choice === \"presets\"){\n            let preset = await configHelpers.selectPreset({canSelectNone: false});\n            let remote = await Preset.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => ev.resource == \"Preset\";\n            resourceId = remote.id;\n        }else if(choice === \"rule\"){\n            let preset = await configHelpers.selectRule({canSelectNone: false});\n            let remote = await Rule.getByName(args.env, preset.name);\n            if(!remote) throw new AbortError(\"Could not find this item on remote env\");\n            filterFunc = ev => (ev.resource == \"Rule\" || ev.resource == \"WorkflowRule\");\n            resourceId = remote.id;\n        }else{\n            resourceId = await configHelpers.askInput(null, \"What resourceID?\");\n        }\n\n        log(chalk`Resource ID on {blue ${args.env}} is {yellow ${resourceId}}`);\n        elog(`Loading audits (this might take a while)`);\n        const numRows = 100;\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22resourceId%22%3A%22${resourceId}%22%7D&autoload=false&pageNum=1&include=`,\n            timeout: 180000,\n        });\n        r.data = r.data.filter(filterFunc);\n\n        log(\"Data recieved, parsing users\");\n\n        for(let event of r.data){\n            let uid = event?.correlation?.userId;\n            if(!uid) continue;\n            try{\n                event.user = await User.getById(args.env, uid);\n            }catch(e){\n                event.user = {name: \"????\"};\n            }\n        }\n\n        if(args.raw) return r.data;\n        let evCounter = 0;\n        for(let event of r.data){\n            let evtime = moment(event.createdAt);\n            let date = evtime.format(\"ddd YYYY/MM/DD hh:mm:ssa\");\n            let timedist = evtime.fromNow();\n            log(chalk`${date} {yellow ${timedist}} {green ${event.user?.name}} ${event.event}`);\n\n            if(++evCounter >= 30) break;\n        }\n    },\n\n    async audit2(args){\n        const numRows = 1000\n        let r = await allIndexBundle.lib.makeAPIRequest({\n            env: args.env,\n            //path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&autoload=false&pageNum=1&include=`,\n            path: `/v1.0/audit?perPage=${numRows}&count=${numRows}&filter=%7B%22correlation.userId%22%3A%5B%22164%22%5D%7D&autoload=false&pageNum=1&include=`,\n            timeout: 60000,\n        });\n        for(let event of r.data){\n            log(event.event);\n        }\n    },\n\n    async findIDs(args){\n        let files = await getFilesFromArgs(args);\n        for(let file of files){\n            let preset = await Preset.getByName(args.env, file);\n            await preset.resolve();\n            log(`silo-presets/${file}.${preset.ext}`);\n        }\n    },\n\n    async getAssets(env, name){\n        if(!this.callid) this.callid = 0;\n        this.callid++;\n        let callid = this.callid;\n\n        await allIndexBundle.sleep(500);\n\n        if(callid != this.callid) return this.lastResult || [];\n\n        let req = await allIndexBundle.lib.makeAPIRequest({\n            env, path: `/assets`,\n            qs: name ? {filter: `nameContains=${name}`} : undefined,\n        })\n        this.lastCall = Date.now();\n\n        return this.lastResult = req.data;\n    },\n\n    async content(args){\n        configHelpers.addAutoCompletePrompt();\n        let q = await configHelpers.inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"what\",\n            message: `What asset do you want?`,\n            source: async (sofar, input) => {\n                let assets = await this.getAssets(args.env, input);\n                assets = assets.map(x => new Asset({data: x, remote: args.env}));\n                return assets.map(x => ({\n                    name: x.chalkPrint(true) + \": \" + x.data.links.self.replace(\"/api/v2/assets/\", \"/content/\"),\n                    value: x,\n                }));\n            },\n        }]);\n    },\n\n\n    async gf(args){\n        let a = await Asset.getById(args.env, args._.shift());\n        let f = await a.getFiles();\n        log(f);\n    },\n\n    async [\"@\"](args){\n        args._.unshift(\"-\");\n        args._.unshift(\"make\");\n        return this.supply(args);\n    },\n\n    async test(args){\n        for await (let object of ParIter.keepalive().generator()){\n            log(object);\n        };\n    },\n\n    async test2(){\n    },\n\n    //Used to test startup and teardown speed.\n    noop(){\n        return true;\n    },\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`Rally Tools {yellow v${packageVersion}} CLI\\n`);\n\n    //Prompt users to setup one time config.\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n\n    let envs = new Set([\"LOCAL\", \"UAT\", \"DEV\", \"PROD\", \"QA\", ...Object.keys(configObject.api)]);\n\n    let proms = [];\n    for(let env of envs){\n        proms.push({env, prom: funcs.testAccess(env)});\n    }\n\n    //API Access tests\n    for(let {env, prom} of proms){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let [result, timer] = await prom;\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK} {gray ${timer} ms}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(e instanceof UnconfiguredEnvError){\n                resultStr = chalk`{yellow Unconfigured}`;\n            }else if(e instanceof APIError){\n                if(!e.response.body){\n                    resultStr = chalk`{red Timeout (???)}`;\n                }\n            }else if(e.error?.code === \"ETIMEDOUT\"){\n                resultStr = chalk`{red Timeout (>2s)}`;\n            }else if(e.name == \"RequestError\"){\n                resultStr = chalk`{red Low level error (check internet): ${e.error}}`;\n            }else{\n                resultStr = chalk`{red Internal Error: (oh no!)}`;\n            }\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    //Supply --config to load a different config file\n    if(typeof(argv.config) === \"string\"){\n        loadConfig(argv.config);\n    }else if(typeof(argv.config) === \"object\") {\n        loadConfigFromArgs(argv);\n    }else{\n        loadConfig();\n    }\n\n    // First we need to decide if the user wants color or not. If they do want\n    // color, we need to make sure we use the right mode\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    //This flag being true allows you to modify UAT and PROD\n    if(!argv[\"protect\"]){\n        configObject.dangerModify = true;\n    }\n\n    //This enables raw output for some functions\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(argv[\"script\"]){\n        configObject.script = true;\n    }\n\n    if(argv[\"ignore-missing\"]){\n        configObject.ignoreMissing = true;\n    }\n\n    if(argv[\"update-immutable\"]){\n        configObject.updateImmutable = true;\n    }\n\n    if(argv[\"skip-header\"]){\n        configObject.skipHeader = true;\n    }\n\n    configObject.globalProgress = argv[\"show-progress\"] || false;\n\n    //Default enviornment should normally be from config, but it can be\n    //overridden by the -e/--env flag\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    //Enable verbose logging in some places.\n    if(argv[\"vverbose\"]){\n        configObject.verbose = argv[\"vverbose\"];\n        configObject.vverbose = true;\n    }else if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }else if(argv[\"vvverbose\"]){\n        configObject.verbose = true;\n        configObject.vverbose = true;\n        configObject.vvverbose = true;\n    }\n\n    //copy argument array to new object to allow modification\n    argv._old = argv._.slice();\n\n    //Take first argument after `node bundle.js`\n    //If there is no argument, display the default version info and API access.\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                if(ret instanceof Collection) ret = ret.arr;\n\n                //Directly use console.log so that --raw works as intended.\n                if(typeof ret === \"object\"){\n                    console.log(JSON.stringify(ret, null, 4));\n                }else{\n                    console.log(ret);\n                }\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n                process.exit(1);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n\n    process.exit(0);\n}\n\nasync function main(...args){\n    //Catch all for errors to avoid ugly default node promise catcher\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n        process.exit(1);\n    }\n}\n\n// If this is an imported module, then we should exec the cli interface.\n// Oterwise just export everything.\nif(require.main === module){\n    main();\n}else{\n    loadConfig();\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","loadConfig","file","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","helpEntries","helpEntry","name","helpText","text","func","arg","long","short","desc","unshift","param","params","usage","replace","chalk","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","write","global","noecho","on","chunk","stdin","end","time","timestr","exitCode","log","console","process","elog","error","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","trim","AbortError","indexPath","opts","maxParallelRequests","index","IndexObject","fullResults","clearProgress","size","globalProgress","repeat","drawProgress","i","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","funcs","f","indexPathFast","isLocalEnv","envName","Error","constructor","message","captureStackTrace","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","length","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","item","remote","metastring","data","endpoint","included","push","getByName","filter","getAllPreCollect","getAll","datas","pageSize","sort","all","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","links","organization","sleep","setTimeout","zip","items","iters","r","next","done","value","unordered","proms","encapsulatedPromises","ind","result","race","undefined","range","linkToPage","page","baselink","initializeFirstRequest","initOpts","allResults","observe","noCollect","first","currentPageRequest","hasHit404","getNextRequestLink","getNextRequestPromise","promiseID","cancel","willCancel","chunksize","currentPromises","requestResult","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","require","$api","propArray","q","prompt","default","company","defaults","DEV","UAT","QA","PROD","envs","choices","keys","checked","questions","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$appName","defaultAppName","USERNAME","LOGNAME","project","askInput","$project","$defaultEnv","selectProvider","providers","autoDefault","defaultProvider","source","sofar","input","toLowerCase","provider","loadLocals","Class","basePath","repodir","objs","basename","selectLocal","typeName","canSelectNone","objsMap","selectLocalMenu","none","selectPreset","purpose","Preset","selectRule","Rule","question","def","ok","saveConfig","newConfigObject","ask","print","newConfig","writeFileSync","mode","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","sizeHR","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","values","instances","round","units","unitIdx","instancesList","n","assign","rslURL","instance","storageLocationName","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","slice","join","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","match","exec","includeFilename","printOutLine","eLine","getArtifact","artifact","jobid","art","catch","_","getInfo","trace","output","tracelineRegex","parseTraceLine","info","full","parsed","content","absoluteTime","presetName","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","Asset","lite","metadata","normalizeMetadata","newMetadata","md","getMetadata","forceRefresh","req","patchMetadata","Workflow","fakePreset","startEphemeralEvaluateIdeal","Metadata","createNew","getFiles","refresh","_files","addFile","label","fileuris","Array","startWorkflow","jobName","initData","priority","startAnonWorkflow","preset","dynamicPresetData","isBinary","res","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","dots","self","state","startEvaluate","presetid","rename","newName","migrate","targetEnv","_mdPromise","targetAsset","fileCreations","possibleInstances","inst","addFileInstance","tagList","newInst","lastModified","random","asset","fileData","newFile","script","downloadFile","destFolder","files","c","filePath","fs","deleteFile","grep","nameOnly","ordering","reorderPromises","p","k","e1","_a","e2","_b","completedAt","highlight","parts","parseLine","evals","zipped","lines","matching","rawOutput","analyze","home","colon","siloLike","pathTransform","invertedPath","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","matches","runTest","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","shouldTest","uploadCodeToEnv","save","saved","downloadCode","headerRegex","hasHeader","header","substring","_code","v","sub","endsWith","name_regex","findStringsInCode","strings","str","RegExp","_path","_nameOuter","_nameInner","immutable","updateImmutable","uploadPresetData","providerName","skipHeader","headerText","moment","Date","format","grabMetadata","deleteRemoteVersion","includeMetadata","dt","ptid","parseHeaderInfo","abs","built","author","build","version","branch","commit","local","tryFormats","isUTC","date","utc","isValid","offset","fromNow","printRemoteInfo","printDepends","indent","locals","seen","includeRegex","inc","include","Notification","notifications","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","add","neededPresets","neededRules","notif","verbose","deleteTo","syncTo","rule","User","Tag","prefix","curated","create","notCurated","curate","Stage","before","setStageId","stageid","stage","downloadStage","stageData","stagePreset","uploadStage","$init","$info","raw","stagedBranches","stagedCommits","claimedPresets","owner","$claim","newClaimed","ownerName","filterwith","newClaim","getBranches","branches","branchList","lastSlash","lastIndexOf","checkCurrentBranch","runGit","oks","g","list","$edit","newStagedBranches","oldStagedBranches","qqs","difference","s1","s2","has","intersect","diffText","newStagedCommits","doGit","runRally","$pull","makeOldStage","makeNewStage","merge","hash","oldStagedCommits","expected","status","diff","rto","s","rtd","unknown","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","lstatSync","isDirectory","timed","SdviContentMover","SdviEvaluate","SdviEvalPro","argv","argparse","string","boolean","protect","alias","printHelp","help","getFilesFromArgs","lastArg","shift","getStdin","presetsub","$grab","remo","$create","configHelpers","baseCode","$list","attach","$upload","$deleteRemote","preset2","$diff","tempfile","temp","extension","ptr","command","stdio","rulesub","passNext","errorNext","transition","description","jupytersub","$build","cmd","categorizeString","defaultSubproject","ret","tagsub","tags","tag","$curate","supplysub","$calc","stopName","chain","stop","postAction","to","otherPresets","printPresets","otherPreset","$make","hints","hint","subCommand","object","after","cli","helpArg","jupyter","printArgs","supply","jobId","ln","traceInfo","getTraceInfo","ident","pro","econfig","completions","prop","helperName","y","silo","Silo","uuid","digits","pow","anon","launchArg","fileArg","arrayify","getInitData","initDataFile","jobData","ephemeralEval","oldName","checkSegments","allIndexBundle","segments","userMetaData","reduce","lastSegment","curSegment","startTime","endTime","getJobs","listAssets","noRelationships","listSegments","segs","test4","things","test5","test2","wfr","wfrm","test3","deleteOmneons","audit","supportedAudits","choice","resourceId","filterFunc","ev","resource","numRows","event","uid","correlation","userId","user","evCounter","evtime","timedist","audit2","findIDs","getAssets","callid","lastResult","lastCall","assets","gf","ParIter","generator","noop","unknownCommand","noCommand","packageVersion","prom","resultStr","timer","$main","enabled","level","defaultEnv","_old","white","exit","main","stack","module","exports"],"mappings":"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"}