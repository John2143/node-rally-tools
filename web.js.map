{"version":3,"file":"web.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/notification.js","src/fswrap.js","src/rule.js","src/config-create.js","src/file.js","src/trace.js","src/asset.js","src/preset.js","src/supply-chain.js","src/user.js","src/tag.js","src/stage.js","src/index.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function loadConfigFromArgs(args){\n    let tempConfig = {\n        hasConfig: true,\n        ...args.config\n    };\n\n    configObject = tempConfig;\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        let write = global.write;\n        if(options.noecho){\n            write = () => {};\n        }\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n\n        if(options.stdin) {\n            options.stdin(cp.stdin);\n        }\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.error(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            if([200, 201, 202, 203, 204].includes(response.statusCode) && !response?.body?.trim()) return {};\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        opts.maxParallelRequests = 1;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n\n    static clearProgress(size = 30){\n        if(!configObject.globalProgress) return;\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(!configObject.globalProgress) return;\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n    static async keepalive(funcs){\n        for(let f of funcs){\n            await f();\n        }\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n\n        let index = new IndexObject(opts);\n\n        return await index.fullResults();\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n\nexport function* zip(...items){\n    let iters = items.map(x => x[Symbol.iterator]());\n\n    for(;;){\n        let r = [];\n        for(let i of iters){\n            let next = i.next()\n            if(next.done) return;\n            r.push(next.value);\n        }\n        yield r;\n    }\n}\n\nexport async function* unordered(proms){\n    let encapsulatedPromises = proms.map(async (x, i) => [i, await x]);\n    while(encapsulatedPromises.length > 0){\n        let [ind, result] = await Promise.race(encapsulatedPromises.filter(x => x));\n        yield result;\n\n        encapsulatedPromises[ind] = undefined;\n    }\n}\n\nexport function* range(start, end){\n    if(end === undefined){\n        end = start;\n        start = 0;\n    }\n    while(start < end) yield start++;\n}\n\nexport class IndexObject {\n    //normal opts from any makeAPIRequest\n    //Note that full_response and pages won't work.\n    //\n    //if you want to start from another page, use `opts.start`\n    //opts.observe: async function(jsonData) => jsonData. Transform the data from the api\n    //opts.maxParallelRequests: number of max api requests to do at once\n    //opts.noCollect: return [] instead of the full data\n    constructor(opts){\n        this.opts = opts;\n    }\n\n    linkToPage(page) {\n        return this.baselink.replace(`page=1p`, `page=${page}p`);\n    }\n\n    async initializeFirstRequest(){\n        //Create a copy of the options in case we need to have a special first request\n        this.start = this.opts.start || 1;\n        let initOpts = {...this.opts};\n        if(this.opts.pageSize){\n            initOpts.qs = {...this.opts.qs};\n            initOpts.qs.page = `${this.start}p${this.opts.pageSize}`;\n        }\n\n        this.allResults = [];\n\n        //we make 1 non-parallel request to the first page so we know how to\n        //format the next requests\n        let json = await lib.makeAPIRequest(initOpts);\n\n        if(this.opts.observe) json = await this.opts.observe(json);\n        if(!this.opts.noCollect) this.allResults.push(json);\n\n        this.baselink = json.links.first;\n        this.currentPageRequest = this.start;\n\n        this.hasHit404 = false;\n    }\n\n    getNextRequestLink(){\n        this.currentPageRequest++;\n        return [this.currentPageRequest, this.linkToPage(this.currentPageRequest)];\n    }\n\n    ///promiseID is the id in `currentPromises`, so that it can be marked as\n    ///done inside the promise array. promiseID is a number from 0 to\n    ///maxparallel-1\n    async getNextRequestPromise(promiseID){\n        let [page, path_full] = this.getNextRequestLink();\n        return [promiseID, page, await lib.makeAPIRequest({\n            ...this.opts,\n            path_full,\n            fullResponse: true,\n        })];\n    }\n\n    cancel(){\n        this.willCancel = true;\n    }\n\n    async fullResults(){\n        await this.initializeFirstRequest();\n        let maxParallelRequests = this.opts.maxParallelRequests || this.opts.chunksize || 20;\n\n        let currentPromises = [];\n\n        //generate the first set of requests. Everything after this will re-use these i promiseIDs\n        for(let i = 0; i < maxParallelRequests; i++){\n            currentPromises.push(this.getNextRequestPromise(currentPromises.length));\n        }\n\n        for(;;){\n            let [promiseID, page, requestResult] = await Promise.race(currentPromises.filter(x => x));\n\n            if(this.willCancel){\n                return null;\n            }\n\n            if(requestResult.statusCode === 404){\n                this.hasHit404 = true;\n            }else if(requestResult.statusCode === 200){\n                let json = JSON.parse(requestResult.body);\n                if(this.opts.observe) json = await this.opts.observe(json);\n                if(!this.opts.noCollect) this.allResults.push(json);\n\n                if(json.data.length === 0) this.hasHit404 = true;\n            }else{\n                throw new APIError(requestResult, `(unknown args) page ${page}`, null);\n            }\n\n            if(this.hasHit404){\n                currentPromises[promiseID] = null;\n            }else{\n                currentPromises[promiseID] = this.getNextRequestPromise(promiseID);\n            }\n\n            if(currentPromises.filter(x => x).length === 0) break;\n        }\n\n        let all = [];\n        for(let result of this.allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import {configFile, configObject} from \"./config.js\";\nimport {join, basename} from \"path\";\nimport {writeFileSync} from \"fs\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nexport const inquirer = importLazy(\"inquirer\");\nconst readdir = importLazy(\"recursive-readdir\");\n\n\nlet hasAutoCompletePrompt = false;\nexport function addAutoCompletePrompt(){\n    if(hasAutoCompletePrompt) return\n    hasAutoCompletePrompt = true;\n    inquirer.registerPrompt(\"autocomplete\", require(\"inquirer-autocomplete-prompt\"));\n}\n\nexport async function $api(propArray){\n    let q;\n    q = await inquirer.prompt([{\n        type: \"input\",\n        name: \"company\",\n        message: `What is your company?`,\n        default: `discovery`,\n    }]);\n\n    let company = q.company;\n\n    const defaults = {\n        DEV:  `https://${company}-dev.sdvi.com/api/v2`,\n        UAT:  `https://${company}-uat.sdvi.com/api/v2`,\n        QA:  `https://${company}-qa.sdvi.com/api/v2`,\n        PROD: `https://${company}.sdvi.com/api/v2`,\n    };\n\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the api endpoint for ${env}?`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}?`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository (empty for N/A)?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $appName(propArray){\n    let defaultAppName = \"cmdline-\" + (process.env.USERNAME || process.env.LOGNAME);\n    let project = await askInput(\"Application name?\", defaultAppName);\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {appName: project};\n}\n\nexport async function $project(propArray){\n    let project = await askInput(\"Subproject directory?\");\n    if(project === \"none\" || project === \"-\" || project === \"\" || !project){\n        project = null\n    }\n    return {project};\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(providers, autoDefault = false){\n    addAutoCompletePrompt();\n    let defaultProvider = providers.findByName(\"SdviEvaluate\");\n    if(autoDefault){\n        return defaultProvider;\n    }else{\n        let choices = providers.arr.map(x => ({\n            name: x.chalkPrint(true),\n            value: x,\n        }))\n        let q = await inquirer.prompt([{\n            type: \"autocomplete\",\n            name: \"provider\",\n            default: defaultProvider,\n            source: async (sofar, input) => {\n                return choices.filter(x => input ? x.value.name.toLowerCase().includes(input.toLowerCase()) : true);\n            },\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function loadLocals(path, Class){\n    let basePath = configObject.repodir;\n    let objs = (await readdir(basePath))\n        .filter(name => name.includes(path))\n        .filter(name => !basename(name).startsWith(\".\"))\n        .map(name => new Class({path: name}));\n    return objs;\n}\n\nexport async function selectLocal(path, typeName, Class, canSelectNone = true){\n    addAutoCompletePrompt();\n    let objs = await loadLocals(path, Class);\n    let objsMap = objs.map(x => ({\n        name: x.chalkPrint(true),\n        value: x,\n    }));\n\n    return await selectLocalMenu(objsMap, typeName, canSelectNone);\n}\n\nexport async function selectLocalMenu(objs, typeName, canSelectNone = true){\n    let none = {\n        name: (chalk`      {red None}: {red None}`),\n        value: null,\n    };\n    if(canSelectNone) objs.unshift(none);\n\n    let q = await inquirer.prompt([{\n        type: \"autocomplete\",\n        name: \"obj\",\n        message: `What ${typeName} do you want?`,\n        source: async (sofar, input) => {\n            return objs.filter(x => input ? x.name.toLowerCase().includes(input.toLowerCase()) : true);\n        },\n    }]);\n    return q.obj;\n}\n\nexport async function selectPreset({purpose = \"preset\", canSelectNone}){\n    return selectLocal(\"silo-presets\", purpose, Preset, canSelectNone);\n}\nexport async function selectRule({purpose = \"rule\", canSelectNone}){\n    return selectLocal(\"silo-rules\", purpose, Rule, canSelectNone);\n}\n\nexport async function askInput(question, def){\n    return (await inquirer.prompt([{\n        type: \"input\",\n        name: \"ok\",\n        message: question,\n        default: def,\n    }])).ok;\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n\nexport async function saveConfig(newConfigObject, {ask = true, print = true} = {}){\n    //Create readable json and make sure the user is ok with it\n    let newConfig = JSON.stringify(newConfigObject, null, 4);\n    if(print) log(newConfig);\n\n    //-y or --set will make this not prompt\n    if(ask && !await askQuestion(\"Write config to disk?\")) return;\n    writeFileSync(configFile, newConfig, {mode: 0o600});\n    log(chalk`Created file {green ${configFile}}.`);\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite file)\"}} {red ${this.sizeHR}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n\n    get sizeHR(){\n        let units = [\"B\", \"K\", \"M\", \"G\", \"T\"];\n\n        let unitIdx = 0;\n\n        let size = this.size;\n        while(size > 1000){\n            size /= 1024;\n            unitIdx++;\n        }\n\n        if(size > 100){\n            size = Math.round(size);\n        }else{\n            size = Math.round(size * 10) / 10;\n        }\n\n        return size + units[unitIdx];\n    }\n\n    get instancesList() {\n        let instances = [];\n        for(let [key, val] of Object.entries(this.instances)){\n            let n = {id: key};\n            Object.assign(n, val);\n            instances.push(n);\n        }\n        return instances;\n    }\n\n    static rslURL(instance){\n        return `rsl://${instance.storageLocationName}/${instance.name}`;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nexport async function findLineInFile(renderedPreset, lineNumber){\n    let trueFileLine = lineNumber;\n\n    let linedRenderedPreset = renderedPreset.split(\"\\n\").slice(2,-2);\n    renderedPreset = renderedPreset.split(\"\\n\").slice(2,-2).join(\"\\n\");\n    let includeLocation = renderedPreset.split(\"\\n\").filter(x => x.includes(\"@include\"));\n\n    let endIncludeNumber = -1, addTabDepth = 2;\n    let lineBeforeIncludeStatement = '';\n    let withinInclude = true;\n\n    if (lineNumber > linedRenderedPreset.indexOf(includeLocation[includeLocation.length -1])){\n        addTabDepth = 0;\n        withinInclude = false;\n    }\n\n    for (let index = includeLocation.length - 1; index >= 0; index--){\n        let currIncludeIndex = linedRenderedPreset.indexOf(includeLocation[index]);\n        let tabDepth = includeLocation[index].split(\"  \").length;\n        if (lineNumber > currIncludeIndex) {\n            if (includeLocation[index].split(\" \").filter(Boolean)[1] != \"ERROR:\"){\n                if (lineBeforeIncludeStatement.split(\"  \").length == tabDepth && withinInclude){\n                    trueFileLine = trueFileLine - currIncludeIndex;\n                    break;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth && endIncludeNumber == -1){\n                    endIncludeNumber = currIncludeIndex;\n                } else if ((lineBeforeIncludeStatement.split(\"  \").length + addTabDepth) == tabDepth){\n                    trueFileLine = trueFileLine - (endIncludeNumber - currIncludeIndex);\n                    endIncludeNumber = -1;\n                }\n            }\n        } else {\n            lineBeforeIncludeStatement = includeLocation[index];\n        }\n    }\n\n    let funcLine = \"\"\n    for(let line of linedRenderedPreset.slice(0, lineNumber).reverse()){\n        let match = /def (\\w+)/.exec(line);\n        if(match){\n            funcLine = match[1];\n            break;\n        }\n    }\n\n    let includeFilename;\n\n    if(lineBeforeIncludeStatement != \"\"){\n        includeFilename = lineBeforeIncludeStatement.slice(1).trim().slice(14, -1)\n    }else{\n        includeFilename = null;\n    }\n\n    if(includeLocation.length !== 0){\n        trueFileLine -= 1;\n        lineNumber -= 1;\n    }\n\n    return {\n        lineNumber: trueFileLine,\n        includeFilename,\n        line: linedRenderedPreset[lineNumber],\n        funcLine,\n    };\n\n}\n\nexport function printOutLine(eLine){\n    return log(chalk`{blue ${eLine.includeFilename || \"Main\"}}:{green ${eLine.lineNumber}} in ${eLine.funcLine}\n${eLine.line}`)\n}\n\nexport async function getArtifact(env, artifact, jobid){\n    let path = `/jobs/${jobid}/artifacts/${artifact}`;\n    let art = lib.makeAPIRequest({\n        env, path,\n    }).catch(_ => null);\n\n    return await art;\n}\n\nexport async function getInfo(env, jobid){\n    let trace          = getArtifact(env, \"trace\", jobid);\n    let renderedPreset = getArtifact(env, \"preset\", jobid);\n    let result         = getArtifact(env, \"result\", jobid);\n    let error          = getArtifact(env, \"error\", jobid);\n    let output         = getArtifact(env, \"output\", jobid);\n\n    [trace, renderedPreset, result, output, error] = await Promise.all([trace, renderedPreset, result, output, error]);\n\n    return {trace, renderedPreset, result, output, error}\n}\n\nexport const tracelineRegex = /^(?:[\\d.]+) ([\\w ]+):(\\d+): (.+)/;\nexport function parseTraceLine(line){\n    let info = tracelineRegex.exec(line);\n\n    if(!info) {\n        return {\n            full: line,\n            parsed: false,\n            content: line,\n        };\n    }\n\n    return {\n        absoluteTime: info[0],\n        presetName: info[1],\n        lineNumber: info[2],\n        text: info[3],\n        content: info[3],\n        full: line,\n        parsed: true,\n    }\n}\n\nexport async function parseTrace(env, jobid){\n\n    let {trace, renderedPreset} = await getInfo(env, jobid);\n\n    let fileName = '';\n    let lineNumber = -1;\n\n    let errorLines = []\n    let shouldBreak = 0;\n    for(let tr of trace.split(\"\\n\\n\").reverse()){\n        errorLines.push(tr);\n        shouldBreak--;\n        if(tr.includes(\"Exception\")) shouldBreak = 1;\n        if(tr.includes(\"raised\")) shouldBreak = 1;\n        if(!shouldBreak) break;\n    }\n\n    let errorList = [];\n    for(let errLine of errorLines){\n\n        let info = parseTraceLine(errLine);\n        if(!info.parsed){\n            errorList.push(await findLineInFile(renderedPreset, info.lineNumber));\n        }else{\n            errorList.push(errLine);\n        }\n    }\n\n    return errorList;\n}\n\nconst Trace = {parseTrace, printOutLine, getInfo, findLineInFile, getArtifact};\nexport default Trace;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\nimport Preset from \"./preset.js\";\nimport {getArtifact, parseTraceLine} from \"./trace.js\";\n\nimport path from \"path\";\nimport fs from \"fs\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    async getMetadata(forceRefresh = false){\n        if(this.meta.metadata && !forceRefresh) return this.meta.metadata;\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/movies/${this.id}/metadata?page=1p100`,\n        });\n\n        return this.meta.metadata = Asset.normalizeMetadata(req.data);\n    }\n\n    async patchMetadata(metadata){\n        if(metadata.Workflow){\n            //FIXME\n            //Currently, WORKFLOW_METADATA cannot be patched via api: we need to\n            //start a ephemeral eval to upload it\n            let md = JSON.stringify(JSON.stringify(metadata.Workflow));\n            let fakePreset = {\n                code: `WORKFLOW_METADATA.update(json.loads(${md}))`\n            }\n            await this.startEphemeralEvaluateIdeal(fakePreset);\n            log(\"WFMD Patched using ephemeralEval\")\n        }\n        if(metadata.Metadata){\n            let req = await lib.makeAPIRequest({\n                env: this.remote, path: `/movies/${this.id}/metadata/Metadata`,\n                method: \"PATCH\",\n                payload: {\n                    \"data\": {\n                        \"type\": \"metadata\",\n                        \"attributes\": {\n                            \"metadata\": metadata.Metadata\n                        },\n                    }\n                }\n            });\n            log(\"MD Patched\")\n        }\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(refresh = false){\n        if(this._files && !refresh) return this._files;\n\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return this._files = new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, {initData, priority} = {}){\n        let attributes = {};\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes.initData = initData;\n        }\n        if(priority){\n            attributes.priority = priority\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset, dynamicPresetData, isBinary=false){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        //we need to strip invalid utf8 characters from the\n                        //buffer before we encode it or the sdvi backend dies\n                        providerData: Buffer.from(preset.code, isBinary && \"binary\" || \"utf8\").toString(\"base64\"),\n                        dynamicPresetData,\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\\n\");\n        let dots = 0;\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(`\\r${res.data.attributes.state}${\".\".repeat(dots++)}         `);\n            if(dots === 5){ dots = 1; }\n\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(500);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid, dynamicPresetData){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    attributes: {\n                        dynamicPresetData,\n                    },\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n    async rename(newName){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: `/assets/${this.id}`,\n            method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        name: newName,\n                    },\n                    type: \"assets\",\n                }\n            }\n        });\n\n        this.name = newName;\n\n        return req;\n    }\n\n    async migrate(targetEnv){\n        configObject.globalProgress = false;\n        log(`Creating paired file in ${targetEnv}`);\n\n        //Fetch metadata in parallel, we await it later\n        let _mdPromise = this.getMetadata();\n\n        let targetAsset = await Asset.getByName(targetEnv, this.name);\n        if(targetAsset){\n            log(`Asset already exists ${targetAsset.chalkPrint()}`);\n            //if(configObject.script) process.exit(10);\n        }else{\n            targetAsset = await Asset.createNew(this.name, targetEnv);\n            log(`Asset created ${targetAsset.chalkPrint()}`);\n        }\n\n        //wait for metadata to be ready before patching\n        await _mdPromise;\n        log(\"Adding asset metadata\");\n        await targetAsset.patchMetadata(this.md);\n\n        let fileCreations = [];\n        for(let file of await this.getFiles()){\n\n            let possibleInstances = {};\n            //Check for any valid copy-able instances\n            for(let inst of file.instancesList){\n                //We need to skip internal files\n                if(inst.storageLocationName === \"Rally Platform Bucket\") continue;\n\n                log(`Adding file: ${file.chalkPrint()}`);\n                possibleInstances[inst.storageLocationName] = () => targetAsset.addFileInstance(file, inst);\n            }\n\n            if(Object.values(possibleInstances).length > 1){\n                //prioritize archive is possible\n                if(possibleInstances[\"Archive\"]){\n                    log(\"Hit archive prioritizer\");\n                    fileCreations.push(possibleInstances[\"Archive\"]);\n                }else{\n                    fileCreations.push(...Object.values(possibleInstances));\n                }\n            }else{\n                fileCreations.push(...Object.values(possibleInstances));\n            }\n\n        }\n        await Promise.all(fileCreations.map(x => x()));\n    }\n\n    async addFileInstance(file, inst, tagList = []){\n        let newInst = {\n            uri: File.rslURL(inst),\n            name: inst.name,\n            size: inst.size,\n            lastModified: inst.lastModified,\n            storageLocationName: inst.storageLocationName,\n        };\n\n        let instances = {};\n\n        instances[String(Math.floor(Math.random() * 100000 + 1))] = newInst;\n\n\n        let request = lib.makeAPIRequest({\n            env: this.remote, path: `/files`, method: \"POST\",\n\n            payload: {\n                data: {\n                    type: \"files\",\n                    attributes: {\n                        label: file.label,\n                        tagList,\n                        instances,\n                    },\n                    relationships: {\n                        asset: {\n                            data: {\n                                id: this.id,\n                                type: \"assets\"\n                            },\n                        },\n                    },\n                }\n            }\n        });\n\n\n        try{\n            let fileData = await request;\n            let newFile = new File({data: fileData.data, remote: this.remote, parent: this})\n            if(configObject.script) console.log(inst.uri, newFile.instancesList[0].uri);\n        }catch(e){\n            log(chalk`{red Failed file: ${file.chalkPrint()}}`)\n        }\n    }\n\n    async downloadFile(label, destFolder){\n        let files = await this.getFiles();\n\n        let file = files.findByName(label)\n\n        let c = await file.getContent();\n\n        if(destFolder){\n            let filePath = path.join(destFolder, file.instancesList[0].name);\n            fs.writeFileSync(filePath, c);\n        }else{\n            console.log(c);\n        }\n    }\n    async deleteFile(label){\n        let files = await this.getFiles();\n        let file = files.findByName(label);\n        if(!file) return false;\n        await file.delete(false);//mode=forget\n        return true;\n    }\n\n    async grep(text, {artifact = \"trace\", nameOnly = false, ordering = null}){\n        async function* reorderPromises(p){\n            ////yield in order we got it\n            //yield* p[Symbol.iterator]();\n            ////yield in order of first to finish\n            //yield* unordered(p);\n\n            //yield in chronological order\n            let k = await Promise.all(p);\n            yield* k.sort((\n                [e1, _a],\n                [e2, _b]\n            ) => {\n                return e1.attributes.completedAt - e2.attributes.completedAt;\n            });\n        }\n\n\n        elog(\"Reading jobs...\");\n        let r = await lib.indexPathFast({\n            env: this.remote, path: \"/jobs\",\n            qs: {\n                filter: `movieId=${this.id}`\n            }\n        });\n\n        elog(\"Getting job artifacts...\");\n\n        function highlight(line, text){\n            let parts = line.split(text);\n            return parts.join(chalk`{blue ${text}}`);\n        }\n\n        function parseLine(x){\n            if(artifact === \"trace\"){\n                return parseTraceLine(x);\n            }else{\n                //fake the output from parseTraceLine to make it look right\n                return {content: x};\n            }\n        }\n\n        //let evals = r.filter(x => x.attributes.providerTypeName === \"SdviEvaluate\");\n        let evals = r;\n        let zipped = evals.map(async x => [x, await getArtifact(this.remote, artifact, x.id)]);\n        for await(let [e, trace] of reorderPromises(zipped)){\n            if(!trace) continue;\n\n            let lines = trace.split(\"\\n\").map(parseLine);\n            let matching = lines.filter(x => x.content.includes(text));\n            if(matching.length > 0){\n                let preset = await Preset.getById(this.remote, e.relationships.preset.data.id);\n                if(nameOnly){\n                    log(chalk`{red ${preset.name}} ${e.id} {blue ${matching.length}} matche(s)`);\n                }else if(configObject.rawOutput){\n                    console.log(matching.map(x => chalk`{red ${preset.name}}:${highlight(x.content, text)}`).join(\"\\n\"));\n                }else{\n                    log(chalk`{red ${preset.name}} ${e.id}`);\n                    log(matching.map(x => `  ${highlight(x.content, text)}`).join(\"\\n\"));\n                }\n            }\n        }\n    }\n\n    async analyze(){\n        await lib.makeAPIRequest({\n            env: this.remote, path: \"/v1.0/analysis\",\n            method: \"POST\",\n            payload: {\n                \"movieId\": this.id,\n                \"latestVersion\": true,\n            },\n        });\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {loadLocals} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env, shouldTest = true){\n        await this.uploadCodeToEnv(env, true, shouldTest);\n    }\n    async save(env, shouldTest = true){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env, shouldTest);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        let code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n\n        //match header like \n        // # c: d\n        // # b\n        // # a\n        // ##################\n        let headerRegex = /(^# .+[\\r\\n]+)+#+[\\r\\n]+/gim;\n        let hasHeader = headerRegex.exec(code);\n\n        if(hasHeader){\n            this.header = code.substring(0, hasHeader[0].length - 1);\n            code = code.substring(hasHeader[0].length);\n        }\n\n        return this.code = code;\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s*:\\s*([\\w\\d. \\/_]+)\\s*$/gim;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\") && !configObject.updateImmutable;\n    }\n\n    async convertImports() { \n    }\n\n    async convertIncludes() { \n    }\n\n    isEval() {\n        return this.providerName === \"SdviEvaluate\" || this.providerName === \"SdviEvalPro\";\n    }\n\n    async uploadPresetData(env, id){\n        if(this.code.trim() === \"NOUPLOAD\"){\n            write(chalk`code skipped {yellow :)}, `);\n            return;\n        }\n\n        let code = this.code;\n        let headers = {};\n\n        //if(this.isEval()){\n            //let crt = 0;\n            //code = code.split(\"\\n\").map(line => {\n                //crt += 1\n\n                //if(line.trim().endsWith(\"\\\\\")) return line;\n\n                //return [\n                    //line,\n                    //`# this ^^ is ${this.name}:${crt}`,\n                //]\n            //}).flat().join(\"\\n\");\n        //}\n\n        if(!configObject.skipHeader && this.isEval()){\n            write(chalk`generate header, `);\n            let repodir = configObject.repodir;\n            let localpath;\n            if(this.path){\n                localpath = this.path.replace(repodir, \"\");\n                if(localpath.startsWith(\"/\")) localpath = localpath.substring(1);\n            }else{\n                localpath = \"Other Silo\"\n            }\n\n            try{\n                let {stdout: headerText} = await spawn(\n                    {noecho: true},\n                    \"sh\",\n                    [\n                        path.join(configObject.repodir, `bin/header.sh`),\n                        moment(Date.now()).format(\"ddd YYYY/MM/DD hh:mm:ssa\"),\n                        localpath,\n                    ]\n                );\n                code = headerText + code;\n                write(chalk`header ok, `);\n            }catch(e){\n                write(chalk`missing unix, `);\n            }\n        }\n\n        //binary presets\n        if(this.providerName == \"Vantage\"){\n            code = Buffer.from(code).toString(\"base64\");\n            headers[\"Content-Transfer-Encoding\"] = \"base64\";\n        }\n\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: code, method: \"PUT\", fullResponse: true, timeout: 10000,\n            headers,\n        });\n        write(chalk`code up {yellow ${res.statusCode}}, `);\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async deleteRemoteVersion(env, id=null){\n        if(lib.isLocalEnv(env)) return false;\n        if(!id){\n            let remote = await Preset.getByName(env, this.name);\n            id = remote.id;\n        }\n\n        return await lib.makeAPIRequest({\n            env, path: `/presets/${id}`,\n            method: \"DELETE\",\n        });\n    }\n\n    async delete(){\n        if(lib.isLocalEnv(this.remote)) return false;\n\n        return await this.deleteRemoteVersion(this.remote, this.id);\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            if(includeMetadata){\n                let payload = {data: {attributes: this.data.attributes, type: \"presets\"}};\n                payload.data.relationships = {};\n                if (this.relationships.providerType) {\n                    payload.data.relationships.providerType = this.relationships.providerType;\n                    let dt = payload.data.relationships.providerType;\n                    write(chalk`query type, `);\n                    let ptid = await Provider.getByName(env, dt.data.name);\n                    write(chalk`({gray ${ptid.name}}) ok, `);\n                    dt.data.id = ptid.data.id;\n                }else{\n                    write(\"replace (simple), \");\n                }\n\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PUT\",\n                    payload,\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n                if(res.statusCode >= 400){\n                    log(chalk`skipping code upload, did not successfully upload metadata`)\n                    return;\n                }\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        //todo fixup for binary presets, see uploadPresetData\n        return readFileSync(this.path, \"utf-8\");\n    }\n\n    parseHeaderInfo(){\n        if(!this.header) return null;\n        let abs = {\n            built:   /Built On:(.+)/.exec(this.header)[1]?.trim(),\n            author:  /Author:(.+)/.exec(this.header)[1]?.trim(),\n            build:   /Build:(.+)/.exec(this.header)[1]?.trim(),\n            version: /Version:(.+)/.exec(this.header)[1]?.trim(),\n            branch:  /Branch:(.+)/.exec(this.header)[1]?.trim(),\n            commit:  /Commit:(.+)/.exec(this.header)[1]?.trim(),\n            local:   /Local File:(.+)/.exec(this.header)[1]?.trim(),\n        }\n\n        let tryFormats = [\n            [true,  \"ddd MMM DD HH:mm:ss YYYY\"],\n            [false, \"ddd YYYY/MM/DD LTS\"],\n        ];\n\n        for(let [isUTC, format] of tryFormats){\n            let date;\n            if(isUTC){\n                date = moment.utc(abs.built, format)\n            }else{\n                date = moment(abs.built, format)\n            }\n\n            if(!date.isValid()) continue;\n\n            abs.offset = date.fromNow();\n\n            break;\n        }\n\n        return abs;\n    }\n\n    async printRemoteInfo(env){\n        let remote = await Preset.getByName(env, this.name);\n        await remote.downloadCode();\n        let i = remote.parseHeaderInfo();\n\n        if(i){\n            log(chalk`\n                ENV: {red ${env}}, updated {yellow ~${i.offset}}\n                Built on {blue ${i.built}} by {green ${i.author}}\n                From ${i.build || \"(unknown)\"} on ${i.branch} ({yellow ${i.commit}})\n            `.replace(/^[ \\t]+/gim, \"\").trim());\n        }else{\n            log(chalk`No header on {red ${env}}`);\n        }\n    }\n\n    async getInfo(envs){\n        await this.printDepends();\n        for(let env of envs.split(\",\")){\n            await this.printRemoteInfo(env);\n        }\n    }\n\n    async printDepends(indent=0, locals=null, seen={}){\n        let includeRegex = /@include [\"'](.+)['\"]/gim;\n        //let includeRegex = /@include/g;\n\n        let includes = [];\n\n        let inc;\n        while(inc = includeRegex.exec(this.code)){\n            includes.push(inc[1]);\n        }\n\n        //let includes = this.code\n            //.split(\"\\n\")\n            //.map(x => includeRegex.exec(x))\n            //.filter(x => x)\n            //.map(x => x[1]);\n        //log(includes);\n\n        if(!locals){\n            locals = new Collection(await loadLocals(\"silo-presets\", Preset));\n        }\n\n        log(Array(indent + 1).join(\" \") + \"- \" + this.name);\n\n        for(let include of includes){\n            if(seen[include]){\n                log(Array(indent + 1).join(\" \") + \"  - (seen) \" + include);\n            }else{\n                seen[include] = true\n                let file = await locals.findByName(include);\n                if(file){\n                    await file.printDepends(indent + 2, locals, seen);\n                }else{\n                    log(Array(indent + 1).join(\" \") + \"  - (miss) \" + include);\n                }\n            }\n        }\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\ndefineAssoc(Preset, \"providerName\", \"relationships.providerType.data.name\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async deleteTo(env){\n         for(let preset of this.presets){\n            try{\n                await preset.deleteRemoteVersion(env);\n            }catch(e){log(e);}\n         }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n    async curate(){\n        this.curated = !this.curated;\n\n        return await lib.makeAPIRequest({\n            env: this.remote, path: `/tagNames/${this.id}`, method: \"PATCH\",\n            payload: {\n                data: {\n                    attributes: {\n                        curated: this.curated,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        });\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","import {RallyBase, lib, AbortError, Collection, sleep, zip} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc, spawn} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport {saveConfig, loadLocals, inquirer, addAutoCompletePrompt, askQuestion, selectPreset, selectLocalMenu, askInput} from \"./config-create\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\nimport Preset from \"./preset.js\";\nimport Rule from \"./rule.js\";\nimport SupplyChain from \"./supply-chain.js\";\nimport {categorizeString} from \"./index.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\nimport moment from \"moment\";\n\nlet exists = {};\n\nlet Stage = {\n    async before(args){\n        this.env = args.env;\n        this.args = args;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n\n    setStageId() {\n        let api = configObject.api[this.env];\n        if(!api) return null;\n        return this.stageid = api.stage;\n    },\n\n    // This returns true if the stage failed to load\n    async downloadStage() {\n        this.setStageId();\n\n        if(!this.stageid) {\n            log(chalk`No stage ID found for {green ${this.env}}. Run \"{red rally stage init -e ${this.env} (stage name)}\" or select a different env.`);\n            return true;\n        }\n\n        let preset = await Preset.getById(this.env, this.stageid);\n        await preset.downloadCode();\n\n        this.stageData = JSON.parse(preset.code);\n        this.stagePreset = preset;\n\n        log(chalk`Stage loaded: {green ${this.stagePreset.name}}`);\n    },\n\n    async uploadStage() {\n        if(!this.stagePreset || !this.stageData) {\n            throw \"Assert fail: no existing prestage (you shouldn't see this)\";\n        }\n\n        this.stagePreset.code = JSON.stringify(this.stageData, null, 4);\n\n        await this.stagePreset.uploadCodeToEnv(this.env, false, false);\n    },\n\n    async $init(){\n        let presetName = this.args._.pop();\n\n        let preset = await Preset.getByName(this.env, presetName);\n\n        if(!preset) {\n            log(\"Existing preset stage not found.\");\n            return;\n        }\n\n        log(chalk`Found stage target to init: ${preset.chalkPrint(false)}`);\n\n        configObject.api[this.env].stage = preset.id;\n        configObject[\"ownerName\"] = await askInput(\"What is your name\");\n\n        await saveConfig(configObject, {print: false});\n    },\n\n    async $info(){\n        if(await this.downloadStage()) return;\n\n        if(configObject.rawOutput) return this.stageData;\n\n        log(chalk`Currently Staged Branches: ${this.stageData.stage.length}`);\n        for(let {branch, commit} of this.stageData.stage){\n            log(chalk`    ${branch} {gray ${commit}}`);\n        }\n\n        log(chalk`Currently Claimed Presets: ${this.stageData.claimedPresets.length}`);\n        for(let preset of this.stageData.claimedPresets){\n            log(chalk`    {blue ${preset.name}} {gray ${preset.owner}}`);\n        }\n    },\n\n    async $claim(){\n        await Promise.all([this.downloadStage(), addAutoCompletePrompt()]);\n        let q;\n\n        let opts = [\n            {name: \"Claim a preset\", value: \"add\"},\n            {name: \"Remove a claimed preset\", value: \"rem\"},\n            {name: \"Apply changes\", value: \"done\"},\n            {name: \"Quit without saving\", value: \"quit\"},\n        ];\n\n        //slice to copy\n        let newClaimed = [];\n        let ownerName = configObject[\"ownerName\"]\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let p = await selectPreset({});\n\n                if(!p) continue;\n\n                newClaimed.push(p);\n            }else if(q.type === \"rem\") {\n                let objsMap = newClaimed.map(x => ({\n                    name: x.chalkPrint(true),\n                    value: x,\n                }));\n\n                for(let obj of this.stageData.claimedPresets) {\n                    objsMap.push({\n                        name: obj.name,\n                        value: obj.name,\n                    });\n                }\n\n                let p = await selectLocalMenu(objsMap, \"preset\", true);\n\n                if(!p) continue;\n                if(typeof(p) == \"string\") {\n                    this.stageData.claimedPresets = this.stageData.claimedPresets.filter(x => x.name != p);\n                }else{\n                    newClaimed = newClaimed.filter(x => x !== p);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n\n        for(let newClaim of newClaimed) {\n            this.stageData.claimedPresets.push({\n                name: newClaim.name,\n                owner: ownerName,\n            });\n        }\n\n        await this.uploadStage();\n    },\n\n    async getBranches(){\n        let branches = await spawn({noecho: true}, \"git\", [\"branch\", \"-la\", \"--color=never\"]);\n        if(branches.exitCode !== 0) {\n            log(\"Error in loading branches\", branches);\n        }\n\n        let branchList = branches.stdout\n            .split(\"\\n\")\n            .map(x => x.trim())\n            .filter(x => x.startsWith(\"remotes/origin\"))\n            .map(x => {\n                let lastSlash = x.lastIndexOf(\"/\");\n                if(lastSlash !== -1){\n                    x = x.slice(lastSlash + 1);\n                }\n\n                return x;\n            });\n\n        if(!await this.checkCurrentBranch()) {\n            log(\"Not currently on staging\");\n            return;\n        }\n\n        log(\"Finished retreiving branches.\");\n\n        return branchList;\n    },\n\n    async runGit(oks, ...args) {\n        if(typeof(oks) === \"number\") {\n            oks = [oks];\n        }else if(typeof(oks) === \"undefined\") {\n            oks = [0];\n        }\n\n        let g = await spawn({noecho: true}, \"git\", args);\n        if(configObject.verbose) log(`git ${args.join(\" \")}`);\n\n        if(!oks.includes(g.exitCode)) {\n            log(g.stderr);\n            log(g.stdout);\n            throw new AbortError(`Failed to run git ${args}`);\n        }\n\n        return [g.stdout, g.stderr]\n    },\n\n    filterwith(list) {\n        return async (sofar, input) => {\n            return list.filter(x => input ? (x.name || x).toLowerCase().includes(input.toLowerCase()) : true);\n        }\n    },\n\n    //finite state machine for inputting branch changes\n    async editFSM(allBranches, newStagedBranches) {\n\n        let q;\n\n        let opts = [\n            {name: \"Add a branch to the stage\", value: \"add\"},\n            {name: \"Remove a branch from the stage\", value: \"rem\"},\n            {name: \"Finalize stage\", value: \"done\"},\n            {name: \"Quit without saving\", value: \"quit\"},\n        ];\n\n        for(;;) {\n            q = await inquirer.prompt([{\n                type: \"autocomplete\",\n                name: \"type\",\n                message: `What do you want to do?`,\n                source: this.filterwith(opts)\n            }]);\n\n            if(q.type === \"add\") {\n                let qqs = allBranches.slice(0); //copy the branches\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to add?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.add(q.branch);\n                }\n            }else if(q.type === \"rem\") {\n                let qqs = Array.from(newStagedBranches);\n                qqs.push(\"None\");\n                q = await inquirer.prompt([{\n                    type: \"autocomplete\",\n                    name: \"branch\",\n                    message: `What branch do you want to remove?`,\n                    source: this.filterwith(qqs)\n                }]);\n\n                if(q.branch !== \"None\") {\n                    newStagedBranches.delete(q.branch);\n                }\n            }else if(q.type === \"done\") {\n                break;\n            }else if(q.type === \"quit\") {\n                return\n            }\n        }\n    },\n\n\n\n    async $edit(){\n        let needsInput = !this.args.a && !this.args.r && !this.args.add && !this.args.remove;\n\n        let [branches, stage, _] = await Promise.all([\n            this.getBranches(),\n            this.downloadStage(),\n            !needsInput || addAutoCompletePrompt()\n        ]);\n\n        if(stage) return;\n\n        if(!branches) return;\n\n        //copy the branches we started with\n        let newStagedBranches = new Set();\n        let oldStagedBranches = new Set();\n        for(let {branch} of this.stageData.stage){\n            newStagedBranches.add(branch);\n            oldStagedBranches.add(branch);\n        }\n\n        if(needsInput) {\n            await this.editFSM(branches, newStagedBranches);\n        } else {\n            let asarray = arg => {\n                if(!arg) return [];\n                return Array.isArray(arg) ? arg : [arg];\n            }\n\n            for(let branch of [...asarray(this.args.a), ...asarray(this.args.add)]) {\n                if(!branches.includes(branch)){\n                    throw new AbortError(`Invalid branch ${branch}`);\n                }\n                newStagedBranches.add(branch);\n            }\n            for(let branch of [...asarray(this.args.r), ...asarray(this.args.remove)]) {\n                if(!branches.includes(branch)){\n                    throw new AbortError(`Invalid branch ${branch}`);\n                }\n                newStagedBranches.delete(branch);\n            }\n        }\n\n        const difference = (s1, s2) => new Set([...s1].filter(x => !s2.has(x)));\n        const intersect = (s1, s2) => new Set([...s1].filter(x => s2.has(x)));\n\n        log(\"Proposed stage changes:\");\n        for(let branch of intersect(newStagedBranches, oldStagedBranches)){\n            log(chalk`   ${branch}`);\n        }\n        for(let branch of difference(newStagedBranches, oldStagedBranches)){\n            log(chalk`  {green +${branch}}`);\n        }\n        for(let branch of difference(oldStagedBranches, newStagedBranches)){\n            log(chalk`  {red -${branch}}`);\n        }\n\n        let ok = this.args.y || await askQuestion(\"Prepare these branches for deployment?\");\n        if(!ok) return;\n\n        //just to make sure commits/branches don't get out of order\n        newStagedBranches = Array.from(newStagedBranches);\n\n        try {\n            let [diffText, newStagedCommits] = await this.doGit(newStagedBranches, this.stageData.stage.map(x => x.commit));\n\n            await this.runRally(diffText);\n\n            this.stageData.stage = Array.from(zip(newStagedBranches, newStagedCommits)).map(([branch, commit]) => ({branch, commit}));\n\n             await this.uploadStage();\n        }catch(e){\n            if(e instanceof AbortError) {\n                await this.runGit([0], \"reset\", \"--hard\", \"HEAD\");\n                await this.runGit([0], \"checkout\", \"staging\");\n                throw e;\n            }\n\n            throw e; //TODO \n        }finally{\n            await this.runGit([0], \"checkout\", \"staging\");\n        }\n\n    },\n\n    async $pull() {\n        if(await this.downloadStage()) return;\n        await this.makeOldStage(this.stageData.stage.map(x => x.commit), `rallystage-${this.env}`);\n    },\n\n\n    async makeNewStage(newStagedBranches) {\n        let newStagedCommits = [];\n\n        await this.runGit([0, 1], \"branch\", \"-D\", \"RALLYNEWSTAGE\");\n        await this.runGit([0], \"checkout\", \"-b\", \"RALLYNEWSTAGE\");\n        for(let branch of newStagedBranches) {\n            let originName = `origin/${branch}`\n            let [_, merge] = await this.runGit([0], \"merge\", \"--squash\", originName);\n            await this.runGit([0], \"commit\", \"-m\", `autostaging: commit ${branch}`);\n            let hash = await spawn({noecho: true}, \"git\", [\"log\", \"--format=oneline\", \"--color=never\", \"-n\", \"1\", originName]);\n            if(hash.exitCode !== 0) {\n                throw new AbortError(`Failed to get commit hash for branch, ${branch}`);\n            }\n            newStagedCommits.push(hash.stdout.split(\" \")[0]);\n        }\n\n        return newStagedCommits;\n    },\n\n    async makeOldStage(oldStagedCommits, name) {\n        await this.runGit([0], \"checkout\", \"staging\");\n        await this.runGit([0, 1], \"branch\", \"-D\", name);\n        await this.runGit([0], \"checkout\", \"-b\", name);\n        for(let branch of oldStagedCommits) {\n            await this.runGit([0], \"merge\", branch);\n        }\n    },\n\n    async checkCurrentBranch() {\n        let expected = `On branch staging\nYour branch is up to date with 'origin/staging'.\n\nnothing to commit, working tree clean`;\n\n        let status = await spawn({noecho: true}, \"git\", [\"status\"]);\n        return status.stdout.trim() === expected;\n    },\n\n    async doGit(newStagedBranches, oldStagedCommits) {\n        if(!await this.checkCurrentBranch()) {\n            log(\"Not currently on staging\");\n            return;\n        }\n\n        let newStagedCommits = await this.makeNewStage(newStagedBranches);\n        await this.makeOldStage(oldStagedCommits, \"RALLYOLDSTAGE\");\n\n        await this.runGit([0], \"checkout\", \"RALLYNEWSTAGE\");\n        let diff = await spawn({noecho: true}, \"git\", [\"diff\", \"RALLYOLDSTAGE..HEAD\", \"--name-only\"]);\n        if(diff.exitCode !== 0) { \n            log(diff);\n            throw new Error(\"diff failed\");\n        }\n\n        let diffText = diff.stdout;\n\n        return [diffText, newStagedCommits];\n    },\n\n    async $testrr() {\n        let diff = `silo-presets/Super Movie Data Collector.py\n        silo-presets/Super Movie Post Work Order.py\n        silo-presets/Super Movie Task Handler.py`;\n\n\n        await this.runRally(diff);\n    },\n\n    async runRally(diffText) {\n        let set = new Set();\n        for(let file of diffText.trim().split(\"\\n\")){\n            set.add(await categorizeString(file));\n        }\n        let files = [...set];\n        files = files.filter(f => f && !f.missing);\n\n        let chain = new SupplyChain();\n\n        chain.rules = new Collection(files.filter(f => f instanceof Rule));\n        chain.presets = new Collection(files.filter(f => f instanceof Preset));\n        chain.notifications = new Collection([]);\n\n        chain.log();\n\n        let hasClaimed = false;\n        for(let preset of chain.presets) {\n            for(let claim of this.stageData.claimedPresets){\n                if(preset.name == claim.name) {\n                    hasClaimed = true;\n                    log(chalk`{yellow Claimed preset}: {blue ${claim.name}} (owner {green ${claim.owner}})`);\n                }\n            }\n        }\n\n        if(hasClaimed){\n            throw new AbortError(\"Someone has a claimed preset in the deploy\");\n        }\n\n\n        let ok = this.args.y || await askQuestion(\"Deploy now?\");\n        if(!ok) throw new AbortError(\"Not deploying\");\n\n        await chain.syncTo(this.env);\n    },\n\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help stage}'`);\n    },\n}\n\nexport default Stage;\n","require(\"source-map-support\").install();\n\nimport {lib, UnconfiguredEnvError, IndexObject} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\nimport {default as Preset} from \"./preset.js\";\nimport {default as Rule} from \"./rule.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\nexport {default as Stage} from \"./stage.js\";\n//TODO fix export from index\nexport {default as Trace} from \"./trace.js\";\n\nimport fs from \"fs\";\nimport {configObject} from \"./config.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            let repodir = configObject.repodir;\n            if(repodir){\n                try{\n                    fs.lstatSync(repodir).isDirectory();\n                    return [true, 0];\n                }catch(e){\n                    return [false, 0];\n                }\n            }else{\n                throw new UnconfiguredEnvError();\n            }\n        }\n        let start = new Date();\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 2000});\n        let timed = new Date() - start;\n        return [result.statusCode, timed];\n    },\n}\n\nexport async function categorizeString(str, defaultSubproject=undefined){\n    str = str.trim();\n    if(str.startsWith('\"')){\n        str = str.slice(1, -1);\n    }\n    if(match = /^(\\w)-(\\w{1,10})-(\\d{1,10}):/.exec(str)){\n        if(match[1] === \"P\"){\n            let ret = await Preset.getById(match[2], match[3]);\n            //TODO modify for subproject a bit\n            return ret;\n        }else if(match[1] === \"R\"){\n            return await Rule.getById(match[2], match[3]);\n        }else{\n            return null;\n        }\n    }else if(match = /^([\\w \\/\\\\\\-_]*)[\\/\\\\]?silo\\-(\\w+)[\\/\\\\]/.exec(str)){\n        try{\n            switch(match[2]){\n                case \"presets\": return new Preset({path: str, subProject: match[1]});\n                case \"rules\": return new Rule({path: str, subProject: match[1]});\n                case \"metadata\": return await Preset.fromMetadata(str, match[1]);\n            }\n        }catch(e){\n            log(e);\n        }\n    }else{\n        return null;\n    }\n}\n"],"names":["configFile","homedir","loadConfig","file","configObject","hasConfig","json","readFileSync","JSON","parse","e","code","loadConfigFromArgs","args","tempConfig","config","setConfig","obj","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","spawn","options","unshift","Promise","resolve","reject","start","performance","now","stdout","stderr","cp","cp_spawn","write","global","noecho","on","chunk","stdin","end","time","timestr","exitCode","chalk","log","text","console","process","elog","error","ewrite","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","replace","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","trim","AbortError","indexPath","opts","maxParallelRequests","index","IndexObject","fullResults","clearProgress","size","globalProgress","repeat","drawProgress","i","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","funcs","f","indexPathFast","isLocalEnv","envName","Error","constructor","message","captureStackTrace","name","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","length","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","item","remote","metastring","data","endpoint","included","push","getByName","filter","getAllPreCollect","getAll","datas","pageSize","sort","all","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","links","organization","sleep","setTimeout","zip","items","iters","r","next","done","value","unordered","proms","encapsulatedPromises","ind","result","race","undefined","range","linkToPage","page","baselink","initializeFirstRequest","initOpts","allResults","observe","noCollect","first","currentPageRequest","hasHit404","getNextRequestLink","getNextRequestPromise","promiseID","cancel","willCancel","chunksize","currentPromises","requestResult","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","Notification","notifications","home","colon","siloLike","pathTransform","slice","invertedPath","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","Rule","subProject","pathResolve","ignoreMissing","missing","subproject","newShell","isGeneric","acclimatize","preset","Preset","pNext","eNext","proType","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","localpath","uploadRemote","immutable","idMap","res","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","join","repodir","sub","inquirer","importLazy","readdir","hasAutoCompletePrompt","addAutoCompletePrompt","registerPrompt","require","loadLocals","Class","basePath","objs","basename","selectLocal","typeName","canSelectNone","objsMap","selectLocalMenu","none","q","prompt","source","sofar","input","toLowerCase","selectPreset","purpose","askInput","question","def","default","ok","askQuestion","saveConfig","newConfigObject","ask","print","newConfig","mode","File","parent","sizeHR","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","values","instances","round","units","unitIdx","instancesList","n","assign","rslURL","instance","storageLocationName","findLineInFile","renderedPreset","lineNumber","trueFileLine","linedRenderedPreset","includeLocation","endIncludeNumber","addTabDepth","lineBeforeIncludeStatement","withinInclude","indexOf","currIncludeIndex","tabDepth","Boolean","funcLine","line","reverse","match","exec","includeFilename","printOutLine","eLine","getArtifact","artifact","jobid","art","catch","_","getInfo","trace","output","tracelineRegex","parseTraceLine","info","full","parsed","content","absoluteTime","presetName","parseTrace","errorLines","shouldBreak","tr","errorList","errLine","Trace","Asset","lite","metadata","normalizeMetadata","newMetadata","md","usage","getMetadata","forceRefresh","req","patchMetadata","Workflow","fakePreset","startEphemeralEvaluateIdeal","Metadata","createNew","getFiles","refresh","_files","addFile","label","fileuris","Array","startWorkflow","jobName","initData","priority","startAnonWorkflow","dynamicPresetData","isBinary","provider","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","dots","self","state","startEvaluate","presetid","rename","newName","migrate","targetEnv","_mdPromise","targetAsset","fileCreations","possibleInstances","inst","addFileInstance","tagList","newInst","lastModified","random","asset","fileData","newFile","script","downloadFile","destFolder","files","c","filePath","deleteFile","grep","nameOnly","ordering","reorderPromises","p","k","e1","_a","e2","_b","completedAt","highlight","parts","parseLine","evals","zipped","lines","matching","rawOutput","analyze","exists","pathspl","ext","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","localmetadatapath","systemManaged","fromMetadata","providerType","realpath","getLocalPath","ptype","test","regex","matches","runTest","saveLocal","saveLocalMetadata","saveLocalFile","shouldTest","uploadCodeToEnv","save","saved","downloadCode","headerRegex","hasHeader","header","substring","_code","v","endsWith","name_regex","findStringsInCode","strings","str","RegExp","_path","_nameOuter","_nameInner","updateImmutable","convertImports","convertIncludes","isEval","providerName","uploadPresetData","skipHeader","headerText","moment","Date","format","grabMetadata","deleteRemoteVersion","includeMetadata","dt","ptid","parseHeaderInfo","abs","built","author","build","version","branch","commit","local","tryFormats","isUTC","date","utc","isValid","offset","fromNow","printRemoteInfo","envs","printDepends","indent","locals","seen","includeRegex","inc","include","SupplyChain","startingRule","stopRule","downloadPresetCode","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","add","neededPresets","neededRules","notif","verbose","deleteTo","syncTo","rule","User","Tag","prefix","curated","create","notCurated","curate","Stage","before","setStageId","stageid","stage","downloadStage","stageData","stagePreset","uploadStage","$init","$info","claimedPresets","owner","$claim","newClaimed","ownerName","filterwith","newClaim","getBranches","branches","branchList","lastSlash","lastIndexOf","checkCurrentBranch","runGit","oks","g","list","editFSM","allBranches","newStagedBranches","qqs","$edit","needsInput","oldStagedBranches","asarray","arg","difference","s1","s2","has","intersect","y","diffText","newStagedCommits","doGit","runRally","$pull","makeOldStage","makeNewStage","originName","merge","hash","oldStagedCommits","expected","status","diff","$testrr","categorizeString","chain","hasClaimed","claim","unknown","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess","lstatSync","isDirectory","timed","defaultSubproject","ret"],"mappings":"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"}