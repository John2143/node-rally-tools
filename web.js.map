{"version":3,"file":"web.js","sources":["src/config.js","src/decorators.js","src/rally-tools.js","src/providers.js","src/file.js","src/asset.js","src/fswrap.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/user.js","src/tag.js","src/index.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = null\n\nif(homedir){\n    configFile = homedir() + \"/.rallyconfig\";\n}\n\nlet configObject;\nexport function loadConfig(file){\n    if(file) configFile = file;\n    if(!configFile) return;\n\n    configObject = {hasConfig: true};\n    try{\n        let json = readFileSync(configFile);\n        configObject = JSON.parse(json);\n        configObject.hasConfig = true;\n    }catch(e){\n        if(e.code == \"ENOENT\"){\n            configObject.hasConfig = false;\n            //ok, they should probably make a config\n        }else{\n            throw e;\n        }\n    }\n}\n\nexport function setConfig(obj){\n    configObject = obj;\n}\n\nloadConfig();\n\nexport {configObject};\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] !== argsKey[i]){\n                continue\n            }\n        }\n        return {found: true, value};\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFun(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n    newFunc.remove = function(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(found){\n            cachedValues = cachedValues.filter(([arg, item]) => item !== value);\n        }\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this, path)[lastKey] = val;\n        },\n    });\n}\n\nimport {spawn as cp_spawn} from \"child_process\";\nimport {performance} from \"perf_hooks\";\n\n//Spawn promise decorator, based on https://gist.github.com/Stuk/6226938\nexport function spawn(options, ...args){\n    if(typeof options !== \"object\"){\n        args.unshift(options);\n        options = {};\n    }\n    //todo options\n    return new Promise((resolve, reject) => {\n        let start = performance.now();\n\n        let stdout = \"\";\n        let stderr = \"\";\n        let cp = cp_spawn(...args);\n\n        if(cp.stdout) cp.stdout.on(\"data\", chunk => {stdout += chunk; write(chunk)});\n        if(cp.stderr) cp.stderr.on(\"data\", chunk => {stderr += chunk; write(chunk)});\n\n        cp.on(\"error\", reject);\n        cp.on(\"close\", code => {\n            let end = performance.now();\n            let time = end - start;\n            let timestr = time > 1000 ? (time/100|0)/10 + \"s\" : (time|0) + \"ms\";\n            resolve({stdout, stderr, exitCode: code, time, timestr});\n        });\n    });\n}\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nimport {cached} from \"./decorators.js\";\nimport rp from \"request-promise\";\n\nglobal.chalk = chalk;\nglobal.log      = (...text) => console.log(...text);\nglobal.write    = (...text) => process.stdout.write(...text);\nglobal.elog     = (...text) => console.log(...text);\nglobal.ewrite   = (...text) => process.stderr.write(...text);\nglobal.errorLog = (...text) => log(...text.map(chalk.red));\n\nexport class lib{\n    //This function takes 2 required arguemnts:\n    // env: the enviornment you wish to use\n    // and either:\n    //  'path', the short path to the resource. ex '/presets/'\n    //  'path_full', the full path to the resource like 'https://discovery-dev.sdvi.com/presets'\n    //\n    // If the method is anything but GET, either payload or body should be set.\n    // payload should be a javascript object to be turned into json as the request body\n    // body should be a string that is passed as the body. for example: the python code of a preset.\n    //\n    // qs are the querystring parameters, in a key: value object.\n    // {filter: \"name=test name\"} becomes something like 'filter=name=test+name'\n    //\n    // headers are the headers of the request. \"Content-Type\" is already set if\n    //   payload is given as a parameter\n    //\n    // fullResponse should be true if you want to receive the request object,\n    //  not just the returned data.\n    static async makeAPIRequest({\n        env, path, path_full, fullPath,\n        payload, body, method = \"GET\",\n        qs, headers = {},\n        fullResponse = false, timeout = configObject.timeout || 20000\n    }){\n        //backwards compatability from ruby script\n        if(fullPath) path_full = fullPath;\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && configObject.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n        if(path && path.startsWith(\"/v1.0/\")){\n            rally_api = rally_api.replace(\"/api/v2\", \"/api\");\n        }\n\n        path = path_full || rally_api + path;\n        if(payload){\n            body = JSON.stringify(payload, null, 4);\n        }\n\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let fullHeaders = {\n            //SDVI ignores this header sometimes.\n            Accept: \"application/vnd.api+json\",\n            \"X-SDVI-Client-Application\": \"Discovery-rtlib-\" + (configObject.appName || \"commandline\"),\n            ...headers,\n        }\n\n        if(configObject.vvverbose){\n            log(`${method} @ ${path}`)\n            log(JSON.stringify(fullHeaders, null, 4))\n\n            if(body){\n                log(body);\n            }else{\n                log(\"(No body\")\n            }\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            timeout,\n            auth: {bearer: rally_api_key},\n            headers: fullHeaders,\n            simple: false, resolveWithFullResponse: true,\n        };\n\n        let response;\n        try{\n            response = await rp(requestOptions);\n            if(configObject.vverbose || configObject.vvverbose){\n                log(chalk`${method} @ ${response.request.uri.href}`);\n            }\n        }catch(e){\n            if(e?.cause.code === \"ESOCKETTIMEDOUT\"){\n                throw new APIError(response || {}, requestOptions, body);\n            }else{\n                throw e;\n            }\n        }\n\n        //Throw an error for any 5xx or 4xx\n        if(!fullResponse && ![200, 201, 202, 203, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions, body);\n        }\n        let contentType = response.headers[\"content-type\"];\n        let isJSONResponse = contentType === \"application/vnd.api+json\" || contentType === \"application/json\";\n\n        if(configObject.vvverbose){\n            log(response.body);\n        }\n\n        if(fullResponse){\n            return response;\n        }else if(isJSONResponse){\n            try{\n                return JSON.parse(response.body);\n            }catch(e){\n                log(response.body);\n                throw new AbortError(\"Body is not valid json: \");\n            }\n        }else{\n            return response.body;\n        }\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //This function returns the merged data objects as an array\n    //\n    //Additonal options (besides makeAPIRequest options):\n    // - Observe: function to be called for each set of data from the api\n    static async indexPath(env, path){\n        let all = [];\n\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        let json = await this.makeAPIRequest(opts);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({...opts, path_full: json.links.next});\n            if(opts.observe) await opts.observe(json.data);\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    static arrayChunk(array, chunkSize){\n        let newArr = [];\n        for (let i = 0; i < array.length; i += chunkSize){\n            newArr.push(array.slice(i, i + chunkSize));\n        }\n        return newArr;\n    }\n\n    static async doPromises(promises, result = [], cb){\n        for(let promise of promises){\n            let res = await promise;\n            result.push(res);\n            if(cb){\n                cb(res.data);\n            }\n        }\n        return result\n    }\n\n    static clearProgress(size = 30){\n        process.stderr.write(`\\r${\" \".repeat(size + 15)}\\r`);\n    }\n\n    static async drawProgress(i, max, size = process.stdout.columns - 15 || 15){\n        if(size > 45) size = 45;\n        let pct = Number(i) / Number(max);\n        //clamp between 0 and 1\n        pct = pct < 0 ? 0 : pct > 1 ? 1 : pct;\n        let numFilled = Math.floor(pct * size);\n        let numEmpty = size - numFilled;\n\n        this.clearProgress(size);\n        process.stderr.write(`[${\"*\".repeat(numFilled)}${\" \".repeat(numEmpty)}] ${i} / ${max}`);\n    }\n\n\n    static async keepalive(func, inputData, {chunksize, observe = async _=>_} = {}){\n        let total = inputData ? inputData.length : func.length;\n        let i = 0;\n        let createPromise = () => {\n            let ret;\n            if(i >= total) return [];\n            if(inputData){\n                ret = [i, func(inputData[i])];\n            }else{\n                ret = [i, func[i]()];\n            }\n\n            i++;\n            return ret;\n        }\n\n        let values = [];\n        let finished = 0;\n        process.stderr.write(\"\\n\")\n        let threads = [...this.range(20)].map(async (whichThread) => {\n            while(true){\n                let [i, currentPromise] = createPromise();\n                if(i == undefined) break;\n                values[i] = await observe(await currentPromise);\n                this.drawProgress(++finished, total);\n            }\n        });\n        await Promise.all(threads);\n        process.stderr.write(\"\\n\")\n\n\n        return values;\n    }\n\n    static *range(start, end){\n        if(end === undefined){\n            end = start;\n            start = 0;\n        }\n        while(start < end) yield start++;\n    }\n\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    //\n    //Additional opts, besides default indexPath opts:\n    // - chunksize[10]: How often to break apart concurrent requests\n    static async indexPathFast(env, path){\n        let opts = typeof env === \"string\" ? {env, path} : env;\n        //Create a copy of the options in case we need to have a special first request\n        let start = opts.start || 1;\n        let initOpts = {...opts};\n        if(opts.pageSize){\n            initOpts.qs = {...opts.qs};\n            initOpts.qs.page = `${start}p${opts.pageSize}`;\n        }\n\n        let json = await this.makeAPIRequest(initOpts);\n\n        if(opts.observe && opts.start !== 1) json = await opts.observe(json);\n\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(`page=1p`, `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let allResults = await this.keepalive(\n            this.makeAPIRequest,\n            [...this.range(start+1, Number(numPages) + 1 || opts.limit + 1)]\n                .map(i => ({...opts, path_full: linkToPage(i)})),\n            {chunksize: opts.chunksize, observe: opts.observe},\n        );\n        if(start == 1){\n            allResults.unshift(json);\n        }\n        this.clearProgress();\n\n        let all = [];\n        for(let result of allResults){\n            for(let item of result.data){\n                all.push(item);\n            }\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n    static envName(env){\n        if(this.isLocalEnv(env)) return \"LOCAL\";\n        return env;\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts, body){\n        super(chalk`\n{reset Request returned} {yellow ${response?.statusCode}}{\n{green ${JSON.stringify(opts, null, 4)}}\n{green ${body}}\n{reset ${response.body}}\n===============================\n{red ${response.body ? \"Request timed out\" : \"Bad response from API\"}}\n===============================\n        `);\n        this.response = response;\n        this.opts = opts;\n        this.body = body;\n\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class FileTooLargeError extends Error{\n    constructor(file){\n        super(`File ${file.parentAsset ? file.parentAsset.name : \"(unknown)\"}/${file.name} size is: ${file.sizeGB}g (> ~.2G)`);\n        this.name = \"File too large error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this){\n            if(d){\n                log(d.chalkPrint(true));\n            }else{\n                log(chalk`{red (None)}`);\n            }\n        }\n    }\n    get length(){return this.arr.length;}\n}\n\nexport class RallyBase{\n    static handleCaching(){\n        if(!this.cache) this.cache = [];\n    }\n    static isLoaded(env){\n        if(!this.hasLoadedAll) return;\n        return this.hasLoadedAll[env];\n    }\n    static async getById(env, id, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.id == id && item.remote === env || `${env}-${id}` === item.metastring) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}/${id}`,\n            qs\n        });\n        if(data.data){\n            let o = new this({data: data.data, remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getByName(env, name, qs){\n        this.handleCaching();\n        for(let item of this.cache){\n            if(item.name === name && item.remote === env) return item;\n        }\n\n        let data = await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`,\n            qs: {...qs, filter: `name=${name}` + (qs ? qs.filter : \"\")},\n        });\n        //TODO included might not wokr correctly here\n        if(data.data[0]){\n            let o = new this({data: data.data[0], remote: env, included: data.included});\n            this.cache.push(o);\n            return o;\n        }\n    }\n\n    static async getAllPreCollect(d){return d;}\n    static async getAll(env){\n        this.handleCaching();\n        let datas = await lib.indexPathFast({\n            env, path: `/${this.endpoint}`,\n            pageSize: \"50\",\n            qs: {sort: \"id\"},\n        });\n        datas = await this.getAllPreCollect(datas);\n        let all = new Collection(datas.map(data => new this({data, remote: env})));\n        this.cache = [...this.cache, ...all.arr];\n        return all;\n    }\n    static async removeCache(env){\n        this.handleCaching();\n        this.cache = this.cache.filter(x => x.remote !== env);\n    }\n\n    //Specific turns name into id based on env\n    //Generic turns ids into names\n    async resolveApply(type, dataObj, direction){\n        let obj;\n        if(direction == \"generic\"){\n            obj = await type.getById(this.remote, dataObj.id);\n            if(obj){\n                dataObj.name = obj.name\n            }\n        }else if(direction == \"specific\"){\n            obj = await type.getByName(this.remote, dataObj.name);\n            if(obj){\n                dataObj.id = obj.id\n            }\n        }\n        return obj;\n    }\n\n    //Type is the baseclass you are looking for (should extend RallyBase)\n    //name is the name of the field\n    //isArray is true if it has multiple cardinailty, false if it is single\n    //direction gets passed directly to resolveApply\n    async resolveField(type, name, isArray=false, direction=\"generic\"){\n        // ignore empty fields\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return await Promise.all(field.data.map(o => this.resolveApply(type, o, direction)));\n        }else{\n            return await this.resolveApply(type, field.data, direction);\n        }\n    }\n\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            //Remove ids from data\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        // organization is unused (?)\n        delete this.relationships.organization;\n        // id is specific to envs\n        // but save source inside meta string in case we need it\n        this.metastring = this.remote + \"-\" + this.data.id;\n        delete this.data.id;\n        // links too\n        delete this.data.links;\n    }\n}\n\nexport function sleep(time = 1000){\n    return new Promise(resolve => setTimeout(resolve, time));\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Provider extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    //cached\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    static async getAllPreCollect(providers){\n        return providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"data.id\");\ndefineAssoc(Provider, \"name\", \"data.attributes.name\");\ndefineAssoc(Provider, \"category\", \"data.attributes.category\");\ndefineAssoc(Provider, \"remote\", \"meta.remote\");\ndefineAssoc(Provider, \"editorConfig\", \"meta.editorConfig\");\nProvider.endpoint = \"providerTypes\";\n\nexport default Provider;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, FileTooLargeError} from \"./rally-tools.js\";\n\nclass File extends RallyBase{\n    constructor({data, remote, included, parent}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        this.parentAsset = parent;\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"F-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    canBeDownloaded(){\n        return this.sizeGB <= .2;\n    }\n\n    async getContent(force = false){\n        if(!this.canBeDownloaded() && !force){\n            throw new FileTooLargeError(this);\n        }\n\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.contentLink\n        });\n    }\n    async delete(remove = true){\n        return lib.makeAPIRequest({\n            env: this.remote, fullPath: this.selfLink,\n            method: \"DELETE\",\n        });\n    }\n    get size(){\n        return Object.values(this.data.attributes.instances)[0].size\n    }\n\n    get sizeGB(){\n        return Math.round(this.size / 1024 / 1024 / 1024 * 10) / 10;\n    }\n}\n\ndefineAssoc(File, \"id\", \"data.id\");\ndefineAssoc(File, \"name\", \"data.attributes.label\");\ndefineAssoc(File, \"contentLink\", \"data.links.content\");\ndefineAssoc(File, \"selfLink\", \"data.links.self\");\ndefineAssoc(File, \"label\", \"data.attributes.label\");\ndefineAssoc(File, \"md5\", \"data.attributes.md5\");\ndefineAssoc(File, \"sha512\", \"data.attributes.sha512\");\ndefineAssoc(File, \"tags\", \"data.attributes.tagList\");\ndefineAssoc(File, \"instances\", \"data.attributes.instances\");\nFile.endpoint = null\n\nexport default File;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase, sleep} from \"./rally-tools.js\";\nimport File from \"./file.js\";\nimport Provider from \"./providers.js\";\n\nclass Asset extends RallyBase{\n    constructor({data, remote, included, lite}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n        if(included){\n            this.meta.metadata = Asset.normalizeMetadata(included);\n        }\n        this.lite = !!lite;\n    }\n    static normalizeMetadata(payload){\n        let newMetadata = {}\n        for(let md of payload){\n            if(md.type !== \"metadata\") continue;\n            newMetadata[md.attributes.usage] = md.attributes.metadata;\n        }\n        return newMetadata;\n    }\n\n    static lite(id, remote){\n        return new this({data: {id}, remote, lite: true})\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"A-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        if(pad) id = id.padStart(15);\n        return chalk`{green ${id}}: {blue ${this.data.attributes ? this.name : \"(lite asset)\"}}`;\n    }\n\n    static async createNew(name, env){\n        let req = await lib.makeAPIRequest({\n            env, path: \"/assets\",\n            method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {name},\n                    type: \"assets\"\n                }\n            }\n        });\n        return new this({data: req.data, remote: env});\n    }\n\n    async delete(){\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/assets/\" + this.id,\n            method: \"DELETE\",\n        });\n    }\n\n    async getFiles(){\n        let req = await lib.indexPathFast({\n            env: this.remote, path: `/assets/${this.id}/files`,\n            method: \"GET\",\n        });\n\n        //return req;\n        return new Collection(req.map(x => new File({data: x, remote: this.remote, parent: this})));\n    }\n\n    async addFile(label, fileuris){\n        if(!Array.isArray(fileuris)) fileuris = [fileuris];\n\n        let instances = {}\n        for(let i = 0; i < fileuris.length; i++){\n            instances[String(i + 1)] = {uri: fileuris[i]};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/files\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"attributes\": {\n                        label, instances,\n                    },\n                    \"relationships\": {\n                        \"asset\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"assets\"\n                            }\n                        }\n                    },\n                    \"type\": \"files\"\n                }\n\n            }\n        });\n        return req;\n    }\n    async startWorkflow(jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env: this.remote, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"movie\": {\n                            \"data\": {\n                                id: this.id,\n                                \"type\": \"movies\"\n                            }\n                        }, \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n    }\n    static async startAnonWorkflow(env, jobName, initData){\n        let attributes;\n        if(initData){\n            //Convert init data to string\n            initData = typeof initData === \"string\" ? initData : JSON.stringify(initData);\n            attributes = {initData};\n        }\n\n        let req = await lib.makeAPIRequest({\n            env, path: \"/workflows\",\n            method: \"POST\",\n            payload: {\n                \"data\": {\n                    \"type\": \"workflows\",\n                    attributes,\n                    \"relationships\": {\n                        \"rule\": {\n                            \"data\": {\n                                \"attributes\": {\n                                    \"name\": jobName,\n                                },\n                                \"type\": \"rules\"\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return req;\n\n    }\n\n    async startEphemeralEvaluateIdeal(preset){\n        let res;\n        const env = this.remote;\n        let provider = await Provider.getByName(this.remote, \"SdviEvaluate\");\n\n        write(chalk`Starting ephemeral evaluate on ${this.chalkPrint(false)}...`)\n\n        // Fire and forget.\n        let evalInfo = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        category: provider.category,\n                        providerTypeName: provider.name,\n                        rallyConfiguration: {},\n                        providerData: Buffer.from(preset.code, \"binary\").toString(\"base64\"),\n                    },\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        write(\" Waiting for finish...\");\n        for(;;){\n            res = await lib.makeAPIRequest({\n                env, path_full: evalInfo.data.links.self\n            });\n            write(\".\");\n            if(res.data.attributes.state == \"Complete\"){\n                write(chalk`{green  Done}...\\n`);\n                break;\n            }\n            await sleep(300);\n        }\n\n        return;\n    }\n\n    async startEvaluate(presetid){\n        // Fire and forget.\n        let data = await lib.makeAPIRequest({\n            env: this.remote, path: \"/jobs\", method: \"POST\",\n            payload: {\n                data: {\n                    type: \"jobs\",\n                    relationships: {\n                        movie: {\n                            data: {\n                                id: this.id,\n                                type: \"movies\",\n                            }\n                        }, preset: {\n                            data: {\n                                id: presetid,\n                                type: \"presets\",\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return data;\n    }\n}\n\ndefineAssoc(Asset, \"id\", \"data.id\");\ndefineAssoc(Asset, \"name\", \"data.attributes.name\");\ndefineAssoc(Asset, \"remote\", \"meta.remote\");\ndefineAssoc(Asset, \"md\", \"meta.metadata\");\ndefineAssoc(Asset, \"lite\", \"meta.lite\");\nAsset.endpoint = \"movies\"\n\nexport default Asset;\n","import fs from \"fs\";\nimport {dirname} from \"path\";\n\nimport {configObject} from \"./config.js\";\nimport {homedir} from \"os\";\n\n\nlet home;\nif(homedir){\n    home = homedir();\n}\nconst colon = /:/g;\nconst siloLike = /(silo\\-\\w+?)s?\\/([^\\/]+)\\.([\\w1234567890]+)$/g;\nexport function pathTransform(path){\n    if(path.includes(\":\")){\n        //Ignore the first colon in window-like filesystems\n        path = path.slice(0, 3) + path.slice(3).replace(colon, \"--\");\n    }\n    if(configObject.invertedPath){\n        path = path.replace(siloLike, \"$2-$1.$3\")\n    }\n    if(path.includes(\"\\\\342\\\\200\\\\220\")){\n        path = path.replace(\"\\\\342\\\\200\\\\220\", \"‐\");\n    }\n    return path;\n}\n\nexport function readFileSync(path, options){\n    return fs.readFileSync(pathTransform(path), options);\n}\n//Create writefilesync, with ability to create directory if it doesnt exist\nexport function writeFileSync(path, data, options, dircreated = false){\n    path = pathTransform(path);\n    try{\n        return fs.writeFileSync(path, data, options);\n    }catch(e){\n        if(dircreated) throw e;\n        let directory = dirname(path);\n        try{\n            fs.statSync(directory);\n            throw e;\n        }catch(nodir){\n            fs.mkdirSync(directory);\n            return writeFileSync(path, data, options, true);\n        }\n    }\n}\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename, resolve as pathResolve, dirname} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\nimport Asset from \"./asset.js\";\n\n// pathtransform for hotfix\nimport {writeFileSync, readFileSync, pathTransform} from \"./fswrap.js\";\nimport path from \"path\";\n\nlet exists = {};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data, subProject} = {}){\n        // Get full path if possible\n        if(path){\n            path = pathResolve(path);\n            if(dirname(path).includes(\"silo-metadata\")){\n                throw new AbortError(\"Constructing preset from metadata file\")\n            }\n        }\n\n        super();\n\n\n        // Cache by path\n        if(path){\n            if(exists[pathTransform(path)]) return exists[pathTransform(path)];\n            exists[pathTransform(path)] = this;\n        }\n\n        this.meta = {};\n        this.subproject = subProject;\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            if(path){\n                this.path = path;\n                let pathspl = this.path.split(\".\");\n                this.ext = pathspl[pathspl.length-1];\n                try{\n                    this.code = this.getLocalCode();\n                }catch(e){\n                    if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        log(chalk`{red Node Error} ${e.message}`);\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }\n                let name = this.parseFilenameForName() || this.parseCodeForName();\n                try{\n                    this.data = this.getLocalMetadata();\n                    this.isGeneric = true;\n                    name = this.name;\n                }catch(e){\n                    log(chalk`{yellow Warning}: ${path} does not have a readable metadata file! Looking for ${this.localmetadatapath}`);\n                    this.data = Preset.newShell(name);\n                    this.isGeneric = false;\n                }\n                this.name = name;\n            }else{\n                this.data = Preset.newShell();\n            }\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n        this.data.attributes.rallyConfiguration = undefined;\n        this.data.attributes.systemManaged = undefined;\n    }\n    //Given a metadata file, get its actualy file\n    static async fromMetadata(path, subproject){\n        let data;\n        try{\n            data = JSON.parse(readFileSync(path));\n        }catch(e){\n            if(e.code === \"ENOENT\" && configObject.ignoreMissing){\n                return null;\n            }else{\n                throw e;\n            }\n        }\n        let providerType = data.relationships.providerType.data.name;\n        let provider = await Provider.getByName(\"DEV\", providerType);\n\n        if(!provider){\n            log(chalk`{red The provider type {green ${providerType}} does not exist}`);\n            log(chalk`{red Skipping {green ${path}}.}`);\n            return null;\n        }\n\n        let ext = await provider.getFileExtension();\n        let name = data.attributes.name;\n\n        let realpath = Preset.getLocalPath(name, ext, subproject);\n        return new Preset({path: realpath, subProject: subproject});\n    }\n\n    static newShell(name = undefined){\n        return {\n            \"attributes\": {\n                \"providerSettings\": {\n                    \"PresetName\": name\n                }\n            },\n            \"relationships\": {},\n            \"type\": \"presets\",\n        };\n    }\n    cleanup(){\n        super.cleanup();\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        if(!this.isGeneric) throw new AbortError(\"Cannot acclimatize non-generics or shells\");\n        let providers = await Provider.getAll(env);\n        let ptype = this.relationships[\"providerType\"];\n            ptype = ptype.data;\n\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    get test(){\n        if(!this.code) return [];\n\n        const regex = /[^-]autotest:\\s?([\\w\\d_\\-. \\/]+)[\\r\\s\\n]*?/gm;\n        let match\n        let matches = []\n        while(match = regex.exec(this.code)){\n            matches.push(match[1]);\n        }\n        return matches\n    }\n    async runTest(env){\n        let remote = await Preset.getByName(env, this.name);\n        for(let test of this.test){\n            log(\"Tests...\");\n            let asset;\n\n            if(test.startsWith(\"id\")){\n                let match = /id:\\s*(\\d+)/g.exec(test);\n                if(!match){\n                    log(chalk`{red Could not parse autotest} ${test}.`);\n                    throw new AbortError(\"Could not properly parse the preset header\");\n                }\n                asset = await Asset.getById(env, match[1]);\n            }else{\n                asset = await Asset.getByName(env, test);\n            }\n\n            if(!asset){\n                log(chalk`{yellow No movie found}, skipping test.`);\n                continue;\n            }\n\n            log(chalk`Starting job {green ${this.name}} on ${asset.chalkPrint(false)}... `);\n            await asset.startEvaluate(remote.id);\n        }\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let proType = await this.resolveField(Provider, \"providerType\");\n\n        this.ext = await proType.getFileExtension();\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        await this.saveLocalMetadata();\n        await this.saveLocalFile();\n    }\n    async saveLocalMetadata(){\n        if(!this.isGeneric){\n            await this.resolve();\n            this.cleanup();\n        }\n        writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n    }\n    async saveLocalFile(){\n        writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        this.saved = true;\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving preset {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(!this.remote || this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        if(this.name == undefined){\n            return chalk`{green ${id}}: ${sub}{red ${this.path}}`;\n        }else if(this.meta.proType){\n            return chalk`{green ${id}}: ${sub}{red ${this.meta.proType.name}} {blue ${this.name}}`;\n        }else{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \")\n                .replace(\".json\", \"\")\n                .replace(\".jinja\", \"\");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name\\s?:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    static getLocalPath(name, ext, subproject){\n        return path.join(configObject.repodir, subproject || \"\", \"silo-presets\", name + \".\" + ext);\n    }\n    get localpath(){return Preset.getLocalPath(this.name, this.ext, this.subproject)}\n\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get name(){\n        return this._nameOuter;\n    }\n    set name(val){\n        if(!this._nameInner) this._nameInner = val;\n        this._nameOuter = val;\n    }\n    set providerType(value){\n        this.relationships[\"providerType\"] = {\n            data: {\n                ...value,\n                type: \"providerTypes\",\n            }\n        };\n    }\n    get localmetadatapath(){\n        if(this.path){\n            return this.path.replace(\"silo-presets\", \"silo-metadata\").replace(new RegExp(this.ext + \"$\"), \"json\")\n        }\n        return path.join(configObject.repodir, this.subproject || \"\",  \"silo-metadata\", this.name + \".json\");\n    }\n    get immutable(){\n        return this.name.includes(\"Constant\");\n    }\n    async uploadPresetData(env, id){\n        if(this.code.trim() !== \"NOUPLOAD\"){\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets/${id}/providerData`,\n                body: this.code, method: \"PUT\", fullResponse: true, timeout: 5000\n            });\n            write(chalk`code up {yellow ${res.statusCode}}, `);\n        }else{\n            write(chalk`code skipped {yellow :)}, `);\n        }\n    }\n    async grabMetadata(env){\n        let remote = await Preset.getByName(env, this.name);\n        this.isGeneric = false;\n        if(!remote){\n            throw new AbortError(`No file found on remote ${env} with name ${this.name}`);\n        }\n        this.data = remote.data;\n        this.remote = env;\n    }\n\n    async uploadCodeToEnv(env, includeMetadata, shouldTest = true){\n        if(!this.name){\n            let match;\n            if(match = /^(#|[\"']{3})\\s*EPH (\\d+)/.exec(this.code.trim())){\n                let a = await Asset.getById(env, Number(match[2]))\n                return a.startEphemeralEvaluateIdeal(this);\n            }else{\n                log(chalk`Failed uploading {red ${this.path}}. No name found.`);\n                return;\n            }\n        }\n\n        write(chalk`Uploading preset {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Preset.getByName(env, this.name);\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                let res = await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                    fullResponse: true,\n                });\n                write(chalk`metadata {yellow ${res.statusCode}}, `);\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            if(!this.relationships[\"providerType\"]){\n                throw new AbortError(\"Cannot acclimatize shelled presets. (try creating it on the env first)\");\n            }\n\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: metadata, timeout: 5000,\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        if(this.test[0] && shouldTest){\n            await this.runTest(env);\n        }else{\n            log(\"No tests. Done.\");\n        }\n    }\n\n    getLocalMetadata(){\n        return JSON.parse(readFileSync(this.localmetadatapath, \"utf-8\"));\n    }\n    getLocalCode(){\n        return readFileSync(this.path, \"utf-8\");\n    }\n}\n\ndefineAssoc(Preset, \"_nameInner\", \"data.attributes.providerSettings.PresetName\");\ndefineAssoc(Preset, \"_nameOuter\", \"data.attributes.name\");\ndefineAssoc(Preset, \"id\", \"data.id\");\ndefineAssoc(Preset, \"attributes\", \"data.attributes\");\ndefineAssoc(Preset, \"relationships\", \"data.relationships\");\ndefineAssoc(Preset, \"remote\", \"meta.remote\");\ndefineAssoc(Preset, \"_code\", \"meta.code\");\ndefineAssoc(Preset, \"_path\", \"meta.path\");\ndefineAssoc(Preset, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Preset, \"ext\", \"meta.ext\");\ndefineAssoc(Preset, \"subproject\", \"meta.project\");\ndefineAssoc(Preset, \"metastring\", \"meta.metastring\");\nPreset.endpoint = \"presets\";\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass Notification extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n\n    static async getAllPreCollect(notifications){\n        return notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"data.id\");\ndefineAssoc(Notification, \"name\", \"data.attributes.name\");\ndefineAssoc(Notification, \"address\", \"data.attributes.address\");\ndefineAssoc(Notification, \"type\", \"data.attributes.type\");\ndefineAssoc(Notification, \"remote\", \"meta.remote\");\nNotification.endpoint = \"notificationPresets\"\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection, AbortError} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport {writeFileSync, readFileSync} from \"./fswrap.js\";\nimport {join, resolve as pathResolve} from \"path\";\n\nclass Rule extends RallyBase{\n    constructor({path, data, remote, subProject} = {}){\n        super();\n        if(path){\n            path = pathResolve(path);\n            try{\n                let f = readFileSync(path, \"utf-8\")\n                data = JSON.parse(readFileSync(path, \"utf-8\"));\n            }catch(e){\n                if(e.code === \"ENOENT\"){\n                    if(configObject.ignoreMissing){\n                        this.missing = true;\n                        return undefined;\n                    }else{\n                        throw new AbortError(\"Could not load code of local file\");\n                    }\n                }else{\n                    throw new AbortError(`Unreadable JSON in ${path}. ${e}`);\n                }\n            }\n        }\n        this.meta = {};\n        this.subproject = subProject;\n        if(!data){\n            data = Rule.newShell();\n        }\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n\n    static newShell(){\n        return {\n            \"attributes\": {\n                \"description\": \"-\",\n                \"priority\": \"PriorityNorm\",\n                \"starred\": false,\n            },\n            \"relationships\": {},\n            \"type\": \"workflowRules\",\n        };\n    }\n\n    async acclimatize(env){\n        this.remote = env;\n\n        let preset  = await this.resolveField(Preset, \"preset\", false, \"specific\");\n        let pNext   = await this.resolveField(Rule, \"passNext\", false, \"specific\");\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false, \"specific\");\n        let proType = await this.resolveField(Provider, \"providerType\", false, \"specific\");\n\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true, \"specific\");\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true, \"specific\");\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true, \"specific\");\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true, \"specific\");\n    }\n    async saveA(env){\n        if(lib.isLocalEnv(env)) return;\n        return await this.createIfNotExist(env);\n    }\n    async saveB(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            log(chalk`Saving rule {green ${this.name}} to {blue ${lib.envName(env)}}.`)\n            writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n        }else{\n            await this.acclimatize(env);\n            await this.uploadRemote(env);\n        }\n    }\n    get immutable(){\n        return false;\n    }\n    async createIfNotExist(env){\n        write(chalk`First pass rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        //First query the api to see if this already exists.\n        let remote = await Rule.getByName(env, this.name);\n\n        this.idMap = this.idMap || {};\n\n        if(remote){\n            this.idMap[env] = remote.id;\n            log(chalk`exists ${remote.chalkPrint(false)}`);\n            return;\n        }\n\n        //If it exists we can replace it\n        write(\"create, \");\n        let res = await lib.makeAPIRequest({\n            env, path: `/workflowRules`, method: \"POST\",\n            payload: {data: {attributes: {name: this.name}, type: \"workflowRules\"}},\n        });\n        this.idMap = this.idMap || {};\n        this.idMap[env] = res.data.id;\n        write(\"id \");\n        log(this.idMap[env]);\n    }\n\n    async patchStrip(){\n        delete this.data.attributes.createdAt;\n        delete this.data.attributes.starred;\n        delete this.data.attributes.updatedAt;\n\n        // TEMP FIX FOR BUG IN SDVI\n        if(this.relationships.passMetadata && this.relationships.passMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.passMetadata;\n\n        if(this.relationships.errorMetadata && this.relationships.errorMetadata[0]){\n            log(\"HAS PASS\");\n            log(this.name);\n            log(\"HAS PASS\");\n        }\n        delete this.relationships.errorMetadata;\n\n        // This is commented out because it was fixed.\n        //for(let key in this.relationships){\n            //let relationship = this.relationships[key];\n            //if(!relationship.data || relationship.data instanceof Array && !relationship.data[0]){\n                //delete this.relationships[key];\n            //}\n        //}\n    }\n\n    async uploadRemote(env){\n        write(chalk`Uploading rule {green ${this.name}} to {green ${env}}: `);\n\n        if(this.immutable){\n            log(chalk`{magenta IMMUTABLE}. Nothing to do.`);\n            return;\n        }\n\n        if(this.idMap[env]){\n            this.remote = env;\n\n            await this.patchStrip();\n            this.data.id = this.idMap[env];\n            //If it exists we can replace it\n            write(\"replace, \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/workflowRules/${this.idMap[env]}`, method: \"PATCH\",\n                payload: {data: this.data}, fullResponse: true,\n            });\n\n            log(chalk`response {yellow ${res.statusCode}}`);\n            if(res.statusCode !== 200){\n                log(res.body)\n                log(JSON.stringify(this.data, null, 4));\n            }\n        }else{\n            throw Error(\"Bad idmap!\");\n        }\n    }\n\n    get localpath(){\n        return join(configObject.repodir, this.subproject || \"\", \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let preset  = await this.resolveField(Preset, \"preset\", false);\n        //log(preset);\n        let pNext   = await this.resolveField(Rule, \"passNext\", false);\n        let eNext   = await this.resolveField(Rule, \"errorNext\", false);\n        let proType = await this.resolveField(Provider, \"providerType\", false);\n\n        //log(\"Dynamic nexts\")\n        let dynamicNexts = await this.resolveField(Rule, \"dynamicNexts\", true);\n        //log(dynamicNexts);\n\n        let enterNotif = await this.resolveField(Notification, \"enterNotifications\", true);\n        let errorNotif = await this.resolveField(Notification, \"errorNotifications\", true);\n        let passNotif  = await this.resolveField(Notification, \"passNotifications\", true);\n\n        //TODO Unsupported\n        delete this.relationships[\"enterMetadata\"]\n        delete this.relationships[\"errorMetadata\"]\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            dynamicNexts,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + (this.remote && this.remote + \"-\" + this.id || \"LOCAL\"))\n        let sub = \"\";\n        if(this.subproject){\n            sub = chalk`{yellow ${this.subproject}}`;\n        }\n        if(pad) id = id.padStart(10);\n        try{\n            return chalk`{green ${id}}: ${sub}{blue ${this.name}}`;\n        }catch(e){\n            return this.data;\n        }\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"data.attributes.name\");\ndefineAssoc(Rule, \"description\", \"data.attributes.description\");\ndefineAssoc(Rule, \"id\", \"data.id\");\ndefineAssoc(Rule, \"relationships\", \"data.relationships\");\ndefineAssoc(Rule, \"isGeneric\", \"meta.isGeneric\");\ndefineAssoc(Rule, \"remote\", \"meta.remote\");\ndefineAssoc(Rule, \"subproject\", \"meta.project\");\ndefineAssoc(Rule, \"idMap\", \"meta.idMap\");\nRule.endpoint = \"workflowRules\";\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection, lib} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\n\n//TODO\n//Move project into silo metadata\n//move autotest into silo metadata\n//\n\nexport default class SupplyChain{\n    constructor(startingRule, stopRule){\n        if(startingRule){\n            this.startingRule = startingRule;\n            this.stopRule = stopRule\n            this.remote = startingRule.remote;\n        }\n    }\n    async downloadPresetCode(objs = this.allPresets){\n        log(\"Downloading code... \");\n        await lib.keepalive(objs.arr.map(x => () => x.downloadCode()));\n    }\n    async calculate(){\n        log(\"Getting rules... \");\n        this.allRules = await Rule.getAll(this.remote);\n        log(this.allRules.length);\n\n        log(\"Getting presets... \");\n        this.allPresets = await Preset.getAll(this.remote);\n        log(this.allPresets.length);\n\n        log(\"Getting providers... \");\n        this.allProviders = await Provider.getAll(this.remote);\n        log(this.allProviders.length);\n\n        log(\"Getting notifications... \");\n        this.allNotifications = await Notification.getAll(this.remote);\n        log(this.allNotifications.length);\n\n        if(!this.startingRule){\n            this.rules = this.allRules;\n            this.presets = this.allPresets;\n            this.notifications = new Collection([]);\n\n            await this.downloadPresetCode();\n            return\n        }else{\n            await this.downloadPresetCode();\n        }\n\n        log(\"Done!\");\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n        log(this.startingRule.chalkPrint());\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            if(currentRule === this.stopRule) continue;\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n\n            passNotif .forEach(n => requiredNotifications.add(n));\n            enterNotif.forEach(n => requiredNotifications.add(n));\n            errorNotif.forEach(n => requiredNotifications.add(n));\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            neededPresets.push(preset);\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(currentRule.chalkPrint(false));\n                log(\":\");\n                write(\"  \");\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = new Collection([...requiredNotifications]);\n    }\n    async log(){\n        if(this.notifications.arr.length > 0){\n            log(\"Required notifications: \");\n            this.notifications.log();\n        }\n\n        if(this.rules.arr.length > 0){\n            write(\"Required rules: \");\n            log(this.rules.arr.length);\n            this.rules.log();\n        }\n\n        if(this.presets.arr.length > 0){\n            write(\"Required presets: \");\n            log(this.presets.arr.length);\n            this.presets.log();\n        }\n\n        if(configObject.rawOutput){\n            return {presets: this.presets.arr, rules: this.rules.arr, notifications: this.notifications.arr};\n        }\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            try{\n                await preset.save(env);\n            }catch(e){log(e);}\n        }\n        if(this.rules.arr[0]){\n            log(\"Starting create phase for rules\")\n            for(let rule of this.rules){\n                try{\n                    await rule.saveA(env);\n                }catch(e){log(e);}\n            }\n\n            log(\"OK\")\n            log(\"Starting link phase for rules\");\n            Rule.removeCache(env);\n\n            for(let rule of this.rules){\n                try{\n                    await rule.saveB(env);\n                }catch(e){log(e);}\n            }\n        }\n    }\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection, RallyBase} from \"./rally-tools.js\";\n\nclass User extends RallyBase{\n    constructor({data, remote}){\n        super();\n        this.data = data;\n        this.meta = {};\n        this.remote = remote;\n    }\n    chalkPrint(pad=false){\n        let id = String(\"U-\" + this.id)\n        if(pad) id = id.padStart(7);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n}\n\ndefineAssoc(User, \"id\", \"data.id\");\ndefineAssoc(User, \"name\", \"data.attributes.name\");\ndefineAssoc(User, \"email\", \"data.attributes.email\");\ndefineAssoc(User, \"remote\", \"meta.remote\");\nUser.endpoint = \"users\"\n\nexport default User;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {cached, defineAssoc} from \"./decorators.js\";\n\nclass Tag extends RallyBase{\n    constructor({data, remote} = {}){\n        super();\n\n        this.meta = {};\n        this.remote = remote\n        this.data = data;\n\n        //this.data.attributes.rallyConfiguration = undefined;\n        //this.data.attributes.systemManaged = undefined;\n    }\n    chalkPrint(pad=true){\n        let id = String(\"T-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n\n        let prefix = this.curated ? \"blue +\" : \"red -\";\n\n        return chalk`{green ${id}}: {${prefix}${this.name}}`;\n    }\n    static async create(env, name, {notCurated} = {}){\n        return new Tag({data: await lib.makeAPIRequest({\n            env, path: `/${this.endpoint}`, method: \"POST\",\n            payload: {\n                data: {\n                    attributes: {\n                        name,\n                        curated: notCurated ? false : true,\n                    },\n                    type: \"tagNames\",\n                }\n            }\n        }), remote: env});\n    }\n}\n\ndefineAssoc(Tag, \"id\", \"data.id\");\ndefineAssoc(Tag, \"attributes\", \"data.attributes\");\ndefineAssoc(Tag, \"relationships\", \"data.relationships\");\ndefineAssoc(Tag, \"name\", \"data.attributes.name\");\ndefineAssoc(Tag, \"curated\", \"data.attributes.curated\");\ndefineAssoc(Tag, \"remote\", \"meta.remote\");\nTag.endpoint = \"tagNames\";\n\nexport default Tag;\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\nexport {default as Notification} from \"./notification.js\";\nexport {default as Asset} from \"./asset.js\";\nexport {default as User} from \"./user.js\";\nexport {default as Tag} from \"./tag.js\";\n//TODO fix export from index\n//export {default as Trace} from \"./trace.js\";\n\nexport * from \"./config.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true, timeout: 1000});\n        return result.statusCode;\n    },\n}\n"],"names":["configFile","homedir","loadConfig","file","configObject","hasConfig","json","readFileSync","JSON","parse","e","code","setConfig","obj","deepAccess","path","o","key","defineAssoc","classname","shortname","split","lastKey","pop","Object","defineProperty","prototype","get","set","val","global","chalk","log","text","console","write","process","stdout","elog","ewrite","stderr","errorLog","map","red","lib","makeAPIRequest","env","path_full","fullPath","payload","body","method","qs","headers","fullResponse","timeout","config","api","UnconfiguredEnvError","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","rally_api","url","startsWith","replace","stringify","fullHeaders","Accept","appName","vvverbose","requestOptions","uri","auth","bearer","simple","resolveWithFullResponse","response","rp","vverbose","request","href","cause","APIError","includes","statusCode","contentType","isJSONResponse","AbortError","indexPath","all","opts","numPages","pageSize","links","last","data","next","observe","str","exec","slice","arrayChunk","array","chunkSize","newArr","i","length","push","doPromises","promises","result","cb","promise","res","clearProgress","size","repeat","drawProgress","max","columns","pct","Number","numFilled","Math","floor","numEmpty","keepalive","func","inputData","chunksize","_","total","createPromise","ret","values","finished","threads","range","whichThread","currentPromise","undefined","Promise","start","end","indexPathFast","initOpts","page","baselink","first","linkToPage","allResults","limit","unshift","item","isLocalEnv","envName","Error","constructor","message","captureStackTrace","name","FileTooLargeError","parentAsset","sizeGB","Collection","arr","Symbol","iterator","findById","id","find","x","findByName","findByNameContains","d","chalkPrint","RallyBase","handleCaching","cache","isLoaded","hasLoadedAll","getById","remote","metastring","endpoint","included","getByName","filter","getAllPreCollect","getAll","datas","sort","removeCache","resolveApply","type","dataObj","direction","resolveField","isArray","field","relationships","cleanup","entries","organization","sleep","time","resolve","setTimeout","Provider","meta","getEditorConfig","editorConfig","fileExt","getFileExtension","providers","a","b","attributes","category","localeCompare","python","getmap","lang","pad","String","padStart","File","parent","canBeDownloaded","getContent","force","contentLink","delete","remove","selfLink","instances","round","Asset","lite","metadata","normalizeMetadata","newMetadata","md","usage","createNew","req","getFiles","addFile","label","fileuris","Array","startWorkflow","jobName","initData","startAnonWorkflow","startEphemeralEvaluateIdeal","preset","provider","evalInfo","providerTypeName","rallyConfiguration","providerData","Buffer","from","toString","movie","self","state","startEvaluate","presetid","home","colon","siloLike","pathTransform","invertedPath","options","fs","writeFileSync","dircreated","directory","dirname","statSync","nodir","mkdirSync","exists","Preset","subProject","pathResolve","subproject","pathspl","ext","getLocalCode","ignoreMissing","missing","parseFilenameForName","parseCodeForName","getLocalMetadata","isGeneric","localmetadatapath","newShell","systemManaged","fromMetadata","providerType","realpath","getLocalPath","acclimatize","ptype","test","regex","match","matches","runTest","asset","proType","saveLocal","saveLocalMetadata","saveLocalFile","localpath","uploadRemote","uploadCodeToEnv","save","saved","downloadCode","_code","v","sub","endsWith","basename","name_regex","findStringsInCode","strings","RegExp","join","repodir","_path","_nameOuter","_nameInner","value","immutable","uploadPresetData","trim","grabMetadata","includeMetadata","shouldTest","Notification","notifications","Rule","f","pNext","eNext","dynamicNexts","enterNotif","errorNotif","passNotif","saveA","createIfNotExist","saveB","idMap","patchStrip","createdAt","starred","updatedAt","passMetadata","errorMetadata","SupplyChain","startingRule","stopRule","downloadPresetCode","objs","allPresets","calculate","allRules","allProviders","allNotifications","rules","presets","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","forEach","n","add","neededPresets","neededRules","notif","p","verbose","rawOutput","syncTo","rule","User","Tag","prefix","curated","create","notCurated","require","install","rallyFunctions","bestPagintation","silentAPI","dl","timeEnd","uploadPresets","createFunc","testAccess"],"mappings":"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"}