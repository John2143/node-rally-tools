{"version":3,"file":"bundle.js","sources":["src/config.js","src/rally-tools.js","src/decorators.js","src/providers.js","src/preset.js","src/notification.js","src/rule.js","src/supply-chain.js","src/index.js","src/config-create.js","src/cli.js"],"sourcesContent":["import {homedir} from \"os\";\nimport {readFileSync} from \"fs\";\n\nexport let configFile = homedir() + \"/.rallyconfig\";\n\nlet configObject = {hasConfig: true};\ntry{\n    let json = readFileSync(configFile);\n    configObject = JSON.parse(json);\n}catch(e){\n    if(e.code == \"ENOENT\"){\n        configObject.hasConfig = false;\n        //ok, they should probably make a config\n    }else{\n        throw e;\n    }\n}\n\nexport {configObject};\n","import chalk from \"chalk\";\nimport {configObject} from \"./config.js\";\nconst rp = importLazy(\"request-promise\")\n\nglobal.chalk = chalk;\nglobal.log = text => console.log(text);\nglobal.write = text => process.stdout.write(text);\nglobal.errorLog = text => log(chalk.red(text));\n\n\nexport class lib{\n    static async makeAPIRequest({env, path, path_full, payload, body, json = true, method = \"GET\", qs, headers = {}, fullResponse = false}){\n        //Keys are defined in enviornment variables\n        let config = configObject?.api?.[env];\n        if(!config) {\n            throw new UnconfiguredEnvError(env);\n        };\n        //Protect PROD and UAT(?) if the --no-protect flag was not set.\n        if(method !== \"GET\" && !configObject.dangerModify){\n            if(env === \"UAT\" && config.restrictUAT || env === \"PROD\"){\n                throw new ProtectedEnvError(env);\n            }\n        }\n\n\n        let rally_api_key = config.key;\n        let rally_api = config.url;\n\n\n        path = path_full || rally_api + path;\n        body = body || payload && JSON.stringify(payload);\n\n        if(global.logAPI){\n            log(chalk`${method} @ ${path}`);\n            if(qs){\n                log(qs)\n            }\n        }\n        if(payload){\n            headers[\"Content-Type\"] = \"application/vnd.api+json\";\n        }\n\n        let requestOptions = {\n            method, body, qs, uri: path,\n            auth: {bearer: rally_api_key},\n            headers: {\n                Accept: \"application/vnd.api+json\",\n                ...headers,\n            },\n            simple: false, resolveWithFullResponse: true,\n        };\n        let response = await rp(requestOptions);\n\n        if(!fullResponse && ![200, 201, 204].includes(response.statusCode)){\n            throw new APIError(response, requestOptions);\n        }\n        if(fullResponse){\n            return response;\n        }else if(json){\n            return JSON.parse(response.body);\n        }else{\n            return response.body;\n        }\n    }\n    //Index a json endpoint that returns a {links} field.\n    static async indexPath(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        all = [...json.data];\n        while(json.links.next){\n            json = await this.makeAPIRequest({env, path_full: json.links.next});\n            all = [...all, ...json.data];\n        }\n\n        return all;\n    }\n\n    //Returns number of pages and pagination size\n    static numPages(str){\n        return /page=(\\d+)p(\\d+)/.exec(str).slice(1);\n    }\n\n    //Index a json endpoint that returns a {links} field.\n    //\n    //This function is faster than indexPath because it can guess the pages it\n    //needs to retreive so that it can request all assets at once.\n    //\n    //This function assumes that the content from the inital request is the\n    //first page, so starting on another page may cause issues. Consider\n    //indexPath for that.\n    static async indexPathFast(env, path){\n        let all = [];\n\n        let json = await this.makeAPIRequest({env, path});\n        let baselink = json.links.first;\n        const linkToPage = page => baselink.replace(\"page=1p\", `page=${page}p`);\n\n        let [numPages, pageSize] = this.numPages(json.links.last);\n        //log(`num pages: ${numPages} * ${pageSize}`);\n\n        //Construct an array of all the requests that are done simultanously.\n        //Assume that the content from the inital request is the first page.\n        let promises = [Promise.resolve(json),];\n        for(let i = 2; i <= numPages; i++){\n            let req = this.makeAPIRequest({env, path_full: linkToPage(i)});\n            promises.push(req);\n        }\n\n        for(let promise of promises){\n            all = [...all, ...(await promise).data];\n        }\n\n        return all;\n    }\n    static isLocalEnv(env){\n        return !env || env === \"LOCAL\" || env === \"LOC\";\n    }\n};\n\nexport class AbortError extends Error{\n    constructor(message){\n        super(message);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"AbortError\";\n    }\n}\n\nexport class APIError extends Error{\n    constructor(response, opts){\n        super(chalk`\n{reset Request returned} {yellow ${response.statusCode}}{\n{green ${JSON.stringify(opts)}}\n{reset ${response.body}}\n        `);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = \"ApiError\";\n    }\n}\n\nexport class UnconfiguredEnvError extends AbortError{\n    constructor(env){\n        super(\"Unconfigured enviornment: \" + env);\n        this.name = \"Unconfigured Env Error\";\n    }\n}\n\nexport class ProtectedEnvError extends AbortError{\n    constructor(env){\n        super(\"Protected enviornment: \" + env);\n        this.name = \"Protected Env Error\";\n    }\n}\n\nexport class Collection{\n    constructor(arr){\n        this.arr = arr;\n    }\n    [Symbol.iterator](){\n        return this.arr[Symbol.iterator]();\n    }\n    findById(id){\n        return this.arr.find(x => x.id == id);\n    }\n    findByName(name){\n        return this.arr.find(x => x.name == name);\n    }\n    findByNameContains(name){\n        return this.arr.find(x => x.name.includes(name));\n    }\n    log(){\n        for(let d of this) log(d.chalkPrint(true));\n    }\n    get length(){return this.arr.length;}\n}\n\n\nexport class RallyBase{\n    constructor(){}\n    resolveApply(datum, dataObj){\n        let obj = datum.findById(dataObj.id);\n        if(obj){\n            dataObj.name = obj.name\n        }\n        return obj;\n    }\n    resolveField(datum, name, isArray=false){\n        let field = this.relationships[name];\n        if(!field?.data) return;\n\n        if(isArray){\n            return field.data.map(o => this.resolveApply(datum, o));\n        }else{\n            return this.resolveApply(datum, field.data);\n        }\n    }\n}\n","\n//these are the help entries for each command\nexport let helpEntries = {};\nlet helpEntry = name => helpEntries[name] ? helpEntries[name] : (helpEntries[name] = {name});\n\n//short description\nexport function helpText(text){\n    return function(func, name){\n        helpEntry(name).text = text;\n        return func;\n    }\n}\n\n//flag type argument like -f or --file\nexport function arg(long, short, desc){\n    return function(func, name){\n        let args = helpEntry(name).args = helpEntry(name).args || [];\n        args.unshift({long, short, desc});\n        return func;\n    }\n}\n\n//normal argument\nexport function param(param, desc){\n    return function(func, name){\n        let params = helpEntry(name).params = helpEntry(name).params || [];\n        params.unshift({param, desc});\n        return func;\n    }\n}\n\n//usage string\nexport function usage(usage){\n    return function(func, name){\n        usage = usage.replace(/[\\[<](\\w+)[\\]>]/g, chalk`[{blue $1}]`);\n        helpEntry(name).usage = usage;\n        return func;\n    }\n}\n\nexport function cachedgetter(target, key, desc){\n    let cachedVal;\n\n    let oldget = desc.get;\n    desc.get = function(){\n        if(cachedVal) return cachedVal;\n        return cachedVal = oldget.call(this);\n    };\n    desc.set = function(val){\n        cachedVal = val;\n    };\n}\n\nfunction findValueInCache(args, cache){\n    for(let [argsKey, value] of cache){\n        if(args.length !== argsKey.length) continue;\n        for(let i in argsKey){\n            if(args[i] === argsKey[i]){\n                return {found: true, value};\n            }\n        }\n    }\n    return {found: false};\n}\n\n//This decorator takes a function and returns a function that remembers the\n//  value returned by given arguments\nexport function cached(target, key, desc){\n    let oldFunc = desc.value;\n    let cachedValues = [];\n    function newFunc(...args){\n        let {found, value} = findValueInCache(args, cachedValues);\n        if(!found){\n            //Call the old function to find the value, then store it in the cache\n            value = oldFunc(...args);\n            cachedValues.push([args, value]);\n        }\n        return value;\n    }\n    newFunc.clearCache = function(){\n        cachedValues = [];\n    }\n    newFunc.cachePush = function(args, value){\n        cachedValues.push([args, value]);\n    }\n\n    return {\n        ...desc,\n        value: newFunc,\n    };\n}\n\n//Access a deep property of an object: if path is [\"a\", \"b\", \"c\"], then this\n//function retuns obj.a.b.c\nfunction deepAccess(obj, path){\n    let o = obj;\n    for(let key of path){\n        if(!o) return [];\n        o = o[key];\n    }\n    return o;\n}\n\n//This takes a class as the first argument, then adds a getter/setter pair that\n//corresponds to an object in this.data\nexport function defineAssoc(classname, shortname, path){\n    path = path.split(\".\");\n    let lastKey = path.pop();\n\n    Object.defineProperty(classname.prototype, shortname, {\n        get(){\n            return deepAccess(this.data, path)[lastKey];\n        },\n        set(val){\n            deepAccess(this.data, path)[lastKey] = val;\n        },\n    });\n}\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Provider{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    //TODO env is unused...\n    async getEditorConfig(){\n        if(this.editorConfig) return this.editorConfig;\n\n        this.editorConfig = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.editorConfig\n        });\n        this.editorConfig.fileExt = await this.getFileExtension();\n        return this.editorConfig;\n    }\n    @cached static async getProviders(env){\n        let providers = await lib.indexPath(env, \"/providerTypes?page=1p50\");\n        providers = providers.sort((a, b) => {\n            return a.attributes.category.localeCompare(b.attributes.category) ||\n                   a.attributes.name    .localeCompare(b.attributes.name);\n        });\n        return new Collection(providers.map(x => new Provider(x, env)));\n    }\n\n    async getFileExtension(){\n        let config = await this.getEditorConfig();\n        let map = {\n            python: \"py\",\n            text: \"txt\",\n            getmap(key){\n                if(this.name === \"Aurora\") return \"zip\";\n                if(this[key]) return this[key];\n                return key;\n            }\n        }\n        return map.getmap(config.lang);\n    }\n\n    chalkPrint(pad=true){\n        let id = String(this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.category}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Provider, \"id\", \"id\");\ndefineAssoc(Provider, \"name\", \"attributes.name\");\ndefineAssoc(Provider, \"category\", \"attributes.category\");\n\nexport default Provider;\n","import {RallyBase, lib, AbortError, Collection} from  \"./rally-tools.js\";\nimport {basename} from \"path\";\nimport {cached, defineAssoc} from \"./decorators.js\";\nimport {configObject} from \"./config.js\";\nimport Provider from \"./providers.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet presetShell = {\n    \"attributes\": {},\n    \"relationships\": {},\n};\n\nclass Preset extends RallyBase{\n    constructor({path, remote, data}){\n        super();\n        this.remote = remote\n        if(lib.isLocalEnv(this.remote)){\n            this.path = path;\n            try{\n                this.code = this.getLocalCode();\n            }catch(e){\n                log(chalk`{red Node Error} e.message`);\n                throw new AbortError(\"Could not load code of local file\");\n            }\n            let name = this.parseFilenameForName() || this.parseCodeForName();\n            try{\n                this.data = this.getLocalMetadata();\n            }catch(e){\n                this.data = Object.assign({}, presetShell);\n            }\n            this.isGeneric = true;\n            this.ext = \"py\";\n        }else{\n            this.data = data;\n            //this.name = data.attributes.name;\n            //this.id = data.id;\n            this.isGeneric = false;\n        }\n    }\n    cleanup(){\n        delete this.relationships.organization;\n        delete this.data.id;\n        delete this.data.links;\n\n        delete this.attributes[\"createdAt\"];\n        delete this.attributes[\"updatedAt\"];\n    }\n    async acclimatize(env){\n        let providers = await Providers.getProviders(env);\n        let ptype = this.relationships[\"providerType\"].data;\n        let provider = providers.findByName(ptype.name);\n        ptype.id = provider.id;\n    }\n    async resolve(){\n        if(this.isGeneric) return;\n\n        let providers = await Provider.getProviders(this.remote);\n\n        let proType = this.resolveField(providers, \"providerType\");\n\n        this.isGeneric = true;\n\n        return {proType};\n    }\n    async saveLocal(){\n        fs.writeFileSync(this.localmetadatapath, JSON.stringify(this.data, null, 4));\n        fs.writeFileSync(this.localpath, this.code);\n    }\n    async uploadRemote(env){\n        await this.uploadCodeToEnv(env, true);\n    }\n    async save(env){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        if(lib.isLocalEnv(env)){\n            await this.saveLocal();\n        }else{\n            await this.uploadRemote(env);\n        }\n    }\n\n    async downloadCode(){\n        if(this.code) return this.code;\n        return this.code = await lib.makeAPIRequest({\n            env: this.remote,\n            path_full: this.data.links.providerData,\n            json: false,\n        });\n    }\n\n    get code(){\n        if(this._code) return this._code;\n    }\n    set code(v){this._code = v;}\n\n    chalkPrint(pad=true){\n        let id = String(\"P-\" + (this.remote && this.remote + \"-\" + this.id) || \"Local\")\n        if(pad) id = id.padStart(10);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n    parseFilenameForName(){\n        if(this.path.endsWith(\".jinja\") || this.path.endsWith(\".json\")){\n            return basename(this.path)\n                .replace(\"_\", \" \")\n                .replace(\"-\", \" \");\n        }\n    }\n\n    parseCodeForName(){\n        const name_regex = /name:\\s([\\w\\d. \\/]+)[\\r\\s\\n]*?/;\n        const match = name_regex.exec(this.code);\n        if(match) return match[1];\n    }\n    findStringsInCode(strings){\n        if(!this.code) return [];\n\n        return strings.filter(str => {\n            let regex = new RegExp(str);\n            return !!this.code.match(regex);\n        });\n    }\n    get localpath(){\n        return path.join(configObject.repodir, \"silo-metadata\", this.name + \".\" + this.ext);\n        return `${configObject.repodir}/silo-presets/${this.name}.${this.ext}`;\n    }\n    get path(){\n        if(this._path) return this._path;\n    }\n    set path(val){\n        this._path = val;\n    }\n    get localmetadatapath(){\n        return path.join(configObject.repodir, \"silo-metadata\", this.name + \".json\");\n    }\n    async uploadPresetData(env, id){\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets/${id}/providerData`,\n            body: this.code, method: \"PUT\", fullResponse: true\n        });\n        write(chalk`response {yellow ${res.statusCode}}`);\n    }\n    async uploadCodeToEnv(env, includeMetadata){\n        write(chalk`Uploading {green ${this.name}} to {green ${env}}: `);\n\n        //First query the api to see if this already exists.\n        let res = await lib.makeAPIRequest({\n            env, path: `/presets`,\n            qs: {filter: `name=${this.name}`},\n        });\n        let remote = res.data[0];\n\n        if(remote){\n            //If it exists we can replace it\n            write(\"replace, \");\n            if(includeMetadata){\n                await lib.makeAPIRequest({\n                    env, path: `/presets/${remote.id}`, method: \"PATCH\",\n                    payload: {data: {attributes: this.data.attributes, type: \"presets\"}},\n                });\n                write(\"metadata OK, \");\n            }\n\n            await this.uploadPresetData(env, remote.id);\n        }else{\n            write(\"create, \");\n            let metadata = {data: this.data};\n            await this.acclimatize(env);\n            write(\"Posting to create preset... \");\n            let res = await lib.makeAPIRequest({\n                env, path: `/presets`, method: \"POST\",\n                payload: {data: metadata},\n            });\n            let id = res.data.id;\n            write(chalk`Created id {green ${id}}... Uploading Code... `);\n            await this.uploadPresetData(env, id);\n        }\n        log();\n    }\n\n    constructMetadata(providerID){\n        return {\n            attributes: {\n                name: this.name,\n                //providerSettings: {\n                //},\n            },\n            relationships: {\n                providerType: {\n                    data: {\n                        id: providerID,\n                        type: \"providerTypes\",\n                    },\n                }\n            },\n            type: \"presets\"\n        };\n    }\n\n    getLocalMetadata(){\n        return fs.readFileSync(this.localmetadatapath, \"utf-8\");\n    }\n    getLocalCode(){\n        return fs.readFileSync(this.path, \"utf-8\");\n    }\n\n\n    @cached static async getPresets(env){\n        let data = await lib.indexPathFast(env, \"/presets?page=1p20\");\n        return new Collection(data.map(dat => new Preset({remote: env, data: dat})));\n    }\n}\n\ndefineAssoc(Preset, \"name\", \"attributes.name\");\ndefineAssoc(Preset, \"id\", \"id\");\ndefineAssoc(Preset, \"attributes\", \"attributes\");\ndefineAssoc(Preset, \"relationships\", \"relationships\");\n\nexport default Preset;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {lib, Collection} from \"./rally-tools.js\";\n\nclass Notification{\n    constructor(data, env){\n        this.data = data;\n        this.remote = env;\n    }\n    @cached static async getNotifications(env){\n        let notifications = await lib.indexPath(env, \"/notificationPresets?page=1p25\");\n        notifications = notifications.sort((a, b) => {\n            return a.attributes.type.localeCompare(b.attributes.type) ||\n                   a.attributes.name.localeCompare(b.attributes.name);\n        });\n        return new Collection(notifications.map(x => new Notification(x, env)));\n    }\n\n    chalkPrint(pad=false){\n        let id = String(\"N-\" + this.id)\n        if(pad) id = id.padStart(4);\n        return chalk`{green ${id}}: {blue ${this.type}} - {green ${this.name}}`;\n    }\n}\n\ndefineAssoc(Notification, \"id\", \"id\");\ndefineAssoc(Notification, \"name\", \"attributes.name\");\ndefineAssoc(Notification, \"address\", \"attributes.address\");\ndefineAssoc(Notification, \"type\", \"attributes.type\");\n\nexport default Notification;\n","import {cached, defineAssoc} from \"./decorators.js\";\nimport {RallyBase, lib, Collection} from  \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\n\nimport fs from \"fs\";\nimport path from \"path\";\n\nclass Rule extends RallyBase{\n    constructor(data, remote){\n        super();\n        this.data = data;\n        this.remote = remote;\n        this.isGeneric = !this.remote;\n    }\n    cleanup(){\n        for(let [key, val] of Object.entries(this.relationships)){\n            if(val.data){\n                if(val.data.id){\n                    delete val.data.id;\n                }else if(val.data[0]){\n                    for(let x of val.data) delete x.id;\n                }\n            }\n            delete val.links;\n        }\n        delete this.relationships.organization;\n        delete this.data.id;\n        delete this.data.links;\n    }\n    async save(){\n        if(!this.isGeneric){\n            await this.resolve();\n        }\n\n        this.cleanup();\n        fs.writeFileSync(this.localpath, JSON.stringify(this.data, null, 4));\n    }\n\n    get localpath(){\n        return path.join(configObject.repodir, \"silo-rules\", this.name + \".json\");\n    }\n\n    async resolve(){\n        let presets = await Preset.getPresets(this.remote);\n        let rules = await Rule.getRules(this.remote);\n        let providers = await Provider.getProviders(this.remote);\n        let notifications = await Notification.getNotifications(this.remote);\n\n        let preset  = this.resolveField(presets, \"preset\");\n        let pNext   = this.resolveField(rules, \"passNext\");\n        let eNext   = this.resolveField(rules, \"errorNext\");\n        let proType = this.resolveField(providers, \"providerType\");\n\n        let enterNotif = this.resolveField(notifications, \"enterNotifications\");\n        let errorNotif = this.resolveField(notifications, \"errorNotifications\");\n        let passNotif  = this.resolveField(notifications, \"passNotifications\");\n\n        this.isGeneric = true;\n\n        return {\n            preset, proType,\n            pNext, eNext,\n            errorNotif, enterNotif, passNotif,\n        };\n    }\n\n    chalkPrint(pad=true){\n        let id = String(\"R-\" + this.remote + \"-\" + this.id)\n        if(pad) id = id.padStart(10);\n        return chalk`{green ${id}}: {blue ${this.name}}`;\n    }\n\n    @cached static async getRules(env){\n        let rules = await lib.indexPathFast(env, \"/workflowRules?page=1p20\");\n        return new Collection(rules.map(data => new Rule(data, env)));\n    }\n}\n\ndefineAssoc(Rule, \"name\", \"attributes.name\");\ndefineAssoc(Rule, \"id\", \"id\");\ndefineAssoc(Rule, \"relationships\", \"relationships\");\n\nexport default Rule;\n","import Rule from \"./rule.js\";\nimport Preset from \"./preset.js\";\nimport Provider from \"./providers.js\";\nimport Notification from \"./notification.js\";\nimport {Collection} from \"./rally-tools.js\";\nimport {configObject} from \"./config.js\";\n\nimport fs from \"fs\";\n\nexport default class SupplyChain{\n    constructor(startingRule){\n        this.startingRule = startingRule;\n        this.remote = startingRule.remote;\n    }\n    async calculate(){\n        write(\"Getting rules... \");\n        this.allRules = await Rule.getRules(this.remote);\n        log(this.allRules.length);\n\n        write(\"Getting presets... \");\n        this.allPresets = await Preset.getPresets(this.remote);\n        log(this.allPresets.length);\n\n        write(\"Getting providers... \");\n        this.allProviders = await Provider.getProviders(this.remote);\n        log(this.allProviders.length);\n\n        write(\"Getting notifications... \");\n        this.allNotifications = await Notification.getNotifications(this.remote);\n        log(this.allNotifications.length);\n\n        write(\"Downloading code... \");\n        await Promise.all(this.allPresets.arr.map(obj => obj.downloadCode()));\n        log(\"Done!\");\n\n        //fs.writeFileSync(\"test.json\", JSON.stringify(this, null, 4))\n\n        //Now we have everything we need to find a whole supply chain\n\n        write(\"Calculating Supply chain... \");\n\n        let allRuleNames = this.allRules.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allPresetNames = this.allPresets.arr.map(x => x.name).filter(x => x.length >= 4);\n        let allNotifNames = this.allNotifications.arr.map(x => x.name).filter(x => x.length >= 4);\n        let requiredNotifications = new Set();\n\n        let ruleQueue = [this.startingRule];\n        let presetQueue = [];\n        for(let currentRule of ruleQueue){\n            let {\n                eNext, pNext, preset,\n                passNotif, errorNotif, enterNotif\n            } = await currentRule.resolve();\n\n            requiredNotifications.add(passNotif);\n            requiredNotifications.add(enterNotif);\n            requiredNotifications.add(errorNotif);\n\n            if(eNext && !ruleQueue.includes(eNext)) ruleQueue.push(eNext);\n            if(pNext && !ruleQueue.includes(eNext)) ruleQueue.push(pNext);\n\n            let neededPresets = preset.findStringsInCode(allPresetNames);\n            neededPresets = neededPresets.map(x => this.allPresets.findByName(x));\n\n            let neededRules = preset.findStringsInCode(allRuleNames);\n            neededRules = neededRules.map(x => this.allRules.findByName(x));\n\n            preset\n                .findStringsInCode(allNotifNames)\n                .map(str => this.allNotifications.findByName(str))\n                .forEach(notif => requiredNotifications.add(notif));\n\n            for(let p of neededPresets) if(!presetQueue.includes(p)) presetQueue.push(p);\n            for(let p of neededRules)   if(!ruleQueue  .includes(p)) ruleQueue  .push(p);\n\n            if(configObject.verbose){\n                write(preset.chalkPrint(false));\n                log(\":\");\n                write(\"  Pass Next: \"); if(pNext) write(pNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                write(\"  Err  Next: \"); if(eNext) write(eNext.chalkPrint(false)); else write(\"None\");\n                log(\"\");\n                log(\"  Rules:\");\n\n                for(let p of neededRules) log(\"    \" + p.chalkPrint(true));\n\n                log(\"  Presets:\");\n                for(let p of neededPresets) log(\"    \" + p.chalkPrint(true));\n\n                log(\"\\n\");\n            }\n        }\n\n        log(\"Done!\")\n\n        this.rules = new Collection(ruleQueue);\n        this.presets = new Collection(presetQueue);\n        requiredNotifications.delete(undefined);\n        this.notifications = [...requiredNotifications];\n    }\n    async syncTo(env){\n        for(let preset of this.presets){\n            await preset.save(env);\n        }\n        for(let rule of this.rules){\n            await rule.save(env);\n        }\n    }\n}\n","require(\"source-map-support\").install();\n\nimport {lib} from \"./rally-tools.js\";\nimport {cached} from \"./decorators.js\";\n\nexport {default as SupplyChain} from \"./supply-chain.js\";\nexport {default as Preset} from \"./preset.js\";\nexport {default as Rule} from \"./rule.js\";\nexport {default as Provider} from \"./providers.js\";\n\nexport * from \"./rally-tools.js\";\n\nexport const rallyFunctions = {\n    async bestPagintation(){\n        global.silentAPI = true;\n        for(let i = 10; i <= 30; i+=5){\n            console.time(\"test with \" + i);\n            let dl = await lib.indexPathFast(\"DEV\", `/workflowRules?page=1p${i}`);\n            console.timeEnd(\"test with \" + i);\n        }\n    },\n    async uploadPresets(env, presets, createFunc = ()=>false){\n        for(let preset of presets){\n            await preset.uploadCodeToEnv(env, createFunc);\n        }\n    },\n    //Dummy test access\n    async testAccess(env){\n        if(lib.isLocalEnv(env)){\n            //TODO\n            return true;\n        }\n        let result = await lib.makeAPIRequest({env, path: \"/providers?page=1p1\", fullResponse: true});\n        return result.statusCode;\n    },\n}\n","import {configObject} from \"./config.js\";\nconst inquirer = importLazy(\"inquirer\");\n\nexport async function $api(propArray){\n    const defaults = {\n        DEV:  \"https://discovery-dev.sdvi.com/api/v2\",\n        UAT:  \"https://discovery-uat.sdvi.com/api/v2\",\n        PROD: \"https://discovery.sdvi.com/api/v2\",\n    };\n\n    let q;\n    if(propArray && propArray[1]){\n        q = {envs: [propArray[1]]};\n    }else{\n        //Create a checkbox prompt to choose enviornments\n        q = await inquirer.prompt([{\n            type: \"checkbox\",\n            name: \"envs\",\n            message: `What enviornments would you like to configure?`,\n            choices: Object.keys(defaults).map(name => ({name, checked:true})),\n        }]);\n    }\n\n    //Each env should ask 2 for two things: The url and the key.\n    let questions = q.envs.map(env => {\n        let defaultKey = process.env[`rally_api_key_${env}`];\n        if(configObject && configObject.api && configObject.api[env]){\n            defaultKey = configObject.api[env].key;\n        }\n\n        return [{\n            type: \"input\",\n            name: `api.${env}.url`,\n            message: `What is the url endpoint for ${env}`,\n            default: defaults[env],\n        }, {\n            type: \"input\",\n            name: `api.${env}.key`,\n            message: `What is your api key for ${env}`,\n            default: defaultKey,\n        }];\n    });\n\n    //flatten and ask\n    questions = [].concat(...questions);\n    q = await inquirer.prompt(questions);\n    if(propArray){\n        q.api = {...configObject.api, ...q.api};\n    }\n    return q;\n}\nexport async function $chalk(propArray){\n    return {chalk: await askQuestion(\"Would you like chalk enabled (Adds coloring)?\")};\n}\nexport async function $restrictUAT(propArray){\n    return {restrictUAT: await askQuestion(\"Would you like to protect UAT?\")};\n}\nexport async function $repodir(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `repodir`,\n        message: `Where is your rally repository?`,\n        default: process.env[\"rally_repo_path\"],\n    }]);\n}\n\nexport async function $defaultEnv(propArray){\n    return await inquirer.prompt([{\n        type: \"input\",\n        name: `defaultEnv`,\n        message: `Default enviornment?`,\n        default: \"DEV\",\n    }]);\n}\n\n//Internal usage/testing\nexport async function selectProvider(env, providers){\n    let defaultProvider =  providers.find(x => x.attributes.name === \"SdviEvaluate\");\n    if(args.defaultSelect){\n        return defaultProvider;\n    }else{\n        let q = await inquirer.prompt([{\n            type: \"list\",\n            name: \"provider\",\n            default: defaultProvider,\n            choices: providers.map(x => ({\n                name: prettyPrintProvider(x),\n                value: x,\n            })),\n        }]);\n        return q.provider;\n    }\n}\n\nexport async function askQuestion(question){\n    return (await inquirer.prompt([{\n        type: \"confirm\",\n        name: \"ok\",\n        message: question,\n    }])).ok;\n}\n","require(\"source-map-support\").install();\n\nimport argparse from \"minimist\";\nimport * as allIndexBundle from \"./index.js\"\nimport {\n    rallyFunctions as funcs,\n    Preset, Rule, SupplyChain, Provider,\n    AbortError, UnconfiguredEnvError, Collection,\n} from \"./index.js\";\n\nimport {version as packageVersion} from \"../package.json\";\nimport {configFile, configObject} from \"./config.js\";\nimport {writeFileSync} from \"fs\";\n\nimport {helpText, arg, param, usage, helpEntries} from \"./decorators.js\";\n\nimport * as configHelpers from \"./config-create.js\";\n\nlet argv = argparse(process.argv.slice(2), {\n    string: [\"file\", \"env\"],\n    boolean: [\"no-protect\"],\n    alias: {\n        f: \"file\", e: \"env\",\n    }\n});\n\nfunction printHelp(help, short){\n    let helpText = chalk`\n{white ${help.name}}: ${help.text}\n    Usage: ${help.usage || \"<unknown>\"}\n`\n    //Trim newlines\n    helpText = helpText.substring(1, helpText.length-1);\n\n    if(!short){\n        for(let param of help.params || []){\n            helpText += chalk`\\n    {blue ${param.param}}: ${param.desc}`\n        }\n        for(let arg of help.args || []){\n            helpText += chalk`\\n    {blue ${arg.short}}, {blue ${arg.long}}: ${arg.desc}`\n        }\n    }\n\n    return helpText;\n}\n\nlet presetsub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n\n        let files = args.file;\n        if(typeof files === \"string\") files = [files];\n        this.files = files;\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let presets = await Preset.getPresets(this.env);\n        if(configObject.rawOutput) return presets;\n\n        log(chalk`{yellow ${presets.length}} presets on {green ${this.env}}.`);\n        for(let preset of presets) log(preset.chalkPrint());\n    },\n    async $upload(args){\n        if(!this.files){\n            throw new AbortError(\"No files provided to upload (use --file argument)\");\n        }\n\n        log(chalk`Uploading {green ${this.files.length}} preset(s) to {green ${this.env}}.`);\n\n        let presets = this.files.map(path => new Preset({path, remote: false}));\n        await funcs.uploadPresets(this.env, presets, async preset => {\n            log(\"asking... \");\n            let providers = await Provider.getProviders(this.env);\n            let provider = await configHelpers.selectProvider(this.env, providers);\n            return preset.constructMetadata(provider.id);\n        });\n    },\n    async $diff(args){\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help preset}'`);\n    },\n}\n\nlet rulesub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $list(args){\n        log(\"Loading...\");\n        let rules = await Rule.getRules(this.env);\n        if(configObject.rawOutput) return rules;\n\n        log(chalk`{yellow ${rules.length}} rules on {green ${this.env}}.`);\n        for(let rule of rules) log(rule.chalkPrint());\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help rule}'`);\n    },\n}\n\nlet supplysub = {\n    async before(args){\n        this.env = args.env;\n        if(!this.env) throw new AbortError(\"No env supplied\");\n    },\n    async $calc(args){\n        let name = args._.shift();\n        if(!name){\n            throw new AbortError(\"No starting rule supplied\");\n        }\n\n        let rules = await Rule.getRules(this.env);\n        let start = rules.findByNameContains(name);\n\n        if(!start){\n            throw new AbortError(chalk`No starting rule found by name {blue ${name}}`);\n        }\n\n        log(chalk`Analzying supply chain: ${start.chalkPrint(false)}`);\n\n        let chain = new SupplyChain(start);\n        await chain.calculate();\n        if(args[\"to\"]){\n            await chain.syncTo(args[\"to\"]);\n        }\n    },\n    async $magic(args){\n        let big = require(\"fs\").readFileSync(\"test.json\");\n        big = JSON.parse(big);\n\n        let presets = big.allPresets.arr.map(obj => {\n            let preset = new Preset({\n                data: obj.data, remote: big.remote\n            });\n            preset.code = obj._code;\n            return preset;\n        });\n        Preset.getPresets.cachePush([big.remote], new Collection(presets));\n\n        let rules = big.allRules.arr.map(obj => {\n            let rule = new Rule(\n                obj.data, big.remote\n            );\n            return rule;\n        });\n        Rule.getRules.cachePush([big.remote], new Collection(rules));\n\n        return await this.$calc(args);\n    },\n    async unknown(arg, args){\n        log(chalk`Unknown action {red ${arg}} try '{white rally help supply}'`);\n    },\n}\n\nfunction subCommand(object){\n    object = {\n        before(){}, after(){}, unknown(){},\n        ...object\n    };\n    return async function(args){\n        let arg = args._.shift();\n        let key = \"$\" + arg;\n        let ret;\n        if(object[key]){\n            await object.before(args);\n            ret = await object[key](args);\n            await object.after(args);\n        }else{\n            if(arg === undefined) arg = \"(None)\";\n            object.unknown(arg, args);\n        }\n        return ret;\n    }\n}\n\nlet cli = {\n    @helpText(`Display the help menu`)\n    @usage(`rally help [subhelp]`)\n    @param(\"subhelp\", \"The name of the command to see help for\")\n    async help(args){\n        let arg = args._.shift();\n        if(arg){\n            let help = helpEntries[arg];\n            if(!help){\n                log(chalk`No help found for '{red ${arg}}'`);\n            }else{\n                log(printHelp(helpEntries[arg]));\n            }\n        }else{\n            for(let helpArg in helpEntries){\n                log(printHelp(helpEntries[helpArg], true));\n            }\n        }\n    },\n\n    //@helpText(`Print input args, for debugging`)\n    async printArgs(args){\n        log(args);\n    },\n\n    @helpText(`Preset related actions`)\n    @usage(`rally preset [action] --env <enviornment> --file [file1] --file [file2] ...`)\n    @param(\"action\", \"The action to perform. Can be upload or list\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"-f\", \"--file\", \"A file to act on\")\n    async preset(args){\n        return subCommand(presetsub)(args);\n    },\n\n    @helpText(`Rule related actions`)\n    @usage(`rally rule [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform. Only list is supported right now\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async rule(args){\n        return subCommand(rulesub)(args);\n    },\n\n    @helpText(`supply chain related actions`)\n    @usage(`rally supply [action] --env [enviornment]`)\n    @param(\"action\", \"The action to perform.\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    async supply(args){\n        return subCommand(supplysub)(args);\n    },\n\n    @helpText(`List all available providers, or find one by name/id`)\n    @usage(`rally providers [identifier] --env [env] --raw`)\n    @param(\"identifier\", \"Either the name or id of the provider\")\n    @arg(\"-e\", \"--env\", \"The enviornment you wish to perform the action on\")\n    @arg(\"~\", \"--raw\", \"Raw output of command. If [identifier] is given, then print editorConfig too\")\n    async providers(args){\n        let env = args.env;\n        if(!env) return errorLog(\"No env supplied.\");\n        let ident = args._.shift();\n\n        let providers = await Provider.getProviders(env);\n\n        if(ident){\n            let pro = providers.arr.find(x => x.id == ident || x.name.includes(ident));\n            if(!pro){\n                log(chalk`Couldn't find provider by {green ${ident}}`);\n            }else{\n                log(pro.chalkPrint(false));\n                let econfig = await pro.getEditorConfig();\n                if(args.raw){\n                    return pro;\n                }else{\n                    if(econfig.helpText.length > 100){\n                        econfig.helpText = \"<too long to display>\";\n                    }\n                    if(econfig.completions.length > 5){\n                        econfig.completions = \"<too long to display>\";\n                    }\n                    log(econfig);\n                }\n            }\n        }else{\n            if(args.raw) return providers;\n            for(let pro of providers) log(pro.chalkPrint());\n        }\n    },\n    @helpText(`Change config for rally tools`)\n    @usage(\"rally config [key] --set [value] --raw\")\n    @param(\"key\", chalk`Key you want to edit. For example, {green chalk} or {green api.DEV}`)\n    @arg(\"~\", \"--set\", \"If this value is given, no interactive prompt will launch and the config option will change.\")\n    @arg(\"~\", \"--raw\", \"Raw output of json config\")\n    async config(args){\n        let prop = args._.shift();\n        let propArray = prop && prop.split(\".\");\n\n        //if(!await configHelpers.askQuestion(`Would you like to create a new config file in ${configFile}`)) return;\n        let newConfigObject;\n\n        if(!prop){\n            if(configObject.rawOutput) return configObject;\n            log(\"Creating new config\");\n            newConfigObject = {\n                ...configObject,\n            };\n            for(let helperName in configHelpers){\n                if(helperName.startsWith(\"$\")){\n                    newConfigObject = {\n                        ...newConfigObject,\n                        ...(await configHelpers[helperName](false))\n                    }\n                }\n            }\n        }else{\n            log(chalk`Editing option {green ${prop}}`);\n            if(args.set){\n                newConfigObject = {\n                    ...configObject,\n                    [prop]: args.set,\n                };\n            }else{\n                let ident = \"$\" + propArray[0];\n\n                if(configHelpers[ident]){\n                    newConfigObject = {\n                        ...configObject,\n                        ...(await configHelpers[ident](propArray))\n                    };\n                }else{\n                    log(chalk`No helper for {red ${ident}}`);\n                    return;\n                }\n            }\n        }\n\n        newConfigObject.hasConfig = true;\n\n        //Create readable json and make sure the user is ok with it\n        let newConfig = JSON.stringify(newConfigObject, null, 4);\n        log(newConfig);\n\n        //-y or --set will make this not prompt\n        if(!args.y && !args.set && !await configHelpers.askQuestion(\"Write this config to disk?\")) return;\n        writeFileSync(configFile, newConfig, {mode: 0o600});\n        log(chalk`Created file {green ${configFile}}.`);\n    },\n    noop(){\n        return true;\n    }\n};\nasync function unknownCommand(cmd){\n    log(chalk`Unknown command {red ${cmd}}.`);\n}\n\nasync function noCommand(){\n    write(chalk`\nRally Tools {yellow v${packageVersion} (alpha)} CLI\nby John Schmidt <John_Schmidt@discovery.com>\n`);\n    if(!configObject.hasConfig){\n        write(chalk`\nIt looks like you haven't setup the config yet. Please run '{green rally config}'.\n`);\n        return;\n    }\n    for(let env of [\"UAT\", \"DEV\", \"PROD\", \"LOCAL\"]){\n        //Test access. Returns HTTP response code\n        let resultStr;\n        try{\n            let result = await funcs.testAccess(env);\n\n            //Create a colored display and response\n            resultStr = chalk`{yellow ${result} <unknown>}`;\n            if(result === 200) resultStr = chalk`{green 200 OK}`;\n            else if(result === 401) resultStr = chalk`{red 401 No Access}`;\n            else if(result >= 500)  resultStr = chalk`{yellow ${result} API Down?}`;\n            else if(result === true) resultStr = chalk`{green OK}`;\n            else if(result === false) resultStr = chalk`{red BAD}`;\n        }catch(e){\n            if(!e instanceof UnconfiguredEnvError) throw e;\n            resultStr = chalk`{yellow Unconfigured}`;\n        }\n\n        log(chalk`   ${env}: ${resultStr}`);\n    }\n}\n\nasync function $main(){\n    chalk.enabled = configObject.hasConfig ? configObject.chalk : true;\n    if(chalk.level === 0 || !chalk.enabled){\n        let force = argv[\"force-color\"];\n        if(force){\n            chalk.enabled = true;\n            if(force === true && chalk.level === 0){\n                chalk.level = 1;\n            }else if(Number(force)){\n                chalk.level = Number(force);\n            }\n        }\n    }\n\n    configObject.dangerModify = argv[\"no-protect\"];\n    if(argv[\"raw\"]){\n        configObject.rawOutput = true;\n        global.log = ()=>{};\n        global.errorLog = ()=>{};\n        global.write = ()=>{};\n    }\n\n    if(configObject.defaultEnv){\n        argv.env = argv.env || configObject.defaultEnv;\n    }\n\n    if(argv[\"verbose\"]){\n        configObject.verbose = argv[\"verbose\"]\n    }\n\n    argv._old = argv._.slice();\n    let func = argv._.shift();\n    if(func){\n        if(!cli[func]) return await unknownCommand(func);\n        try{\n            //Call the cli function\n            let ret = await cli[func](argv);\n            if(ret){\n                write(chalk.white(\"CLI returned: \"));\n                console.log(JSON.stringify(ret, null, 4));\n            }\n        }catch(e){\n            if(e instanceof AbortError){\n                log(chalk`{red CLI Aborted}: ${e.message}`);\n            }else{\n                throw e;\n            }\n        }\n    }else{\n        await noCommand();\n    }\n}\n\nasync function main(...args){\n    try{\n        await $main(...args);\n    }catch(e){\n        errorLog(e.stack);\n    }\n}\n\nif(require.main === module){\n    main();\n}else{\n    module.exports = allIndexBundle;\n}\n"],"names":["configFile","homedir","configObject","json","readFileSync","JSON","parse","e","code","hasConfig","rp","importLazy","global","chalk","log","text","console","write","process","stdout","errorLog","red","lib","makeAPIRequest","config","api","env","UnconfiguredEnvError","method","dangerModify","restrictUAT","ProtectedEnvError","rally_api_key","key","rally_api","url","path_full","path","body","payload","stringify","logAPI","qs","requestOptions","headers","response","fullResponse","includes","statusCode","APIError","indexPath","all","numPages","pageSize","links","last","data","next","str","exec","slice","indexPathFast","baselink","first","linkToPage","page","replace","promises","Promise","resolve","i","req","push","promise","isLocalEnv","AbortError","Error","message","captureStackTrace","constructor","name","opts","Collection","arr","Symbol","iterator","id","find","x","d","chalkPrint","length","RallyBase","datum","dataObj","obj","findById","isArray","field","relationships","map","o","resolveApply","helpEntries","helpEntry","helpText","func","arg","long","short","desc","args","unshift","param","params","usage","findValueInCache","cache","argsKey","value","cached","target","oldFunc","cachedValues","newFunc","found","clearCache","cachePush","deepAccess","defineAssoc","classname","shortname","split","lastKey","pop","defineProperty","prototype","val","Provider","remote","getEditorConfig","editorConfig","fileExt","getFileExtension","getProviders","providers","sort","a","b","attributes","category","localeCompare","getmap","lang","pad","String","padStart","presetShell","Preset","getLocalCode","parseFilenameForName","parseCodeForName","getLocalMetadata","Object","assign","isGeneric","ext","organization","acclimatize","Providers","ptype","provider","findByName","proType","resolveField","saveLocal","writeFileSync","localmetadatapath","localpath","uploadRemote","uploadCodeToEnv","save","cleanup","downloadCode","providerData","_code","v","endsWith","basename","name_regex","match","strings","filter","regex","RegExp","join","repodir","_path","uploadPresetData","res","includeMetadata","metadata","providerID","fs","getPresets","dat","Notification","getNotifications","notifications","type","Rule","entries","presets","rules","getRules","preset","pNext","eNext","enterNotif","errorNotif","passNotif","SupplyChain","startingRule","calculate","allRules","allPresets","allProviders","allNotifications","allRuleNames","allPresetNames","allNotifNames","requiredNotifications","Set","ruleQueue","presetQueue","currentRule","add","neededPresets","findStringsInCode","neededRules","forEach","notif","p","verbose","delete","undefined","syncTo","rule","require","install","rallyFunctions","bestPagintation","silentAPI","time","dl","timeEnd","uploadPresets","createFunc","testAccess","result","inquirer","$api","propArray","defaults","q","prompt","keys","questions","envs","defaultKey","concat","$chalk","askQuestion","$restrictUAT","$repodir","$defaultEnv","selectProvider","defaultProvider","defaultSelect","prettyPrintProvider","question","ok","argv","argparse","printHelp","help","substring","presetsub","before","files","file","$list","rawOutput","$upload","funcs","configHelpers","constructMetadata","$diff","unknown","rulesub","supplysub","$calc","_","shift","start","findByNameContains","chain","$magic","big","subCommand","object","ret","after","cli","helpArg","printArgs","supply","ident","pro","econfig","raw","completions","prop","newConfigObject","helperName","startsWith","set","newConfig","y","unknownCommand","cmd","noCommand","packageVersion","resultStr","$main","enabled","level","force","Number","defaultEnv","_old","white","main","stack","module","exports","allIndexBundle"],"mappings":"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"}